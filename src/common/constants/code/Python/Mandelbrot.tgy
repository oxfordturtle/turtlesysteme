# Mandelbrot

maxcol: int = 40
scale: int = 250
pixels: int = 750
xcentre: int = -500000 # millionths
ycentre: int = 0 # millionths
xstart: int = divmult(xcentre, 1000000, scale) - pixels / 2
ystart: int = divmult(ycentre, 1000000, scale) - pixels / 2
xfinish: int = xstart + pixels - 1
yfinish: int = ystart + pixels - 1
x: int
y: int
iterations: int
temp: int
canvas(xstart, ystart, pixels, pixels)
resolution(pixels, pixels)
timeset(0)
for a in range(xstart, xfinish + 1, 1):
  noupdate()
  for b in range(ystart, yfinish + 1, 1):
    x = a
    y = b
    iterations = 0
    while ((hypot(x, y, 1) < 2 * scale) and (iterations <= maxcol)):
      temp = divmult(x + y, scale, x - y)
      y = divmult(2 * x, scale, y) + b
      x = temp + a
      iterations = iterations + 1
    if (iterations > maxcol):
      pixset(a, b, black)
    else:
      pixset(a, b, rgb(iterations + 1))
  update()
writeline('Resolution: ' + str(scale * 3) + ' Time taken: ' + qstr(time(), 1000, 1) + ' seconds.')
