# GravitySteps

def steps(s: int):
  size: int = 1000 / s
  setxy(0, 1000)
  thickness(1)
  for count in range(0, s * 2, 1):
    if count % 2 == 1:
      movexy(0, -size)
    else:
      movexy(size, 0)
  movexy(0, s * size)
  movexy(-s * size, 0)
  colour(blue)
  polygon(s * 2 + 2)

def throwball(xvel: int, yvel: int, gravity: int, floor: int):
  global turty
  turty = turty - 1
  while (turty != floor):
    colour(white)
    blot(25)
    movexy(xvel, yvel)
    yvel = yvel + gravity
    if turty > floor:
      turty = floor
    colour(red)
    blot(24)
    update()
    pause(10)
    noupdate()

steps(10)
setxy(950, 75)
while not(turtx < 75):
  throwball(-2, -22, 1, turty + 100)
for bounce in range(0, 10, 1):
  throwball(0, bounce * 2 - 18, 1, turty)
