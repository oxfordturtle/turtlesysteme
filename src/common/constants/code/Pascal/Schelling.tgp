PROGRAM Schelling;
CONST width = 50;
      height = 50;
      empty = green;
VAR test, tryi, tryj: integer;
    this, i, j: integer;

  Function happy(x, y, c: integer): boolean;
  Var like, unlike, neighbour, i, j: integer;
  Begin
    like := 0;
    unlike := 0;
    for i := -1 to 1 do
      for j := -1 to 1 do
        if (i <> 0) or (j <> 0) then
          begin
            neighbour := pixcol(x + i, y + j);
            if neighbour <> empty then
              begin
                if neighbour = c then
                  inc(like)
                else
                  inc(unlike)
              end
          end;
    result := (like >= unlike - 1)
  End;

BEGIN
  canvas(-1, -1, width + 2, height + 2);
  resolution(width + 2, height + 2);
  noupdate;
  blank(empty);
  for i := 0 to width - 1 do
    for j := 0 to height - 1 do
      begin
        test := random(25);
        if test = 0 then
          pixset(i, j, empty)
        else
          begin
            if (i + j) mod 2 = 0 then
              pixset(i, j, red)
            else
              pixset(i, j, blue)
          end
      end;
  pause(2000);
  while ?key <> \escape do
    begin
      noupdate;
      repeat
        tryi := random(width);
        tryj := random(height);
        this := pixcol(tryi, tryj)
      until (this <> empty) and (not(happy(tryi, tryj, this)));
      pixset(tryi, tryj, empty);
      repeat
        tryi := random(width);
        tryj := random(height)
      until (pixcol(tryi, tryj) = empty) and happy(tryi, tryj, this);
      pixset(tryi, tryj, this);
      update
    end
END.
