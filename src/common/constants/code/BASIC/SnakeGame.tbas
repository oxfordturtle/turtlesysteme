REM SnakeGame

CONST BOARDSIZE% = 30
CONST SNAKECOLOUR% = PURPLE
CONST APPLECOLOUR% = GREEN
CANVAS(0, 0, BOARDSIZE%, BOARDSIZE%)
RESOLUTION(BOARDSIZE%, BOARDSIZE%)
ANGLES(4)
BLANK(LIGHTBLUE)
CURSOR(0)
COLOUR(SNAKECOLOUR%)
THICKNESS(1)
PENUP
FORWARD(1)
snakelength% = 2
PROCnewapple
crash% = FALSE
REPEAT
  NOUPDATE
  IF (ABS(?KEY) = \UP) AND (turtd% <> 2) THEN DIRECTION(0)
  IF (ABS(?KEY) = \RIGHT) AND (turtd% <> 3) THEN DIRECTION(1)
  IF (ABS(?KEY) = \DOWN) AND (turtd% <> 0) THEN DIRECTION(2)
  IF (ABS(?KEY) = \LEFT) AND (turtd% <> 1) THEN DIRECTION(3)
  FORWARD(1)
  IF (turtx% < 0) OR (turtx% >= BOARDSIZE%) OR (turty% < 0) OR (turty% >= BOARDSIZE%) THEN crash% = TRUE
  IF PIXCOL(turtx%, turty%) = SNAKECOLOUR% THEN crash% = TRUE
  IF PIXCOL(turtx%, turty%) = APPLECOLOUR% THEN
    INC(snakelength%)
    PIXSET(turtx%, turty%, SNAKECOLOUR%)
    PROCnewapple
  ENDIF
  COLOUR(LIGHTBLUE)
  POLYLINE(snakelength% + 2)
  COLOUR(SNAKECOLOUR%)
  POLYLINE(snakelength%)
  UPDATE
  PAUSE(250 - (snakelength% * 3))
UNTIL crash%
RESOLUTION(1000, 1000)
BLANK(LILAC)
SETXY(BOARDSIZE% / 4, 2 * BOARDSIZE% / 5)
PRINT("Score " + STR$(snakelength% - 2), 20, 100)
END

DEF PROCnewapple
  LOCAL x%, y%
  REPEAT
    x% = RND(BOARDSIZE%) - 1
    y% = RND(BOARDSIZE%) - 1
  UNTIL (PIXCOL(x%, y%) <> SNAKECOLOUR%)
  PIXSET(x%, y%, APPLECOLOUR%)
ENDPROC
