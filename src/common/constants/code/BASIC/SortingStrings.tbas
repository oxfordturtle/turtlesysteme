REM Sorting

CONST METHODS% = 4
CONST N% = 100
CONST COLS% = 10
CONST TRIES% = 10
CONST CHECKING% = TRUE
DIM a$(N%)
DIM caption$(METHODS%)
DIM comptotal%(METHODS%)
DIM swaptotal%(METHODS%)
OUTPUT(TRUE, WHITE, TRUE)

OUTPUT(TRUE, WHITE, TRUE)
PROCsetup
PROCinit
WRITELN(STR$(METHODS%) + " sorting methods will be compared, each of them being used to")
WRITELN("sort randomised arrays of " + STR$(N%) + " items (" + STR$(TRIES%) + " times), while keeping")
WRITELN("track of the numbers of comparisons and swaps required.")
IF CHECKING% THEN
  WRITELN("If sorting fails, the program will halt and show the array.")
  WRITELN("")
ENDIF
PROClist
WRITELN("")
FOR round% = 1 TO TRIES%
  FOR m% = 1 TO METHODS%
    PROCrandomise
    PROCsort(m%)
    comptotal%(m%) = comptotal%(m%) + comps%
    swaptotal%(m%) = swaptotal%(m%) + swaps%
  NEXT
  WRITELN("")
NEXT
OUTPUT(TRUE, CREAM, TRUE)
WRITELN("Averages from sorting " + STR$(N%) + " items, over " + STR$(TRIES%) + " trials")
WRITELN("")
WRITELN("               COMPARISONS    SWAPS")
FOR m% = 1 TO METHODS%
  WRITE(PAD(caption$(m%), " ", -17) + PAD(QSTR$(comptotal%(m%), TRIES%, 1), " ", 7))
  WRITELN(PAD(QSTR$(swaptotal%(m%), TRIES%, 1), " ", 11))
NEXT
WRITELN("")
PROClist
END

DEF PROCsetup
  caption$(1) = "Bubblesort:"
  caption$(2) = "Selectionsort:"
  caption$(3) = "Insertionsort:"
  caption$(4) = "Quicksort:"
ENDPROC

DEF FNrandword$
  LOCAL i%, result$
  result$ = ""
  FOR i% = 1 TO 3
    result$ = result$ + CHR$(ASC("a") + RND(26) - 1)
  NEXT
= result$

DEF PROCinit
  LOCAL i%
  FOR i% = 1 TO N%
    a$(i%) = FNrandword$
  NEXT
  FOR i% = 1 TO METHODS%
    comptotal%(i%) = 0
    swaptotal%(i%) = 0
  NEXT
ENDPROC

DEF FNlessthan(x$, y$)
  INC(comps%)
= (x$ < y$)

DEF PROCswap(x%, y%)
  LOCAL t$
  t$ = a$(x%)
  a$(x%) = a$(y%)
  a$(y%) = t$
  INC(swaps%)
ENDPROC

DEF FNordered
  LOCAL i%, result%
  result% = TRUE
  FOR i% = 2 TO N%
    IF a$(i% - 1) > a$(i%) THEN result% = FALSE
  NEXT
= result%

DEF PROClist
  LOCAL i%
  WRITE("     ")
  FOR i% = 1 TO N%
    WRITE(a$(i%) + " ")
    IF i% MOD COLS% = 0 THEN
      WRITELN("")
      WRITE("     ")
    ENDIF
  NEXT
  WRITELN("")
ENDPROC

DEF PROCrandomise
  LOCAL i%, j%
  FOR i% = 1 TO N%
    j% = RND(N%)
    PROCswap(i%, j%)
  NEXT
ENDPROC

DEF PROCbubblesort
  LOCAL i%, j%
  FOR i% = 1 TO N%
    FOR j% = 1 TO N% - 1
      IF FNlessthan(a$(j% + 1), a$(j%)) THEN PROCswap(j%, j% + 1)
    NEXT
  NEXT
ENDPROC

DEF PROCselectionsort
  LOCAL i%, j%, lowsofar%
  FOR i% = 1 TO N%
    lowsofar% = i%
    FOR j% = i% + 1 TO N%
      IF FNlessthan(a$(j%), a$(lowsofar%)) THEN lowsofar% = j%
    NEXT
    IF lowsofar% <> i% THEN PROCswap(i%, lowsofar%)
  NEXT
ENDPROC

DEF PROCinsertionsort
  LOCAL i%, j%
  FOR i% = 2 TO N%
    j% = i%
    WHILE (j% > 1) AND FNlessthan(a$(j%), a$(j% - 1))
      PROCswap(j% - 1, j%)
      DEC(j%)
    ENDWHILE
  NEXT
ENDPROC

DEF PROCqsort(left%, right%)
  LOCAL m%, i%
  IF left% < right% THEN
    m% = left%
    FOR i% = left% + 1 TO right%
      IF FNlessthan(a$(i%), a$(left%)) THEN
        INC(m%)
        PROCswap(m%, i%)
      ENDIF
    NEXT
    PROCswap(left%, m%)
    PROCqsort(left%, m% - 1)
    PROCqsort(m% + 1, right%)
  ENDIF
ENDPROC

DEF PROCquicksort
  PROCqsort(1, N%)
ENDPROC

DEF PROCsort(method%)
  comps% = 0
  swaps% = 0
  IF method% = 1 THEN
    PROCbubblesort
  ELSE
    IF method% = 2 THEN
      PROCselectionsort
    ELSE
      IF method% = 3 THEN
        PROCinsertionsort
      ELSE
        IF method% = 4 THEN
          PROCquicksort
        ENDIF
      ENDIF
    ENDIF
  ENDIF
  WRITE(PAD(caption$(method%), " ", -17) + PAD(STR$(comps%), " ", 4) + " comparisons")
  WRITELN(PAD(STR$(swaps%), " ", 6) + " swaps%")
  IF CHECKING% THEN
    IF NOT(FNordered) THEN
      WRITELN("     Sort failed:")
      PROClist
      HALT
    ENDIF
  ENDIF
ENDPROC
