PROGRAM Automata;
CONST width = 100;
      height = 100;
VAR n, rule: integer;
    x, generation: integer;
    cellcol: array[0..1] of integer;
    nextstate: array[0..7] of integer;

  Procedure setup(rulecode: integer);
  Var nhood: integer;
  Begin
    for nhood := 0 to 7 do
      begin
        nextstate[nhood] := rulecode mod 2;
        rulecode := rulecode div 2
      end
  End;

  Procedure nextgen(g: integer);
  Var x, xmod, thispix: integer;
      n1, n2, n3: integer;
  Begin
    for x := -1 to width do
      begin
        xmod := (x + width) mod width;
        thispix := pixcol(xmod, g - 1) and 1;
        n3 := n2 * 2 + thispix;
        n2 := n1 * 2 + thispix;
        n1 := thispix;
        if x > 0 then
          pixset(x - 1, g, cellcol[nextstate[n3]])
      end
  End;

BEGIN
  canvas(0, 0, width, height);
  resolution(width, height);
  cellcol[0] := $FFFFFE;
  cellcol[1] := $000001;
  for n := 4 to 45 do
    begin
      rule := n * 4 + 2;
      setup(rule);
      noupdate;
      blank(white);
      for x := 0 to width - 1 do
        pixset(x, 0, cellcol[random(2)]);
      for generation := 1 to height - 1 do
        nextgen(generation);
      setxy(0, height - 15);
      box(25 + length(str(rule)) * 7, 14, cream, false);
      print('Rule ' + str(rule), 4, 8);
      update;
      pause(500)
    end
END.
