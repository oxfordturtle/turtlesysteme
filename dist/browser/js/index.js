!function(e){var t={};function a(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,a),o.l=!0,o.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)a.d(n,o,function(t){return e[t]}.bind(null,o));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=11)}([function(e,t,a){"use strict";a.d(t,"b",function(){return o}),a.d(t,"a",function(){return r});const n=(e,t,a)=>({code:e,args:t,str:a}),o=[n(0,0,"NULL"),n(1,0,"DUPL"),n(2,0,"SWAP"),n(3,0,"ROTA"),n(4,0,"INCR"),n(5,0,"DECR"),void 0,void 0,n(8,0,"NOT"),n(9,0,"AND"),n(10,0,"OR"),n(11,0,"XOR"),void 0,void 0,void 0,void 0,n(16,0,"NEG"),n(17,0,"ABS"),n(18,0,"SIGN"),n(19,0,"RAND"),void 0,void 0,void 0,void 0,n(24,0,"PLUS"),n(25,0,"SUBT"),n(26,0,"MULT"),n(27,0,"DIVR"),n(28,0,"DIV"),n(29,0,"MOD"),void 0,void 0,n(32,0,"DIVM"),n(33,0,"SQRT"),n(34,0,"HYP"),n(35,0,"ROOT"),n(36,0,"POWR"),n(37,0,"LOG"),n(38,0,"ALOG"),n(39,0,"LN"),n(40,0,"EXP"),n(41,0,"SIN"),n(42,0,"COS"),n(43,0,"TAN"),n(44,0,"ASIN"),n(45,0,"ACOS"),n(46,0,"ATAN"),n(47,0,"PI"),n(48,0,"CTOS"),n(49,0,"ITOS"),n(50,0,"HEXS"),n(51,0,"SVAL"),n(52,0,"QTOS"),n(53,0,"QVAL"),n(54,0,"SCAT"),n(55,0,"SLEN"),n(56,0,"CASE"),n(57,0,"COPY"),n(58,0,"DELS"),n(59,0,"INSS"),n(60,0,"POSS"),n(61,0,"REPL"),void 0,void 0,n(64,0,"EQAL"),n(65,0,"NOEQ"),n(66,0,"LESS"),n(67,0,"MORE"),n(68,0,"LSEQ"),n(69,0,"MREQ"),n(70,0,"MAXI"),n(71,0,"MINI"),n(72,0,"SEQL"),n(73,0,"SNEQ"),n(74,0,"SLES"),n(75,0,"SMOR"),n(76,0,"SLEQ"),n(77,0,"SMEQ"),n(78,0,"SMAX"),n(79,0,"SMIN"),n(80,1,"LDIN"),n(81,1,"LDVG"),n(82,2,"LDVV"),n(83,2,"LDVR"),n(84,1,"LDAG"),n(85,2,"LDAV"),void 0,n(87,-1,"LSTR"),n(88,0,"LDMT"),void 0,void 0,void 0,void 0,void 0,void 0,void 0,n(96,2,"ZERO"),n(97,1,"STVG"),n(98,2,"STVV"),n(99,2,"STVR"),void 0,void 0,void 0,void 0,n(104,0,"STMT"),void 0,void 0,void 0,void 0,void 0,void 0,void 0,n(112,0,"LPTR"),n(113,0,"SPTR"),n(114,0,"CPTR"),n(115,0,"ZPTR"),void 0,void 0,void 0,void 0,n(120,0,"TEST"),n(121,0,"CSTR"),void 0,void 0,void 0,void 0,void 0,void 0,n(128,1,"JUMP"),n(129,1,"IFNO"),n(130,0,"HALT"),void 0,void 0,void 0,void 0,void 0,n(136,1,"SUBR"),n(137,0,"RETN"),void 0,void 0,n(140,1,"PSSR"),n(141,0,"PLSR"),n(142,0,"PSRJ"),n(143,0,"PLRJ"),n(144,2,"MEMC"),n(145,1,"MEMR"),n(146,0,"HFIX"),n(147,0,"HCLR"),n(148,0,"HRST"),void 0,void 0,void 0,n(152,-2,"NEWT"),n(153,-2,"OLDT"),n(154,-2,"RNDC"),n(155,-2,"TEXL"),n(156,-2,"UPPC"),n(157,-2,"LOWC"),n(158,-2,"LEFS"),n(159,-2,"RGTS"),n(160,0,"PNUP"),n(161,0,"PNDN"),n(162,0,"UDAT"),n(163,0,"NDAT"),n(164,0,"KECH"),void 0,n(166,0,"OUTP"),n(167,0,"CONS"),n(168,0,"TRAC"),n(169,0,"MEMW"),n(170,0,"DUMP"),n(171,-2,"SVD0"),n(172,-2,"BOOL"),n(173,-2,"ILIN"),void 0,void 0,n(176,0,"TIME"),n(177,0,"TSET"),n(178,0,"WAIT"),n(179,0,"TDET"),void 0,void 0,void 0,void 0,n(184,0,"INPT"),n(185,0,"ICLR"),n(186,0,"BUFR"),n(187,0,"READ"),n(188,0,"RDLN"),n(189,0,"PRNT"),n(190,0,"TEXT"),n(191,0,"NEWL"),n(192,0,"FDIR"),n(193,0,"OPEN"),n(194,0,"CLOS"),n(195,0,"FPTR"),n(196,0,"FBEG"),n(197,0,"EOF"),n(198,0,"FRDS"),n(199,0,"FRLN"),n(200,0,"FWRS"),n(201,0,"FWNL"),void 0,void 0,void 0,void 0,void 0,void 0,n(208,0,"CANV"),n(209,0,"RESO"),n(210,0,"PIXC"),n(211,0,"PIXS"),n(212,0,"ANGL"),n(213,0,"CURS"),void 0,void 0,n(216,0,"HOME"),n(217,0,"SETX"),n(218,0,"SETY"),n(219,0,"SETD"),n(220,0,"THIK"),n(221,0,"COLR"),n(222,0,"RGB"),n(223,0,"MIXC"),n(224,0,"TOXY"),n(225,0,"MVXY"),n(226,0,"DRXY"),n(227,0,"FWRD"),n(228,0,"BACK"),n(229,0,"LEFT"),n(230,0,"RGHT"),n(231,0,"TURN"),void 0,void 0,void 0,void 0,n(236,0,"RMBR"),n(237,0,"FRGT"),void 0,void 0,n(240,0,"POLY"),n(241,0,"PFIL"),n(242,0,"CIRC"),n(243,0,"BLOT"),n(244,0,"ELPS"),n(245,0,"EBLT"),n(246,0,"BOX"),void 0,n(248,0,"BLNK"),void 0,void 0,void 0,n(252,0,"RCOL"),n(253,0,"FILL"),void 0,n(255,0,"MXIN")],r=o.filter(e=>void 0!==e).reduce((e,t)=>(e[t.str.toLowerCase()]=t.code,e),{})},function(e,t,a){"use strict";a.d(t,"a",function(){return n}),a.d(t,"c",function(){return o}),a.d(t,"d",function(){return r}),a.d(t,"f",function(){return s}),a.d(t,"e",function(){return i}),a.d(t,"b",function(){return c});const n=(e,t={})=>{const a=document.createElement(e);return Object.keys(t).forEach(e=>{switch(e){case"classes":t.classes.forEach(e=>a.classList.add(e));break;case"content":"string"==typeof t.content?a.innerHTML=t.content:t.content.forEach(e=>{"string"==typeof e?a.appendChild(document.createTextNode(e)):a.appendChild(e)});break;case"value":a.value=t.value;break;case"on":t.on.forEach(e=>{a.addEventListener(e.type,e.callback)});break;default:a.setAttribute(e,t[e])}}),a},o=e=>`#${r(e.toString(16))}`,r=e=>e.length<6?r(`0${e}`):e,s=(e,t)=>n("div",{classes:["tsx-tabs",e],content:[u(t),m(t)]}),i=e=>{l(document.querySelector(`[data-target="${e}"]`)),l(document.getElementById(e))},c=({url:e,success:t,error:a})=>{const n=new window.XMLHttpRequest;n.onreadystatechange=(()=>{4===n.readyState&&(200===n.status?t(n.responseText):a(n.status))}),n.open("GET",e),n.send()},l=e=>{if(e){Array.from(e.parentElement.children).forEach(e=>e.classList.remove("active")),e.classList.add("active")}},d=e=>n("a",{classes:e.active?["tsx-tab","active"]:["tsx-tab"],content:e.label,"data-target":e.label.replace(/ /g,""),on:[{type:"click",callback:e=>{l(e.currentTarget),l(document.getElementById(e.currentTarget.getAttribute("data-target")))}}]}),u=e=>n("nav",{classes:["tsx-tab-list"],content:e.map(d)}),p=e=>n("div",{classes:e.active?["tsx-tab-pane","active"]:["tsx-tab-pane"],content:e.content,id:e.label.replace(/ /g,"")}),m=e=>n("div",{classes:["tsx-tab-panes"],content:e.map(p)})},function(e,t,a){"use strict";var n=a(6);t.a=((e,t)=>Object(n.a)(e,t).map(o).join(""));const o=e=>`<span class="tsx-${e.type}">${e.content}</span>`},function(e,t,a){"use strict";var n=a(1),o=a(4),r=a(7),s=a(5);const i=(e,t)=>` ${t.line.toString(10)}`,c=(e,t)=>e+t.count,l=(e,t,a)=>{const n=a.expressions.filter(((e,t,a)=>{const n=a.name||a.names[e];return t.filter(e=>e.content===n).length>0}).bind(null,e,t)).map(((e,t,a)=>{const n=a.name||a.names[e],o=t.filter(e=>e.content===n);return{name:n,level:a.level+1,count:o.length,lines:o.reduce(i,"").trim()}}).bind(null,e,t));return{title:a.title,expressions:n,total:n.reduce(c,0)}};var d=(e,t)=>{const a=t?new Error(e.replace("{lex}",`"${t.content}"`)):new Error(e);return a.lexeme=t,a.type="Compiler",a},u=a(6);const p=["Unterminated comment.","Unterminated string.","Binary numbers in Turtle BASIC begin with '%'.","Binary numbers in Turtle Pascal begin with '%'.","Binary numbers in Turtle Python begin with '0b'.","Turtle BASIC does not support octal numbers.","Octal numbers in Turtle Pascal begin with '&'","Octal numbers in Turtle Python begin with '0o'","Hexadecimal numbers in Turtle BASIC begin with '&'","Hexadecimal numbers in Turtle Pascal begin with '$'","Hexadecimal numbers in Turtle Python begin with '0x'","The Turtle System does not support real numbers.","Illegal character in this context."],m=(e,t,a,n)=>({type:h(e.type,e.content),content:"Pascal"===n?e.content.toLowerCase():e.content,value:b(e.type,e.content,n),line:t,offset:a}),h=(e,t)=>{switch(e){case"binary":case"octal":case"hexadecimal":case"decimal":return"integer";case"command":case"colour":case"custom":case"variable":return"identifier";default:return e}},b=(e,t,a)=>{switch(e){case"operator":switch(t.toLowerCase()){case"+":return"plus";case"-":return"subt";case"*":return"mult";case"/":return"divr";case"div":case"//":return"div";case"mod":case"%":return"mod";case"=":case"==":return"eqal";case"<>":case"!=":return"noeq";case"<=":return"lseq";case">=":return"mreq";case"<":return"less";case">":return"more";case"not":return"not";case"and":return"and";case"or":return"or";case"xor":case"eor":return"xor";default:return null}case"string":return t.slice(1,-1).replace(/''/g,"'").replace(/\\('|")/g,"$1");case"boolean":return"true"===t.toLowerCase()?-1:0;case"binary":return"Python"===a?parseInt(t.slice(2),2):parseInt(t.slice(1),2);case"octal":return"Python"===a?parseInt(t.slice(2),8):parseInt(t.slice(1),8);case"hexadecimal":return"Python"===a?parseInt(t.slice(2),16):parseInt(t.slice(1),16);case"decimal":return parseInt(t);case"turtle":return["x","y","d","t","c"].indexOf(t[4].toLowerCase())+1;default:return null}};var g=(e,t,a)=>{if("null"!==e&&t!==e&&("string"!==e||"char"!==t)&&("boolint"!==e||"boolean"!==t&&"integer"!==t)&&("boolint"!==t||"boolean"!==e&&"integer"!==e))throw d(`Type error: '${e}' expected but '${t}' found.`,a)};const f=e=>e.parent?f(e.parent):e,y=(e,t,a)=>O(e,"constants",t,a),x=(e,t,a)=>{const n=("BASIC"===a?["TURTX%","TURTY%","TURTD%","TURTT%","TURTC%"]:["turtx","turty","turtd","turtt","turtc"]).indexOf(t)+1,o=e.index>0&&e.globals.indexOf(t)>-1;return n>0?{turtle:n,fulltype:{type:"integer"}}:O(o?f(e):e,"variables",t,a)},w=(e,t)=>o.a.find(T.bind(null,E(e),t)),v=(e,t,a)=>O(e,"subroutines",t,a),k=(e,t,a)=>v(e,t,a)||((e,t)=>s.b.find(T.bind(null,E(e),t)))(t,a),T=(e,t,a)=>(a.name||a.names[t])===e,O=(e,t,a,n)=>e.parent?e[t].find(T.bind(null,a,n))||O(e.parent,t,a,n):e[t].find(T.bind(null,a,n)),E=e=>e.replace(/gray/,"grey").replace(/GRAY/,"GREY").replace(/^COLOR$/,"COLOUR").replace(/^color$/,"colour");var S=a(0);const R=(e,t)=>e.slice(0,-1).concat([e[e.length-1].concat(t[0])]).concat(t.slice(1)),L=(e,t,a)=>{const n=R(e,t.pcode),o=R(n,[S.a[a]]);return Object.assign(t,{pcode:o})},C=(e,t)=>"string"===e?[S.a.lstr,t.length].concat(Array.from(t).map(e=>e.charCodeAt(0))):[S.a.ldin,t],P=e=>e.turtle?[S.a.ldin,0,S.a.lptr,S.a.ldin,e.turtle,S.a.plus,S.a.lptr]:0===e.routine.index?[S.a.ldvg,e.routine.turtleAddress+5+e.index]:e.byref?[S.a.ldvr,e.routine.index+9,e.index]:[S.a.ldvv,e.routine.index+9,e.index],M=(e,t)=>e.turtle?[S.a.ldin,0,S.a.lptr,S.a.ldin,e.turtle,S.a.plus,S.a.sptr]:0===e.routine.index?"string"===e.fulltype.type?[S.a.ldvg,e.routine.turtleAddress+5+e.index,S.a.cstr]:[S.a.stvg,e.routine.turtleAddress+5+e.index]:"string"===e.fulltype.type?[S.a.ldvv,e.routine.index+9,e.index,S.a.cstr,S.a.hclr]:e.byref&&!t?[S.a.stvr,e.routine.index+9,e.index]:[S.a.stvv,e.routine.index+9,e.index],I=e=>[S.a[e]],A=(e,t,a)=>{const n=f(t).turtleAddress;switch(e.code){case S.a.newt:return[S.a.ldin,0,S.a.sptr];case S.a.oldt:return[S.a.ldin,n,S.a.ldin,0,S.a.sptr];case S.a.incr:case S.a.decr:return[S.a.dupl,S.a.lptr,e.code,S.a.swap,S.a.sptr];case S.a.rndc:return[S.a.rand,S.a.incr,S.a.rgb,S.a.colr];case S.a.rand:switch(a){case"BASIC":return[S.a.rand,S.a.incr];case"Pascal":return[S.a.rand];case"Python":return[S.a.swap,S.a.dupl,S.a.rota,S.a.incr,S.a.swap,S.a.subt,S.a.rand,S.a.plus]}break;case S.a.texl:return[S.a.text,S.a.newl];case S.a.uppc:return[S.a.ldin,1,S.a.case];case S.a.lowc:return[S.a.ldin,-1,S.a.case];case S.a.lefs:return[S.a.ldin,1,S.a.swap,S.a.copy];case S.a.rgts:return[S.a.swap,S.a.dupl,S.a.slen,S.a.incr,S.a.rota,S.a.subt,S.a.mxin,S.a.copy];case S.a.inss:switch(a){case"BASIC":case"Python":return[S.a.rota,S.a.rota,S.a.inss];case"Pascal":return[S.a.inss]}break;case S.a.poss:switch(a){case"BASIC":case"Python":return[S.a.swap,S.a.poss];case"Pascal":return[S.a.poss]}break;case S.a.svd0:return[S.a.ldin,0,S.a.sval];case S.a.bool:return[S.a.abs];case S.a.ilin:return[S.a.text,S.a.newl,S.a.rdln];case S.a.bufr:return[S.a.bufr,S.a.ldin,1,S.a.sptr,S.a.hfix];case void 0:return[S.a.subr,e.startLine];default:return[e.code]}},N=(e,t,a,n=[])=>{const o=n.length>0?2:1,r=[t.concat([S.a.ifno,a.length+e+o])],s=[[S.a.jump,a.length+n.length+e+o]];return n.length>0?r.concat(a).concat(s).concat(n):r.concat(a)},j=(e,t,a,n,o,r,s)=>{const i=s.length+e+4,c=[a,M(t).concat(n),P(t).concat([S.a[o],S.a.ifno,i])],l=[P(t).concat([S.a[r],S.a.jump,e+1])];return c.concat(s).concat(l)},D=(e,t,a)=>{const n=[t.concat([S.a.ifno,e])];return a.concat(n)},F=(e,t,a)=>{const n=[t.concat([S.a.ifno,a.length+e+2])],o=[[S.a.jump,e]];return n.concat(a).concat(o)},B=(e,t)=>{const a=U(e),n=W(e);return a.concat(t).concat(n)},U=e=>{const t=[[S.a.pssr,e.index]],a=t.concat($(e));return e.variables.length>0&&e.parameters.length>0?a.concat(z(e)):e.variables.length>0?a:t},G=e=>e.variables.filter(e=>"string"===e.fulltype.type),H=e=>{const t=e.routine.turtleAddress+5+e.index;return[S.a.ldag,t+2,S.a.stvg,t,S.a.ldin,e.length-1,S.a.stvg,t+1]},q=e=>{const t=e.routine.index+9,a=e.index;return[S.a.ldav,t,a+2,S.a.stvv,t,a,S.a.ldin,e.fulltype.length-1,S.a.stvv,t,a+1]},$=e=>{const t=[[S.a.memc,e.index+9,e.memoryNeeded],[S.a.ldav,e.index+9,1,S.a.ldin,e.memoryNeeded,S.a.zptr]];return G(e).length>0?t.concat(G(e).map(q)):t},z=e=>{const t=[];let a=e.parameters.length;for(;a>0;)a-=1,t.push(M(e.parameters[a]));return t},W=e=>{const t=e.index+9,a=f(e).resultAddress,n=[S.a.ldvg,t,S.a.stvg,a],o=[S.a.memr,t],r=[S.a.plsr,S.a.retn];return e.variables.length>0&&"function"===e.type?[n,o.concat(r)]:e.variables.length>0?[o.concat(r)]:[r]},Y=[S.a.home,S.a.ldin,2,S.a.thik,S.a.ldin,32,S.a.bufr,S.a.ldin,1,S.a.sptr,S.a.hfix,S.a.ldin,0,S.a.dupl,S.a.ldin,1e3,S.a.dupl,S.a.dupl,S.a.dupl,S.a.reso,S.a.canv],X=e=>{const t=[((e,t)=>[S.a.ldin,e,S.a.dupl,S.a.dupl,S.a.ldin,0,S.a.sptr,S.a.ldin,5,S.a.swap,S.a.sptr,S.a.incr,S.a.ldin,t+5,S.a.zptr,S.a.ldin,e+t+5,S.a.stmt])(e.turtleAddress,e.memoryNeeded),Y];return G(e).length>0?t.concat(G(e).map(H)):t},V=(e,t,a,n)=>{const r=((e,t)=>o.e.find(T.bind(null,e,t)))(e[t].content,n);if(r)return g(a,r.type,e[t]),{type:"integer",lex:t+1,pcode:[(e=>e.value<0?C("integer",e.value):C("integer",e.value).concat(S.a.inpt))(r)]}},K=(e,t,a,n,o)=>{const r=["eqal","less","lseq","more","mreq","noeq"];"boolean"===n&&(n="null");let s=J(e,t,a,n,o);for(;e.lexemes[s.lex]&&r.indexOf(e.lexemes[s.lex].value)>-1;){let t=Z(e.lexemes[s.lex].value,s.type),a=J(e,s.lex+1,s.type,n,o);s=L(s.pcode,a,t)}return s},Q=(e,t,a,n)=>{const o=x(e,t,n);if(!o)throw d(`Variable "${t}" is not defined.`,e.lexemes[a]);if(!e.lexemes[a])throw d(`Variable "${t}" must be assigned a value.`,e.lexemes[a-1]);const r=K(e,a,"null",o.fulltype.type,n);return{lex:r.lex,pcode:R(r.pcode,[M(o)])}},_=(e,t,a,n=!0)=>{const o=k(e,e.lexemes[t].content,a);if(!o)throw d("{lex} is not defined.",e.lexemes[t]);if(n&&"procedure"!==o.type)throw d("{lex} is a function, not a procedure.",e.lexemes[t]);return 0===o.parameters.length?re(e,t,o,a):se(e,t,o,a)},Z=(e,t)=>{return"string"===t||"char"===t?["seql","sles","sleq","smor","smeq","sneq","scat"][["eqal","less","lseq","more","mreq","noeq","plus"].indexOf(e)]:e},J=(e,t,a,n,o)=>{const r=["plus","subt","or","xor"];let s=ee(e,t,a,n,o);for(;e.lexemes[s.lex]&&r.indexOf(e.lexemes[s.lex].value)>-1;){let t=Z(e.lexemes[s.lex].value,s.type),a=ee(e,s.lex+1,s.type,n,o);s=L(s.pcode,a,t)}return s},ee=(e,t,a,n,o)=>{const r=["and","div","divr","mod","mult"];let s=te(e,t,a,n,o);for(;e.lexemes[s.lex]&&r.indexOf(e.lexemes[s.lex].value)>-1;){let t=Z(e.lexemes[s.lex].value,s.type),a=te(e,s.lex+1,s.type,n,o);s=L(s.pcode,a,t)}return s},te=(e,t,a,n,o)=>{switch(e.lexemes[t].type){case"operator":return ae(e,t,n,o)||(()=>{throw d("{lex} makes no sense here.",e.lexemes[t])})();case"boolean":case"char":case"integer":case"string":return((e,t,a)=>{const{type:n,value:o}=e[t];return g(a,n,e[t]),"char"===n&&"string"===a?{type:n,lex:t+1,pcode:[C(n,o),I("ctos")]}:{type:n,lex:t+1,pcode:[C(n,o)]}})(e.lexemes,t,n);case"keycode":case"query":return V(e.lexemes,t,n,o)||(()=>{throw d("{lex} is not a valid input code.",e.lexemes[t])})();case"turtle":case"identifier":return((e,t,a,n)=>{const{lexemes:o}=e,r=y(e,o[t].content,n);if(r)return g(a,r.type,o[t]),{type:r.type,lex:t+1,pcode:[C(r.type,r.value)]}})(e,t,n,o)||((e,t,a,n)=>{const{lexemes:o}=e,r=x(e,o[t].content,n);if(r)return g(a,r.fulltype.type,o[t]),{type:r.fulltype.type,lex:t+1,pcode:[P(r)]}})(e,t,n,o)||((e,t,a,n)=>{const{lexemes:o}=e,r=w(o[t].content,n);if(r)return g(a,"integer",o[t]),{type:"integer",lex:t+1,pcode:[C("integer",r.value)]}})(e,t,n,o)||ne(e,t,n,o)||(()=>{throw d("{lex} is not defined.",e.lexemes[t])})();default:return oe(e,t,a,n,o)||(()=>{throw d("{lex} makes no sense here.",e.lexemes[t])})()}},ae=(e,t,a,n)=>{if("-"===e.lexemes[t].content||"not"===e.lexemes[t].value){const o="-"===e.lexemes[t].content?"integer":"boolint",r="-"===e.lexemes[t].content?[I("neg")]:[I("not")];g(a,"integer",e.lexemes[t]);const s=te(e,t+1,o,a,n);return Object.assign(s,{pcode:R(s.pcode,r)})}return null},ne=(e,t,a,n)=>{const o=k(e,e.lexemes[t].content,n);if(o){if("function"!==o.type)throw d("{lex} is a procedure, not a function.",e.lexemes[t]);g(a,o.returns,e.lexemes[t]);const r=_(e,t,n,!1);return o.code||r.pcode.push((e=>[S.a.ldvv,e,1])(o.resultAddress)),Object.assign(r,{type:o.returns})}return null},oe=(e,t,a,n,o)=>{if("("===e.lexemes[t].content){const r=K(e,t+1,a,n,o);if(e.lexemes[r.lex]&&")"===e.lexemes[r.lex].content)return Object.assign(r,{lex:r.lex+1});throw d("Closing bracket missing.",e.lexemes[t-1])}return null},re=(e,t,a,n)=>{if("Python"===n){if(!e.lexemes[t+1]||"("!==e.lexemes[t+1].content)throw d("Opening bracket missing after command {lex}.",e.lexemes[t]);if(!e.lexemes[t+2]||")"!==e.lexemes[t+2].content)throw d("Command {lex} takes no arguments.",e.lexemes[t-1]);return{lex:t+3,pcode:[A(a,e,n)]}}if(e.lexemes[t+1]&&"("===e.lexemes[t+1].content)throw d("Command {lex} takes no arguments.",e.lexemes[t]);return{lex:t+1,pcode:[A(a,e,n)]}},se=(e,t,a,n)=>{if(!e.lexemes[t+1]||"("!==e.lexemes[t+1].content)throw d("Opening bracket missing after command {lex}.",e.lexemes[t]);const o=ie(e,t+2,a,n),r=[A(a,e,n)];return Object.assign(o,{pcode:R(o.pcode,r)})},ie=(e,t,a,n)=>{const o=a.parameters.length;let r=0,s=[[]];for(;r<o&&")"!==e.lexemes[t].content;){let i=ce(e,t,a,r,n);if(r+=1,t=i.lex,s=R(s,i.pcode),r<o){if(!e.lexemes[t]||","!==e.lexemes[t].content)throw d("Comma needed after parameter.",e.lexemes[t]);t+=1}}const i=a.name||a.names[n];if(r<o)throw d(`Not enough arguments given for command "${i}".`,e.lexemes[t]);if(","===e.lexemes[t].content)throw d(`Too many arguments given for command "${i}"`,e.lexemes[t]);if(")"!==e.lexemes[t].content)throw d(`Closing bracket missing after command "${i}"`,e.lexemes[t-1]);return{lex:t+1,pcode:s}},ce=(e,t,a,n,o)=>{if(a.parameters[n].byref){let a=x(e,e.lexemes[t].content,o);if(!a)throw d("{lex} is not defined.}",e.lexemes[t]);return{lex:t+1,pcode:[(e=>e.turtle?[S.a.ldin,0,S.a.lptr,S.a.ldin,e.turtle,S.a.plus]:0===e.routine.index?[S.a.ldag,e.routine.turtleAddress+5+e.index]:[S.a.ldav,e.routine.index+9,e.index])(a)]}}const r=a.parameters[n].type||a.parameters[n].fulltype.type;return K(e,t,"null",r,o)},le=(e,t)=>({language:t,name:e,index:0,indent:0,constants:[],variables:[],subroutines:[],lexemes:[],turtleAddress:null,memoryNeeded:null}),de=(e,t,a)=>({name:e,type:t,level:-1,index:null,indent:null,globals:[],nonlocals:[],constants:[],parameters:[],variables:[],parent:a,subroutines:[],lexemes:[],memoryNeeded:null}),ue=(e,t,a)=>({name:e,type:t,value:a}),pe=(e,t,a=!1)=>({name:e.content,lexeme:e,routine:t,byref:a,index:null,fulltype:null,private:null}),me=(e,t=null,a=null,n=null)=>"string"===e?{type:e,length:33,start:a,fulltype:n}:{type:e,length:t,start:a,fulltype:n};var he=e=>{const t=[];for(var a,n,o,r,s,i,c,l=0,u="start";l<e.length;)switch(u){case"start":if(a=!0,n=!1,o=!1,s=le("!","BASIC"),t.push(s),"DEF"===e[l].content)throw d('Subroutines must be defined after program "END".',e[l]);u="DIM"===e[l].content?"dim":"prog";break;case"dim":break;case"prog":if("DIM"===e[l].content)throw d('"DIM" commands must occur at the top of the program.',e[l]);if("PRIVATE"===e[l].content)throw d("Private variables cannot be defined in the main program.",e[l]);if("LOCAL"===e[l].content)throw d("Local variables cannot be defined in the main program.",e[l]);if("DEF"===e[l].content)throw d('Subroutines must be defined after program "END".',e[l]);"END"===e[l].content?(a=!1,u="end"):("identifier"===e[l].type&&e[l+1]&&"="===e[l+1].content&&(be(t[0],e[l].content)||((i=pe(e[l],t[0],!1)).fulltype=ge(e[l].content),t[0].variables.push(i))),t[0].lexemes.push(e[l])),l+=1;break;case"end":if(e[l]){if("DEF"!==e[l].content){if(0===s.index)throw d('No program text can appear after program "END" (except subroutine definitions).',e[l]);throw d("No program text can appear after subroutine end (except further subroutine definitions).",e[l])}l+=1,u="def"}break;case"def":if(!e[l])throw d('"DEF" must be followed by a valid procedure or function name. (Procedure names must begin with "PROC", and function names must begin with "FN".)',e[l-1]);if(!fe(e[l].content))throw d('"DIM" commands can only occur within the main program. To declare a local or private array, use "LOCAL" or "PRIVATE" instead.',e[l]);if((s=de(e[l].content,fe(e[l].content,t[0]))).parent=t[0],t.push(s),t[0].subroutines.push(s),"procedure"===s.type?n=!0:(o=!0,i=pe({content:"result"},s),s.variables.push(i)),!e[l+1])throw d("No program text can appear after subroutine end (except further subroutine definitions).",e[l]);"("===e[l+=1].content?(l+=1,u="parameters"):u="variables";break;case"parameters":if(!e[l])throw d("Parameter name expected.",e[l-1]);if(r="RETURN"===e[l].content,!e[l="RETURN"===e[l].content?l+1:l])throw d("Parameter name expected.",e[l-1]);if("turtle"===e[l].type)throw d("{lex} is the name of a Turtle property, and cannot be used as a parameter name.",e[l]);if("identifier"!==e[l].type)throw d("{lex} is not a valid parameter name.",e[l]);if(!ge(e[l].content))throw d('{lex} is not a valid parameter name. Integer parameters must end with "%", and string parameters must end with "$".',e[l]);if(be(s,e[l].content))throw d("{lex} is already a parameter for this subroutine.",e[l]);if((i=pe(e[l],s,r)).fulltype=ge(e[l].content),s.parameters.push(i),s.variables.push(i),!e[l+=1])throw d("Closing bracket needed after parameters.",e[l-1]);if("identifier"===e[l].type)throw d("Comma needed after parameter.",e[l]);if(")"===e[l].content)u="variables";else if(","!==e[l].content)throw d("Closing bracket needed after parameters.",e[l]);l+=1;break;case"variables":if(!e[l])throw d("Subroutine definition must be followed by some commands.",e[l-1]);switch(e[l].content){case"DIM":throw d('"DIM" commands can only occur within the main program. To declare a local or private array, use "LOCAL" or "PRIVATE" instead.',e[l]);case"PRIVATE":l+=1,u="private";break;case"LOCAL":l+=1,u="local";break;default:u="subroutine"}break;case"private":if(!e[l])throw d("Variable name expected.",e[l-1]);if("turtle"===e[l].type)throw d("{lex} is the name of a Turtle property, and cannot be used as a variable name.",e[l]);if("identifier"!==e[l].type)throw d("{lex} is not a valid variable name.",e[l]);if(!ge(e[l].content))throw d('{lex} is not a valid variable name. Integer variables must end with "%", and string variables must end with "$".',e[l]);if(be(s,e[l].content))throw d("{lex} is already a variable in the current scope.",e[l]);if((i=pe(e[l],t[0])).fulltype=ge(e[l].content),i.private=s,t[0].variables.push(i),!e[l+=1])throw d("subNoEnd",e[l-1]);","===e[l].content?l+=1:u="variables";break;case"local":if(!e[l])throw d("Variable name expected.",e[l-1]);if("turtle"===e[l].type)throw d("{lex} is the name of a Turtle property, and cannot be used as a variable name.",e[l]);if("identifier"!==e[l].type)throw d("{lex} is not a valid variable name.",e[l]);if(!ge(e[l].content))throw d('{lex} is not a valid variable name. Integer variables must end with "%", and string variables must end with "$".',e[l]);if(be(s,e[l].content))throw d("{lex} is already a variable in the current scope.",e[l]);if((i=pe(e[l],s)).fulltype=ge(e[l].content),s.variables.push(i),!e[l+=1]){if("procedure"===s.type)throw d('Procedure must finish with "ENDPROC".',e[l]);throw d('Function must finish with "=expression".',e[l])}","===e[l].content?l+=1:u="variables";break;case"subroutine":if("DIM"===e[l].content)throw d('"DIM" commands can only occur within the main program. To declare a local or private array, use "LOCAL" or "PRIVATE" instead.',e[l]);if("PRIVATE"===e[l].content)throw d("Private variables must be declared at the start of the subroutine.",e[l]);if("LOCAL"===e[l].content)throw d("Local variables must be declared at the start of the subroutine.",e[l]);if("DEF"===e[l].content)throw d('The next subroutine must be defined after subroutine "ENDPROC".',e[l]);if("variable"===e[l].type&&(be(t[0],e[l].content)||be(s,e[l].content)||((i=pe(e[l],t[0])).fulltype=ge(e[l].content),t[0].variables.push(i))),"ENDPROC"===e[l].content){if("procedure"!==s.type)throw d('Function must end with "=&lt;expression&gt;", not "ENDPROC".',e[l]);l+=1,n=!1,u="end"}else if(e[l].line>e[l-1].line&&"="===e[l].content){if("function"!==s.type)throw d('Procedure must end with "ENDPROC", not "=&lt;expression&gt;".',e[l]);s.lexemes.push(e[l]),l+=1,u="result"}else s.lexemes.push(e[l]),l+=1;break;case"result":if(!e[l])throw d("Subroutine definition must be followed by some commands.",e[l-1]);for(c=e[l].line;e[l]&&e[l].line===c;)s.lexemes.push(e[l]),l+=1;o=!1,u="end"}if(a)throw d('Program must finish with "END".',e[l-1]);if(n)throw d('Procedure must finish with "ENDPROC".',e[l-1]);if(o)throw d('Function must finish with "=expression".',e[l-1]);return t};const be=(e,t)=>e.variables.some(e=>(e.name||e.names.basic)===t),ge=e=>{const t="%"===e.slice(-1)?"boolint":"string";return!!t&&me(t,"boolint"===t?0:34)},fe=e=>"PROC"===e.slice(0,4)?"procedure":"FN"===e.slice(0,2)&&"function";var ye=e=>{const t=[],a=[];let n,o,r=0,s=0,i="program";for(;r<e.length;)switch(i){case"program":({lex:r,routine:n,state:i}=xe(e,r)),t.push(n),a.push(n);break;case"crossroads":({lex:r,state:i}=we(e,r,n));break;case"constant":({lex:r,state:i}=ve(e,r,n));break;case"variable":({lex:r,state:i}=Oe(e,r,n));break;case"procedure":case"function":o=a[a.length-1],({lex:r,routine:n}=Le(e,r,i,o)),o.subroutines.push(n),a.push(n),i="crossroads";break;case"begin":({lex:r,state:i}=Pe(e,r,n));break;case"end":if(0===n.index){if(!e[r])throw d('Program "END" must be followed by a full stop.',e[r-1]);if("."!==e[r].content)throw d('Program "END" must be followed by a full stop.',e[r]);if(e[r+1])throw d('No text can appear after program "END".',e[r+1]);r+=1}else r=Ie(e,r,!0),s+=1,n.index=s,t.push(a.pop()),n=a[a.length-1],i="crossroads"}return t};const xe=(e,t)=>{const[a,n]=e.slice(t,t+2);if(!a)throw d('Program must start with keyword "PROGRAM".');if("program"!==a.content)throw d('Program must start with keyword "PROGRAM".',a);if(!n)throw d('"PROGRAM" must be followed by a legal program name.',a);if("turtle"===n.type)throw d("Program cannot be given the name of a Turtle attribute.",n);if("identifier"!==n.type)throw d("{lex} is not a valid program name.",n);return{lex:Ie(e,t+2,!0),routine:le(n.content,"Pascal"),state:"crossroads"}},we=(e,t,a)=>{const n=e[t],o='Expected "BEGIN", constant/variable definitions, or subroutine definitions.';if(!n)throw d(o,e[t-1]);switch(n.content){case"const":if(a.variables.length>0)throw d("Constants must be defined before any variables.",n);if(a.subroutines.length>0)throw d("Constants must be defined before any subroutines.",n);return{lex:t+1,state:"constant"};case"var":if(a.subroutines.length>0)throw d("Variables must be defined before any subroutines.",n);return{lex:t+1,state:"variable"};case"function":case"procedure":return{lex:t+1,state:n.content};case"begin":return{lex:Ie(e,t+1),state:"begin"};default:throw d(o,n)}},ve=(e,t,a)=>{const[n,o,r]=e.slice(t,t+3);if(!n)throw d("No constant name found.",e[t-1]);if("turtle"===n.type)throw d("{lex} is the name of a predefined Turtle property, and cannot be used as a constant name.",n);if("identifier"!==n.type)throw d("{lex} is not a valid constant name.",n);if(n.content===f(a).name)throw d("Constant name {lex} is already the name of the program.",n);if(Me(a,n.content))throw d("{lex} is already the name of a constant in the current scope.",n);if(!o)throw d("Constant must be assigned a value.",n);if("="!==o.content||!r)throw d("Constant must be assigned a value.",o);let s="-"===r.content?ke(e,t+3,n.content,a):Te(e,t+2,n.content,a);if(a.constants.push(s.constant),!e[s.lex])throw d("No program text found after constant definition.",e[s.lex-1]);return"identifier"===e[s.lex].type?{lex:s.lex,state:"constant"}:{lex:s.lex,state:"crossroads"}},ke=(e,t,a,n)=>{const o=e[t];if(!o)throw d("Constant must be assigned a value.",e[t-1]);switch(o.type){case"string":throw d("Strings cannot be negated.",o);case"boolean":throw d("Boolean values cannot be negated.",o);case"integer":return{lex:Ie(e,t+1,!0),constant:ue(a,o.type,-o.value)};case"identifier":let r=y(n,o.content,"Pascal")||w(o.content,"Pascal");if(!r)throw d("{lex} is not a valid constant value.",o);return{lex:Ie(e,t+1,!0),constant:ue(a,r.type,-r.value)};default:throw d("{lex} is not a valid constant value.",o)}},Te=(e,t,a,n)=>{const o=e[t];if(!o)throw d("Constant must be assigned a value.",e[t-1]);switch(o.type){case"boolean":case"integer":case"string":return{lex:Ie(e,t+1,!0),constant:ue(a,o.type,o.value)};case"identifier":let r=y(n,o.content,"Pascal")||w(o.content,"Pascal");if(!r)throw d("{lex} is not a valid constant value.",o);return{lex:Ie(e,t+1,!0),constant:ue(a,r.type,r.value)};default:throw d("{lex} is not a valid constant value.",o)}},Oe=(e,t,a,n=!1,o=!1)=>{const r=[];let s=!0;for(;s;){if(!e[t])throw d("No variable name found.",e[t-1]);if("turtle"===e[t].type)throw d("{lex} is the name of a predefined Turtle property, and cannot be used as a variable name.",e[t]);if("identifier"!==e[t].type)throw d("{lex} is not a valid variable name.",e[t]);if(e[t].content===f(a).name)throw d("Variable name {lex} is already the name of the program.",e[t]);if(Me(a,e[t].content))throw d("{lex} is already the name of a constant or variable in the current scope.",e[t]);if(r.push(pe(e[t],a,o)),!e[t+1])throw d("Variable name must be followed by a colon, then the variable type (array, boolean, char, integer, or string).",e[t]);if(","===e[t+1].content)t+=2;else{if(":"!==e[t+1].content)throw"identifier"===e[t+1].type?d("Comma missing between variable declarations.",e[t+1]):d("Variable name must be followed by a colon, then the variable type (array, boolean, char, integer, or string).",e[t+1]);t+=2,s=!1}}let i=Ee(e,t,a,n,o);if(r.forEach(e=>{e.fulltype=i.fulltype}),a.variables=a.variables.concat(r),!e[t=n&&")"===e[i.lex].content?i.lex:Ie(e,i.lex,!0)])throw d("No text found after variable declarations.",e[t-1]);return"identifier"===e[t].type?{lex:t,variables:r,state:"variable"}:{lex:t,variables:r,state:"crossroads"}},Ee=(e,t,a,n,o)=>{const r=e[t];if(!e[t])throw d("Variable name must be followed by a colon, then the variable type (array, boolean, char, integer, or string).",e[t-1]);switch(r.content){case"boolean":case"integer":case"char":return{lex:t+1,fulltype:me(r.content)};case"string":if(e[t+1]&&"["===e[t+1].content){const[a,n]=e.slice(t+2,t+4);if(!a)throw d("Opening bracket must be followed by an integer value.",e[t+1]);if("integer"!==a.type)throw d("String size must be an integer.",a);if(!n)throw d('String size must be followed by a closing square bracket "]".',a);if("]"!==n.content)throw d('String size must be followed by a closing square bracket "]".',n);return{lex:t+4,fulltype:me("string",a.value)}}return{lex:t+1,fulltype:me("string")};case"array":return n?Se(e,t+1,a,o):Re(e,t+1,a);default:throw d('{lex} is not a valid variable type (expected "array", "boolean", "char", "integer", or "string").',r)}},Se=(e,t,a,n)=>{if(!e[t])throw d('Array declaration must be followed by "of", and then the type of the elements of the array.',e[t-1]);if(!n)throw d("Array parameters can only be passed by reference, not by value.",e[t]);if("["===e[t].content)throw d("Array references parameters cannot be given a size specification.",e[t]);if("of"!==e[t].content)throw d('Array declaration must be followed by "of", and then the type of the elements of the array.',e[t]);return Ee(e,t+1,a,!0,n)},Re=(e,t,a)=>{const[n,o,r,s,i,c]=e.slice(t,t+6);let l,u,p;if(!n)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',e[t-1]);if("["!==n.content)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',n);if(!o)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',n);switch(o.type){case"identifier":let e=y(a,o.content,"Pascal");if(!e)throw d("Constant {lex} has not been defined.",o);if("integer"!==e.type)throw d("{lex} is not an integer constant.",o);u=e.value;break;case"integer":u=o.value;break;default:throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',o)}if(!r)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',o);if(".."!==r.content)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',r);if(!s)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',r);switch(s.type){case"identifier":let e=y(a,s.content,"Pascal");if(!e)throw d("Constant {lex} has not been defined.",s);if("integer"!==e.type)throw d("{lex} is not an integer constant.",s);l=e.value;break;case"integer":l=s.value;break;default:throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',s)}if(!i)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',s);if("]"!==i.content)throw d('Array declarations take the form "array[n..m]", where "n" and "m" are integer values specifying the start and end index of the array.',i);if(!c)throw d('Array declaration must be followed by "of", and then the type of the elements of the array.',i);if("of"!==c.content)throw d('Array declaration must be followed by "of", and then the type of the elements of the array.',c);return{lex:(p=Ee(e,t+6,a)).lex,fulltype:me("array",l-u+1,u,p.fulltype)}},Le=(e,t,a,n)=>{const o=e[t];let r,s;if(!o)throw d("No subroutine name found.",e[t-1]);if("turtle"===o.type)throw d("{lex} is the name of a predefined Turtle property, and cannot be used as a subroutine name.",o);if("identifier"!==o.type)throw d("{lex} is not a valid subroutine name.",o);if(o.content===f(n).name)throw d("Subroutine name {lex} is already the name of the program.",o);if(v(n,o.content,"Pascal"))throw d("{lex} is already the name of a subroutine in the current scope.",o);if(r=de(o.content,a,n),"function"===a&&r.variables.push(pe({content:"result"},r,!1)),!e[t+=1])throw d("Subroutine declaration must be followed by a semicolon.",o);if("("===e[t].content&&(s=Ce(e,t+1,r),r.parameters=s.parameters,r.variables=r.variables.concat(s.parameters),t=s.lex),"function"===a){if(!e[t])throw d("Function must be followed by a colon, the the return type (integer, boolean, char, or string).",e[t-1]);if(":"!==e[t].content)throw d("Function must be followed by a colon, the the return type (integer, boolean, char, or string).",e[t]);s=Ee(e,t+1,r),r.variables[0].fulltype=s.fulltype,t=s.lex}return{lex:t=Ie(e,t,!0),routine:r}},Ce=(e,t,a)=>{let n,o=[],r=!0;for(;r;){if(n=e[t]&&"var"===e[t].content?Oe(e,t+1,a,!0,!0):Oe(e,t,a,!0,!1),o=o.concat(n.variables),!e[t=n.lex])throw d('Parameter declarations must be followed by a closing bracket ")".',e[t-1]);switch(e[t].content){case";":t+=1;break;case")":t+=1,r=!1;break;default:throw d('Parameter declarations must be followed by a closing bracket ")".',e[t])}}return{lex:t,parameters:o}},Pe=(e,t,a)=>{let n=1;for(;n>0&&e[t];)"begin"===e[t].content&&(n+=1),"end"===e[t].content&&(n-=1),a.lexemes.push(e[t]),t+=1;if(n>0)throw d('Routine commands must finish with "END".',e[t]);return a.lexemes.pop(),{lex:t,state:"end"}},Me=(e,t)=>e.variables.concat(e.constants).some(e=>e.name===t),Ie=(e,t,a=!1)=>{if(a){if(!e[t])throw d("Semicolon needed after statement.",e[t-1]);if(";"!==e[t].content)throw d("Semicolon needed after statement.",e[t])}for(;e[t]&&";"===e[t].content;)t+=1;return t};var Ae=e=>{const t=[],a=[];let n,o=0,r="crossroads";for(n=le("!","Python"),t.push(n),a.push(n);o<e.length;)switch(r){case"crossroads":({lex:o,state:r}=Ne(e,o,n));break;case"global":({lex:o,state:r}=je(e,o,n));break;case"nonlocal":({lex:o,state:r}=De(e,o,n));break;case"def":({lex:o,routine:n,state:r}=Fe(e,o,n)),a.push(n);break;case"parameters":({lex:o,state:r}=Be(e,o,n));break;case"commands":({lex:o,state:r}=Ue(e,o,n)),null===n.index&&(n.index=t.length,t.push(a.pop()),n=a[a.length-1])}if(0===t[0].lexemes.length){if(!t.some(e=>"main"===e.name))throw d('Program must have some commands or define a "main" procedure.',e[e.length-1]);t[0].lexemes=[{type:"identifier",content:"main",indent:0},{type:"punctuation",content:"(",indent:0},{type:"punctuation",content:")",indent:0}]}return t};const Ne=(e,t,a)=>{if(!e[t])throw d("No commands given.",e[t-1]);if(a.indent){if(e[t].offset<a.indent)throw d("Not enough indentation.",e[t]);if(e[t].offset>a.indent)throw d("Too much indentation.",e[t])}else a.indent=e[t].offset;switch(e[t].content){case"global":if(0===a.index)throw d("Global variables are only allowed in subroutines.",e[t]);if(a.subroutines.length>0)throw d("Global variables must be declared before any subroutine definitions.",e[t]);return{lex:t+1,state:"global"};case"nonlocal":if(0===a.index)throw d("Nonlocal variables are only allowed in subroutines.",e[t]);if(a.subroutines.length>0)throw d("Nonlocal variables must be declared before any subroutine definitions.",e[t]);return{lex:t+1,state:"nonlocal"};case"def":if(a.lexemes.length>0)throw d("Subroutine definitions must come before the routine's commands",e[t]);return{lex:t+1,state:"def"};default:return{lex:t,state:"commands"}}},je=(e,t,a)=>{if(!e[t])throw d('"global" must be followed by an identifier.',e[t-1]);if(e[t].line!==e[t-1].line)throw d("Global variable declarations must be on a single line.",e[t]);for(;e[t]&&e[t].line===e[t-1].line;){if("turtle"!==e[t].type&&"identifier"!==e[t].type)throw d("{lex} is not a valid variable name.",e[t]);if(a.globals.indexOf(e[t].content)>-1)throw d("Global variable {lex} has already been declared.",e[t]);a.globals.push(e[t].content);const n=f(a);if("turtle"===e[t].type||n.variables.some(a=>a.name===e[t].content)||n.variables.push(pe(e[t],n)),e[t+1].line>e[t].line)return{lex:t+1,state:"crossroads"};if(!e[t+1]||","!==e[t+1].content)throw d("Comma missing after global variable declaration.",e[t]);if(!e[t+2])throw d("Expected more global variable declarations after comma.",e[t+1]);if(e[t+2].line>e[t+1].line)throw d("Global variable declarations must be on a single line.",e[t+2]);t+=2}return{lex:t,state:"crossroads"}},De=(e,t,a)=>{if(!e[t])throw d('"local" must be followed by an identifier.',e[t-1]);if(e[t].line>e[t-1].line)throw d("Nonlocal variable definitions must be on a single line.",e[t]);if(a.nonlocals.indexOf(e[t].content)>-1)throw d("Nonlocal variable {lex} has already been defined.",e[t]);for(;e[t]&&e[t].line===e[t-1].line;){if("turtle"===e[t].type)throw d("Turtle variables are global, not nonlocal.",e[t]);if("identifier"!==e[t].type)throw d("{lex} is not a valid variable name.",e[t]);if(a.nonlocals.indexOf(e[t].content)>-1)throw d("Nonlocal variable {lex} has already been declared.",e[t]);if(a.nonlocals.push(e[t].content),e[t+1].line>e[t].line)return{lex:t+1,state:"crossroads"};if(!e[t+1]||","!==e[t+1].content)throw d("Comma missing after nonlocal variable declaration.",e[t]);if(!e[t+2])throw d("Expected more nonlocal variable declarations after comma.",e[t+1]);if(e[t+2].line>e[t+1].line)throw d("Nonlocal variable declarations must be on a single line.",e[t+2]);t+=2}return{lex:t,state:"crossroads"}},Fe=(e,t,a)=>{if(!e[t])throw d('"def" must be followed by an identifier.',e[t-1]);if(e[t-1].line!==e[t].line)throw d('Subroutine name must be on the same line as "def".',e[t]);if("turtle"===e[t].type)throw d("Subroutine cannot have the name of a global Turtle variable.",e[t]);if("identifier"!==e[t].type)throw d("{lex} is not a valid subroutine name.",e[t]);if(Ge(e[t].content,a))throw d("{lex} is already the name of a subroutine or variable in the current scope.",e[t]);if((a=de(e[t].content,"procedure",a)).parent.subroutines.push(a),!e[t+1])throw d("Subroutine definition must be followed by an open bracket.",e[t-1]);if("("!==e[t+1].content)throw d("Subroutine definition must be followed by an open bracket.",e[t]);if(e[t].line!==e[t+1].line)throw d("Open bracket must be on the same line as the subroutine definition.",e[t]);return{lex:t+2,routine:a,state:"parameters"}},Be=(e,t,a)=>{if(!e[t])throw d("Expecting parameter definition or closing bracket.",e[t-1]);if(")"===e[t].content){if(e[t-1].line!==e[t].line)throw d("Closing bracket after parameters cannot be on a new line.",e[t]);if(!e[t+1])throw d("Subroutine definition must be followed by a colon.",e[t]);if(":"!==e[t+1].content)throw d("Subroutine definition must be followed by a colon.",e[t+1]);if(e[t+1].line>e[t].line)throw d("Colon following subroutine definition cannot be on a new line.",e[t+1]);if(!e[t+2])throw d("No commands found following subroutine declaration.",e[t+1]);if(e[t+2].line===e[t+1].line)throw d("Subroutine commands must be on a new line.",e[t]);return{lex:t+2,state:"crossroads"}}if("turtle"===e[t].type)throw d("{lex} is the name of a predefined global Turtle variable.",e[t]);if("identifier"!==e[t].type)throw d("{lex} is not a valid identifier.",e[t]);if(e[t-1].line!==e[t].line)throw d("Parameter declaration cannot be on a new line.",e[t]);if(a.parameters.some(a=>a.name===e[t].content))throw d("{lex} is already the name of a parameter for this subroutine.",e[t]);let n=pe(e[t],a);if(a.parameters.push(n),a.variables.push(n),!e[t+1])throw d("Closing bracket missing after parameter declarations.",e[t]);if("turtle"===e[t+1].type||"identifier"===e[t+1].type)throw d("Comma missing between parameters.",e[t+1]);if(","===e[t+1].content){if(!e[t+2])throw d("Expected parameter declaration after comma.",e[t+1]);if(")"===e[t+2].content)throw d("Parameter list cannot end with a comma.",e[t+1]);return{lex:t+2,state:"parameters"}}if(")"===e[t+1].content)return{lex:t+1,state:"parameters"};throw d("py1parser43","parsNoCommaOrBracket",e[t])},Ue=(e,t,a)=>{let n;for(;e[t]&&e[t].offset>=a.indent;){if("return"===e[t].content){if(0===a.index)throw d("cmdMainReturn",e[t]);if("main"===a.name)throw d("cmdMainSubReturn",e[t]);if("function"===a.type)throw d("cmdRepeatReturn",e[t]);a.type="function",n=pe(e[t],a,!1),a.variables.unshift(n)}He(a,e,t)&&(n=pe(e[t],a,!1),a.variables.push(n)),a.lexemes.push(e[t]),t+=1}return{lex:t,state:"crossroads"}},Ge=(e,t)=>0===t.index?t.subroutines.some(t=>t.name===e):t.subroutines.some(t=>t.name===e)||t.globals.indexOf(e)>-1||t.nonlocals.indexOf(e)>-1,He=(e,t,a)=>"identifier"===t[a].type&&(!!t[a+1]&&(("="===t[a+1].content||"in"===t[a+1].content)&&(!(e.globals.indexOf(t[a].content)>-1)&&(!(e.nonlocals.indexOf(t[a].content)>-1)&&!x(e,t[a].content,"Python")))));const qe=(e,t)=>{for(var a,n,o=e[t],r=o.lexemes,s=0;s<r.length;)if("identifier"===r[s].type)if((a=x(o,r[s].content,"Python"))&&null===a.fulltype){if(r[s+=1]&&"in"===r[s].content)a.fulltype=me("integer"),s+=1;else if(r[s]&&"="===r[s].content&&r[s+=1])try{n=K(o,s,"null","null","Python"),a.fulltype=me(n.type),s=n.lex}catch(e){s+=1}}else s+=1;else if("return"===r[s].content){if(a=x(o,"return","Python"),r[s+=1])try{n=K(o,s,"null","null","Python"),a.fulltype=me(n.type),s=n.lex}catch(e){s+=1}}else s+=1;return 0===t?1===e.length?e:qe(e,e.length-1):t>1?qe(e,t-1):e},$e=function(e,t){for(var a,n,o,r=e[t],s=r.lexemes,i=0;i<s.length;){if("identifier"===s[i].type&&(a=v(r,s[i].content,"Python"))&&a.parameters.length>0)for(n=0,i+=2;n<a.parameters.length;){try{o=K(r,i,"null","null","Python"),null===a.parameters[n].fulltype&&(a.parameters[n].fulltype=me(o.type)),i=o.lex+1}catch(e){}n+=1}i+=1}return 1===t?e:$e(e,t-1)},ze=e=>{return e.reduce((e,t)=>e.concat(t.variables),[]).find(e=>null===e.fulltype)},We=e=>{let t=0;e.variables.forEach(e=>{t+=1,e.index=t,e.fulltype&&null!==e.fulltype.length&&(t+=e.fulltype.length)}),e.memoryNeeded=t},Ye=e=>10+(e=>e.some(e=>"function"===e.type)?e.length+1:e.length)(e),Xe=(e,t,a)=>{let n;switch(e.lexemes[t].type){case"turtle":case"identifier":if(e.lexemes[t+1]&&"="===e.lexemes[t+1].content){n=Q(e,e.lexemes[t].content,t+2,"BASIC");break}n=_(e,t,"BASIC");break;case"keyword":switch(e.lexemes[t].content){case"IF":n=Ve(e,t+1,a);break;case"FOR":n=Ke(e,t+1,a);break;case"REPEAT":n=Qe(e,t+1,a);break;case"WHILE":n=_e(e,t+1,a);break;default:throw d("{lex} makes no sense here.",e.lexemes[t])}break;default:throw d("{lex} makes no sense here.",e.lexemes[t])}if(e.lexemes[n.lex])if(":"!==e.lexemes[n.lex].content){if(e.lexemes[n.lex].line===e.lexemes[n.lex-1].line&&"else"!==e.lexemes[n.lex].type)throw d("Command must be on a new line, or followed by a colon.",e.lexemes[n.lex-1])}else for(;e.lexemes[n.lex]&&":"===e.lexemes[n.lex].content;)n.lex+=1;return n},Ve=(e,t,a)=>{let n,o,r,s,i;if(!e.lexemes[t])throw d('"IF" must be followed by a boolean expression.',e.lexemes[t-1]);if(t=(i=K(e,t,"null","boolean","BASIC")).lex,n=i.pcode[0],!e.lexemes[t])throw d('"IF ..." must be followed by "THEN".',e.lexemes[t-1]);if("THEN"!==e.lexemes[t].content)throw d('"IF ..." must be followed by "THEN".',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('No commands found after "IF".',e.lexemes[t]);if(e.lexemes[t].line>e.lexemes[t-1].line?(i=Ze(e,t,a+1,"IF"),s=!1):(i=Xe(e,t,a+1),s=!0),t=i.lex,o=i.pcode,e.lexemes[t]&&"ELSE"===e.lexemes[t].content){if(s&&e.lexemes[t].line>e.lexemes[t-1].line)throw d('"ELSE" cannot be on a new line.',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('No commands found after "ELSE".',e.lexemes[t]);t=(i=e.lexemes[t].line>e.lexemes[t-1].line?Ze(e,t,a+o.length+2,"ELSE"):Xe(e,t,a+o.length+2)).lex,r=i.pcode}return{lex:t,pcode:N(a,n,o,r)}},Ke=(e,t,a)=>{let n,o,r,s,i,c,l;if(!e.lexemes[t])throw d('"FOR" must be followed by an integer variable.',e.lexemes[t-1]);if("turtle"===e.lexemes[t].type)throw d('Turtle attribute cannot be used as a "FOR" variable.',e.lexemes[t]);if("identifier"!==e.lexemes[t].type)throw d('"FOR" must be followed by an integer variable.',e.lexemes[t]);if(!(n=x(e,e.lexemes[t].content)))throw d("Variable {lex} not defined.",e.lexemes[t]);if("integer"!==n.fulltype.type&&"boolint"!==n.fulltype.type)throw d("{lex} is not an integer variable.",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('"FOR" loop variable must be assigned an initial value.',e.lexemes[t-1]);if("="!==e.lexemes[t].content)throw d('"FOR" loop variable must be assigned an initial value.',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('"FOR" loop variable must be assigned an initial value.',e.lexemes[t-1]);if(t=(l=K(e,t,"null","integer","Pascal")).lex,o=l.pcode[0],!e.lexemes[t])throw d("forToDownTo",e.lexemes[t-1]);if("TO"!==e.lexemes[t].content)throw d('"FOR" loop initialisation must be followed by "TO".',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('"TO" must be followed by an integer (or integer constant).',e.lexemes[t-1]);if(t=(l=K(e,t,"null","integer","Pascal")).lex,r=l.pcode[0],e.lexemes[t]&&"STEP"===e.lexemes[t].content){if(t+=1,!e.lexemes[t])throw d('"STEP" instruction must be of the form "STEP -1".',e.lexemes[t-1]);if("-"!==e.lexemes[t].content)throw d('"STEP" instruction must be of the form "STEP -1".',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('"STEP" instruction must be of the form "STEP -1".',e.lexemes[t-1]);if(1!==e.lexemes[t].value)throw d('"STEP" instruction must be of the form "STEP -1".',e.lexemes[t]);t+=1,s="lseq",i="decr"}else s="mreq",i="incr";if(!e.lexemes[t])throw d('No commands found after "FOR" loop initialisation.',e.lexemes[t]);return t=(l=e.lexemes[t-1].line<e.lexemes[t].line?Ze(e,t,a+3,"FOR"):Xe(e,t,a+3)).lex,c=l.pcode,{lex:t,pcode:j(a,n,o,r,s,i,c)}},Qe=(e,t,a)=>{let n,o,r;if(t=(r=Ze(e,t,a,"REPEAT")).lex,o=r.pcode,!e.lexemes[t])throw d('"UNTIL" must be followed by a boolean expression.',e.lexemes[t-1]);return t=(r=K(e,t,"null","boolean",!1)).lex,n=r.pcode[0],{lex:t,pcode:D(a,n,o)}},_e=(e,t,a)=>{let n,o,r;if(!e.lexemes[t])throw d('"WHILE" must be followed by a boolean expression.',e.lexemes[t-1]);if(t=(r=K(e,t,"null","boolean","BASIC")).lex,n=r.pcode[0],!e.lexemes[t])throw d('No commands found after "WHILE ... DO".',e.lexemes[t]);return t=(r=e.lexemes[t].line>e.lexemes[t-1].line?Ze(e,t,a+1,"WHILE"):Xe(e,t,a+1)).lex,o=r.pcode,{lex:t,pcode:F(a,n,o)}},Ze=(e,t,a,n)=>{let o,r=[],s=!1;if(!e.lexemes[t])throw d(`No commands found after "${n}".`,e.lexemes[t-1]);for(;!s&&t<e.lexemes.length;)(s=Je(n,e.lexemes[t]))?"ELSE"!==e.lexemes[t].content&&(t+=1):(o=r,({lex:t,pcode:r}=Xe(e,t,a+r.length)),r=o.concat(r));if(!s)throw d(`Unterminated "${n}" statement.`,e.lexemes[t-1]);return{lex:t,pcode:r}},Je=(e,t)=>{switch(t.content){case"ELSE":if("IF"!==e)throw d('"ELSE" does not have any matching "IF".',t);return!0;case"ENDIF":if("IF"!==e&&"else"!==e)throw d('"ENDIF" does not have any matching "IF".',t);return!0;case"NEXT":if("FOR"!==e)throw d('"NEXT" does not have any matching "FOR".',t);return!0;case"UNTIL":if("REPEAT"!==e)throw d('"UNTIL" does not have any matching "REPEAT".',t);return!0;case"ENDWHILE":if("WHILE"!==e)throw d('"ENDWHILE" does not have any matching "WHILE".',t);return!0;default:return!1}},et=(e,t,a)=>{const n=["begin","do",".","repeat",";","then"],o=["else","end",";","until"];let r;switch(e.lexemes[t].type){case"turtle":case"identifier":if(e.lexemes[t+1]&&"="===e.lexemes[t+1].content)throw d('Variable assignment in Pascal uses ":=", not "=".',e.lexemes[t+1]);if(e.lexemes[t+1]&&":="===e.lexemes[t+1].content){r=Q(e,e.lexemes[t].content,t+2,"Pascal");break}r=_(e,t,"Pascal");break;case"keyword":switch(e.lexemes[t].content){case"if":r=tt(e,t+1,a);break;case"for":r=at(e,t+1,a);break;case"repeat":r=nt(e,t+1,a);break;case"while":r=ot(e,t+1,a);break;default:throw d("Command cannot begin with {lex}.",e.lexemes[t])}break;default:throw d("Command cannot begin with {lex}.",e.lexemes[t])}if(e.lexemes[r.lex])if(";"!==e.lexemes[r.lex].content){if(-1===n.indexOf(e.lexemes[r.lex-1].content)&&-1===o.indexOf(e.lexemes[r.lex].content))throw d("Semicolon needed after command.",e.lexemes[r.lex])}else for(;e.lexemes[r.lex]&&";"===e.lexemes[r.lex].content;)r.lex+=1;return r},tt=(e,t,a)=>{let n,o,r,s;if(!e.lexemes[t])throw d('"IF" must be followed by a boolean expression.',e.lexemes[t-1]);if(t=(s=K(e,t,"null","boolean","Pascal")).lex,n=s.pcode[0],!e.lexemes[t])throw d('"IF ..." must be followed by "THEN".',e.lexemes[t-1]);if("then"!==e.lexemes[t].content)throw d('"IF ..." must be followed by "THEN".',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('No commands found after "IF".',e.lexemes[t]);if(t=(s="begin"===e.lexemes[t].content?rt(e,t+1,a+1,"begin"):et(e,t,a+1)).lex,o=s.pcode,"else"===e.lexemes[t].content){if(t+=1,!e.lexemes[t])throw d('No commands found after "ELSE".',e.lexemes[t]);t=(s="begin"===e.lexemes[t].content?rt(e,t+1,a+o.length+2,"begin"):et(e,t,a+o.length+2)).lex,r=s.pcode}return{lex:t,pcode:N(a,n,o,r)}},at=(e,t,a)=>{let n,o,r,s,i,c,l;if(!e.lexemes[t])throw d('"FOR" must be followed by an integer variable.',e.lexemes[t-1]);if("turtle"===e.lexemes[t].type)throw d('Turtle attribute cannot be used as a "FOR" variable.',e.lexemes[t]);if("identifier"!==e.lexemes[t].type)throw d('"FOR" must be followed by an integer variable.',e.lexemes[t]);if(!(n=x(e,e.lexemes[t].content)))throw d("Variable {lex} has not been declared.",e.lexemes[t]);if("integer"!==n.fulltype.type)throw d("{lex} is not an integer variable.",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('"FOR" loop variable must be assigned an initial value.',e.lexemes[t-1]);if("="===e.lexemes[t].content)throw d('Assignment operator is ":=", not "=".',e.lexemes[t]);if(":="!==e.lexemes[t].content)throw d('"FOR" loop variable must be assigned an initial value.',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('"FOR" loop variable must be assigned an initial value.',e.lexemes[t-1]);if(t=(l=K(e,t,"null","integer","Pascal")).lex,o=l.pcode[0],!e.lexemes[t])throw d('"FOR ... := ..." must be followed by "TO" or "DOWNTO".',e.lexemes[t-1]);switch(e.lexemes[t].content){case"to":s="mreq",i="incr";break;case"downto":s="lseq",i="decr";break;default:throw d('"FOR ... := ..." must be followed by "TO" or "DOWNTO".',e.lexemes[t])}if(t+=1,!e.lexemes[t])throw d('"TO" or "DOWNTO" must be followed by an integer (or integer constant).',e.lexemes[t-1]);if(t=(l=K(e,t,"null","integer","Pascal")).lex,r=l.pcode[0],!e.lexemes[t])throw d('"FOR" loop range must be followed by "DO".',e.lexemes[t-1]);if("do"!==e.lexemes[t].content)throw d('"FOR" loop range must be followed by "DO".',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('No commands found after "FOR" loop initialisation.',e.lexemes[t-1]);return t=(l="begin"===e.lexemes[t].content?rt(e,t+1,a+3,"begin"):et(e,t,a+3)).lex,c=l.pcode,{lex:t,pcode:j(a,n,o,r,s,i,c)}},nt=(e,t,a)=>{let n,o,r;if(t=(r=rt(e,t,a,"repeat")).lex,o=r.pcode,!e.lexemes[t])throw d('"UNTIL" must be followed by a boolean expression.',e.lexemes[t-1]);return t=(r=K(e,t,"null","boolean",!1)).lex,n=r.pcode[0],{lex:t,pcode:D(a,n,o)}},ot=(e,t,a)=>{let n,o,r;if(!e.lexemes[t])throw d('"WHILE" must be followed by a boolean expression.',e.lexemes[t-1]);if(t=(r=K(e,t,"null","boolean",!1)).lex,n=r.pcode[0],!e.lexemes[t])throw d('"WHILE ..." must be followed by "DO".',e.lexemes[t-1]);if("do"!==e.lexemes[t].content)throw d('"WHILE ..." must be followed by "DO".',e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d('No commands found after "WHILE" loop initialisation.',e.lexemes[t]);return t=(r="begin"===e.lexemes[t].content?rt(e,t+1,a+1,"begin"):et(e,t,a+1)).lex,o=r.pcode,{lex:t,pcode:F(a,n,o)}},rt=(e,t,a,n)=>{let o,r=[],s=!1;if(!e.lexemes[t])throw d('No commands found after "BEGIN".',e.lexemes[t-1]);for(;!s&&t<e.lexemes.length;)(s=st(n,e.lexemes[t]))?t+=1:(o=r,({lex:t,pcode:r}=et(e,t,a+r.length)),r=o.concat(r));if(!s)throw d('"BEGIN" does not have any matching "END".',e.lexemes[t-1]);return{lex:t,pcode:r}},st=(e,t)=>{switch(t.content){case"end":if("begin"!==e)throw d('"END" does not have any matching "BEGIN".',t);return!0;case"until":if("repeat"!==e)throw d('"UNTIL" does not have any matching "REPEAT".',t);return!0;default:return!1}},it=(e,t,a)=>{let n;switch(e.lexemes[t].type){case"turtle":case"identifier":if(e.lexemes[t+1]&&"=="===e.lexemes[t+1].content)throw d('Variable assignment in Python uses "=", not "==".',e.lexemes[t+1]);if(e.lexemes[t+1]&&"="===e.lexemes[t+1].content){n=Q(e,e.lexemes[t].content,t+2,"Python");break}n=_(e,t,"Python");break;case"keyword":switch(e.lexemes[t].content){case"return":n=Q(e,"return",t+1,"Python");break;case"if":n=ct(e,t+1,a);break;case"for":n=lt(e,t+1,a);break;case"while":n=dt(e,t+1,a);break;default:throw d("{lex} makes no sense here.",e.lexemes[t])}break;default:throw d("{lex} makes no sense here.",e.lexemes[t])}if(e.lexemes[n.lex]&&e.lexemes[n.lex].line===e.lexemes[n.lex-1].line)throw d("Command must be on a new line.",e.lexemes[n.lex]);return n},ct=(e,t,a)=>{let n,o,r,s;if(!e.lexemes[t])throw d("if01",e.lexemes[t-1]);if(!ut(e.lexemes,t))throw d("if02",e.lexemes[t]);if(t=(s=K(e,t,"null","boolean","Python")).lex,n=s.pcode[0],!e.lexemes[t])throw d("if03",e.lexemes[t-1]);if(!mt(e.lexemes,t,":"))throw d("if04",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("if05",e.lexemes[t-1]);if(ut(e.lexemes,t))throw d("if06",e.lexemes[t]);if(!ht(e.lexemes,t))throw d("if07",e.lexemes[t]);if(t=(s=bt(e,t,a+1,e.lexemes[t].offset)).lex,o=s.pcode,e.lexemes[t]&&"else"===e.lexemes[t].content){if(ut(e.lexemes,t))throw d("if08",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("if09",e.lexemes[t-1]);if(!mt(e.lexemes,t,":"))throw d("if10",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("if11",e.lexemes[t-1]);if(ut(e.lexemes,t))throw d("if12",e.lexemes[t]);if(!ht(e.lexemes,t))throw d("if13",e.lexemes[t]);t=(s=bt(e,t,a+o.length+2,e.lexemes[t].offset)).lex,r=s.pcode}return{lex:t,pcode:N(a,n,o,r)}},lt=(e,t,a)=>{let n,o,r,s,i,c,l;if(!e.lexemes[t])throw d("for01",e.lexemes[t-1]);if("turtle"===e.lexemes[t].type)throw d("for02",e.lexemes[t]);if(!pt(e.lexemes,t,"identifier"))throw d("for03",e.lexemes[t]);if(!(n=x(e,e.lexemes[t].content,"Python")))throw d("for04",e.lexemes[t]);if("integer"!==n.fulltype.type&&"boolint"!==n.fulltype.type)throw d("for05",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for06",e.lexemes[t-1]);if(!mt(e.lexemes,t,"in"))throw d("for07",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for08",e.lexemes[t-1]);if(!mt(e.lexemes,t,"range"))throw d("for09",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for10",e.lexemes[t-1]);if(!mt(e.lexemes,t,"("))throw d("for11",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for12",e.lexemes[t-1]);if(!ut(e.lexemes,t))throw d("for13",e.lexemes[t]);if(t=(l=K(e,t,"null","integer","Python")).lex,o=l.pcode[0],!e.lexemes[t])throw d("for14",e.lexemes[t-1]);if(!mt(e.lexemes,t,","))throw d("for15",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for16",e.lexemes[t-1]);if(!ut(e.lexemes,t))throw d("for17",e.lexemes[t]);if(t=(l=K(e,t,"null","integer","Python")).lex,r=l.pcode[0],!e.lexemes[t])throw d("for18",e.lexemes[t-1]);if(!mt(e.lexemes,t,","))throw d("for19",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for20",e.lexemes[t-1]);if(!ut(e.lexemes,t))throw d("for21",e.lexemes[t]);if("integer"===e.lexemes[t].type){if(1!==e.lexemes[t].value)throw d("for22",e.lexemes[t]);s="more",i="incr"}else{if("-"!==e.lexemes[t].content)throw d("for26",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for23",e.lexemes[t-1]);if(!pt(e.lexemes,t,"integer"))throw d("for24",e.lexemes[t]);if(1!==e.lexemes[t].value)throw d("for25",e.lexemes[t]);s="less",i="decr"}if(t+=1,!e.lexemes[t])throw d("for27",e.lexemes[t-1]);if(!mt(e.lexemes,t,")"))throw d("for28",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for29",e.lexemes[t-1]);if(!mt(e.lexemes,t,":"))throw d("for30",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("for31",e.lexemes[t-1]);if(ut(e.lexemes,t))throw d("for32",e.lexemes[t]);if(!ht(e.lexemes,t))throw d("for33",e.lexemes[t]);return t=(l=bt(e,t,a+3,e.lexemes[t].offset)).lex,c=l.pcode,{lex:t,pcode:j(a,n,o,r,s,i,c)}},dt=(e,t,a)=>{let n,o,r;if(!e.lexemes[t])throw d("while01",e.lexemes[t-1]);if(!ut(e.lexemes,t))throw d("while02",e.lexemes[t]);if(t=(r=K(e,t,"null","boolean","Python")).lex,n=r.pcode[0],!e.lexemes[t])throw d("while03",e.lexemes[t-1]);if(!mt(e.lexemes,t,":"))throw d("while04",e.lexemes[t]);if(t+=1,!e.lexemes[t])throw d("while05",e.lexemes[t-1]);if(ut(e.lexemes,t))throw d("while06",e.lexemes[t]);if(!ht(e.lexemes,t))throw d("while07",e.lexemes[t]);return t=(r=bt(e,t,a+1,e.lexemes[t].offset)).lex,o=r.pcode,{lex:t,pcode:F(a,n,o)}},ut=(e,t)=>e[t].line===e[t-1].line,pt=(e,t,a)=>ut(e,t)&&e[t].type===a,mt=(e,t,a)=>ut(e,t)&&e[t].content===a,ht=(e,t)=>e[t].offset>e[t-1].offset,bt=(e,t,a,n)=>{let o,r=[],s=!1;if(!e.lexemes[t])throw d("blockNothing",e.lexemes[t-1]);for(;!s&&t<e.lexemes.length;)(s=e.lexemes[t].offset<n)||(o=r,({lex:t,pcode:r}=it(e,t,a+r.length)),r=o.concat(r));return{lex:t,pcode:r}};var gt=(e,t)=>{const a=e[0],n=e.slice(1).length>0?4:3,o=ft(e,n,t),r=n+o.length,s=yt(a,r,t);return((e,t,a)=>{const n=X(e),o=[[S.a.jump,n.length+t.length+2]],r=[[S.a.halt]];return t.length>1?n.concat(o).concat(t).concat(a).concat(r):n.concat(a).concat(r)})(e[0],o,s)};const ft=(e,t,a)=>{let n=[],o=1;for(;o<e.length;){e[o].startLine=t;const r=U(e[o]).length;let s=yt(e[o],t+r,a),i=B(e[o],s);n=n.concat(i),o+=1,t+=i.length}return n},yt=(e,t,a)=>{const n={BASIC:Xe,Pascal:et,Python:it};let o=[],r=0;for(;r<e.lexemes.length;){let s=n[a].call(null,e,r,t+o.length);o=o.concat(s.pcode),r=s.lex}return o};var xt=(e,t)=>{const a=((e,t)=>{const a=Object(u.a)(e,t),n=[],o=["BASIC","Pascal","Python"].indexOf(t);let r=0,s=1,i=!0,c=0;for(;r<a.length;){switch(a[r].type){case"linebreak":s+=1,i=!0,c=0;break;case"spaces":i&&(c=a[r].content.length),i=!1;break;case"comment":i=!1;break;case"unterminated-comment":throw d(p[0],m(a[r],s,c,t));case"unterminated-string":throw d(p[1],m(a[r],s,c,t));case"bad-binary":throw d(p[2+o],m(a[r],s,c,t));case"bad-octal":throw d(p[5+o],m(a[r],s,c,t));case"bad-hexadecimal":throw d(p[8+o],m(a[r],s,c,t));case"bad-decimal":throw d(p[11],m(a[r],s,c,t));case"illegal":throw d(p[12],m(a[r],s,c,t));default:i=!1,n.push(m(a[r],s,c,t))}r+=1}return n})(e,t),n=((e,t)=>{const a={BASIC:he,Pascal:ye,Python:Ae};if(0===e.length)throw d("Program does not contain any lexemes.");const n=a[t](e),o=n[0],r=n.slice(1);if("Python"===t){qe(n,0),n.length>1&&$e(n,n.length-1);const e=ze(n);if(e)throw d("Could not detetermine type of variable {lex}.",e.lexeme)}return n.forEach(We),o.turtleAddress=Ye(r),n})(a,t);console.log(n);const o=gt(n,t);return console.log(o),{usage:((e,t,a)=>s.c.concat({title:"Subroutine calls",expressions:t}).map(l.bind(null,a,e)).filter(e=>e.expressions.length>0))(a,n.slice(1),t),pcode:o}};const wt=(e,t)=>{Ft.addEventListener(e,t)},vt=(e,t)=>{Ft.removeEventListener(e,t)},kt=()=>Ft.getBoundingClientRect(),Tt=(e,t)=>{Ft.width=e,Ft.height=t},Ot=e=>{const t=e<0||e>15?1:e;Ft.style.cursor=o.b[t].css},Et=(e,t,a,r)=>{Bt.textBaseline="top",Bt.fillStyle=Object(n.c)(e.c),Bt.font=`${r}pt ${o.d[15&a].css}`,(16&a)>0&&(Bt.font=`bold ${Bt.font}`),(32&a)>0&&(Bt.font=`italic ${Bt.font}`),Bt.fillText(t,e.x,e.y)},St=(e,t,a)=>{Bt.beginPath(),Bt.moveTo(e.x,e.y),Bt.lineTo(t,a),Bt.lineCap="round",Bt.lineWidth=e.t,Bt.strokeStyle=Object(n.c)(e.c),Bt.stroke()},Rt=(e,t,a)=>{Bt.beginPath(),t.forEach((e,t)=>{0===t?Bt.moveTo(e[0],e[1]):Bt.lineTo(e[0],e[1])}),a?(Bt.closePath(),Bt.fillStyle=Object(n.c)(e.c),Bt.fill()):(Bt.lineCap="round",Bt.lineWidth=e.t,Bt.strokeStyle=Object(n.c)(e.c),Bt.stroke())},Lt=(e,t,a,o)=>{Bt.beginPath(),t===a?Bt.arc(e.x,e.y,t,0,2*Math.PI,!1):(Bt.save(),Bt.translate(e.x-t,e.y-a),Bt.scale(t,a),Bt.arc(1,1,1,0,2*Math.PI,!1),Bt.restore()),o?(Bt.fillStyle=Object(n.c)(e.c),Bt.fill()):(Bt.lineWidth=e.t,Bt.strokeStyle=Object(n.c)(e.c),Bt.stroke())},Ct=(e,t,a,o,r)=>{Bt.beginPath(),Bt.moveTo(e.x,e.y),Bt.lineTo(t,e.y),Bt.lineTo(t,a),Bt.lineTo(e.x,a),Bt.closePath(),Bt.fillStyle=Object(n.c)(o),Bt.fill(),r&&(Bt.lineCap="round",Bt.lineWidth=e.t,Bt.strokeStyle=Object(n.c)(e.c),Bt.stroke())},Pt=(e,t)=>{const a=Bt.getImageData(e,t,1,1);return 65536*a.data[0]+256*a.data[1]+a.data[2]},Mt=(e,t,a,n)=>{const o=Bt.createImageData(1,1);o.data[0]=a>>16&255,o.data[1]=a>>8&255,o.data[2]=255&a,o.data[3]=255,Bt.putImageData(o,e,t),n&&(Bt.putImageData(o,e-1,t),Bt.putImageData(o,e,t-1),Bt.putImageData(o,e-1,t-1))},It=e=>{Bt.fillStyle=Object(n.c)(e),Bt.fillRect(0,0,Ft.width,Ft.height)},At=(e,t,a,n,o)=>{const r=Bt.getImageData(0,0,Ft.width,Ft.height),s=[],i=[0,-1,1,0],c=[-1,0,0,1];let l=0,d=4*(t*Ft.width+e);const u=65536*r.data[d]+256*r.data[d+1]+r.data[d+2];let p,m,h,b,g,f,y=e,x=t;for(s.push(y),s.push(x);s.length>0;)for(x=s.pop(),y=s.pop(),l=0;l<4;l+=1)m=x+c[l],b=(p=y+i[l])>0&&p<=Ft.width,g=m>0&&m<=Ft.height,b&&g&&(d=4*(m*Ft.width+p),h=65536*r.data[d],h+=256*r.data[d+1],b=(h+=r.data[d+2])!==a,g=h!==n||!o,b&&g&&(f=h===u||o)&&(d=4*(m*Ft.width+p),r.data[d]=(16711680&a)>>16,r.data[d+1]=(65280&a)>>8,r.data[d+2]=255&a,s.push(p),s.push(m)));Bt.putImageData(r,0,0)},Nt=e=>{Gt.innerHTML+=e,Ut.innerHTML+=e},jt=(e,t)=>{e&&(Gt.innerHTML=""),Gt.style.background=Object(n.c)(t)},Dt=(e,t)=>{e&&(Ut.innerHTML=""),Ut.style.background=Object(n.c)(t)};let Ft,Bt,Ut,Gt;const Ht=(e,t)=>{Yt[e]=t},qt=()=>Xt.running,$t=()=>{return{stack:Vt.slice(0,aa.stackTop+1),heap:Vt.slice(aa.heapBase,aa.heapMax)}},zt=(e,t)=>{Ft=document.querySelector(".tsx-canvas"),Bt=Ft.getContext("2d"),Ut=document.querySelector(".tsx-console"),Gt=document.querySelector(".tsx-output"),Tt(1e3,1e3),Dt(!0,16777215),jt(!0,16777215),t.showCanvas&&Yt.show("canvas"),Vt.length=2097152,Kt.length=256,Qt.length=16,Vt.fill(0),Kt.fill(-1),Qt.fill(-1),_t.length=0,Zt.length=0,Jt.length=0,ea.length=0,ta.length=0,aa.stackTop=0,aa.heapGlobal=-1,aa.heapBase=t.stackSize-1,aa.heapTemp=aa.heapBase,aa.heapPerm=aa.heapTemp,aa.heapMax=aa.heapTemp,na.startx=0,na.starty=0,na.sizex=1e3,na.sizey=1e3,na.width=1e3,na.height=1e3,na.degrees=360,na.doubled=!1,oa.startTime=Date.now(),oa.pendown=!0,oa.update=!0,oa.keyecho=!0,oa.input="",oa.detect=null,oa.readline=null,Xt.running=!0,Xt.paused=!1,window.addEventListener("keydown",ra),window.addEventListener("keyup",sa),window.addEventListener("keypress",ia),wt("contextmenu",ua),wt("mousemove",ca),wt("touchmove",ua),wt("touchmove",ca),wt("mousedown",ua),wt("mousedown",la),wt("touchstart",la),wt("mouseup",da),wt("touchend",da),Yt.run(),pa(e,0,0,t)},Wt=()=>{window.removeEventListener("keydown",ra),window.removeEventListener("keyup",sa),window.removeEventListener("keypress",ia),vt("contextmenu",ua),vt("mousemove",ca),vt("touchmove",ua),vt("touchmove",ca),vt("mousedown",ua),vt("mousedown",la),vt("touchstart",la),vt("mouseup",da),vt("touchend",da),Ot(1),Xt.running=!1,Xt.paused=!1,Yt.halt()},Yt={},Xt={running:!1,paused:!1},Vt=[],Kt=[],Qt=[],_t=[],Zt=[],Jt=[],ea=[],ta=[],aa={},na={},oa={},ra=e=>{const t=e.keyCode||e.charCode;if(8===t){e.preventDefault();const t=Vt[1],a=Vt[t+1],n=Vt[t+2];a<n&&(Vt[n]=0,Vt[t+2]-=1),oa.input=oa.input.slice(0,-1),oa.keyecho&&(Ut.innerHTML=Ut.innerHTML.slice(0,-1))}t>=37&&t<=40&&e.preventDefault(),Qt[9]=t,Qt[10]=128,e.shiftKey&&(Qt[10]+=8),e.altKey&&(Qt[10]+=16),e.ctrlKey&&(Qt[10]+=32),Kt[t]=Qt[10]},sa=e=>{const t=e.keyCode||e.charCode;Qt[9]=-Qt[9],Qt[10]=-Qt[10],Kt[t]=-Kt[t]},ia=e=>{const t=e.keyCode||e.charCode,a=Vt[1];if(a>0){let e=0;(e=Vt[a+2]===Vt[a]?a+3:Vt[a+2]+1)!==Vt[a+1]&&(Vt[Vt[a+2]]=t,Vt[a+2]=e)}oa.keyecho&&(e=>{Ut.innerHTML+=e})(String.fromCharCode(t))},ca=e=>{switch(e.type){case"mousemove":Qt[7]=Ea(e.clientX),Qt[8]=Sa(e.clientY);break;case"touchmove":case"touchstart":Qt[7]=Ea(e.touches[0].clientX),Qt[8]=Sa(e.touches[0].clientY)}},la=e=>{const t=Date.now();switch(Qt[4]=128,e.shiftKey&&(Qt[4]+=8),e.altKey&&(Qt[4]+=16),e.ctrlKey&&(Qt[4]+=32),t-Qt[11]<300&&(Qt[4]+=64),Qt[11]=t,e.type){case"mousedown":switch(Qt[5]=Ea(e.clientX),Qt[6]=Sa(e.clientY),e.button){case 0:Qt[4]+=1,Qt[1]=Qt[4],Qt[2]=-1,Qt[3]=-1;break;case 1:Qt[4]+=4,Qt[1]=-1,Qt[2]=-1,Qt[3]=Qt[4];break;case 2:Qt[4]+=2,Qt[1]=-1,Qt[2]=Qt[4],Qt[3]=-1}break;case"touchstart":Qt[5]=Ea(e.touches[0].clientX),Qt[6]=Sa(e.touches[0].clientY),Qt[4]+=1,Qt[1]=Qt[4],Qt[2]=-1,Qt[3]=-1,ca(e)}},da=e=>{switch(Qt[4]=-Qt[4],e.type){case"mouseup":switch(e.button){case 0:Qt[1]=-Qt[1];break;case 1:Qt[2]=-Qt[3];break;case 2:Qt[2]=-Qt[2]}break;case"touchend":Qt[1]=-Qt[1]}},ua=e=>{e.preventDefault()},pa=(e,t,a,n)=>{if(!Xt.running)return;if(Xt.paused)return void setTimeout(pa,1,e,t,a,n);window.removeEventListener("keypress",oa.detect),window.removeEventListener("keypress",oa.readline);let r,s,i,c,l=0,d=0;for(;l<n.drawCountMax&&d<=n.codeCountMax;){switch(e[t][a]){case S.a.dupl:r=Zt.pop(),Zt.push(r,r);break;case S.a.swap:s=Zt.pop(),r=Zt.pop(),Zt.push(s,r);break;case S.a.rota:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(s,i,r);break;case S.a.incr:r=Zt.pop(),Zt.push(r+1);break;case S.a.decr:r=Zt.pop(),Zt.push(r-1);break;case S.a.not:r=Zt.pop(),Zt.push(~r);break;case S.a.and:s=Zt.pop(),r=Zt.pop(),Zt.push(r&s);break;case S.a.or:s=Zt.pop(),r=Zt.pop(),Zt.push(r|s);break;case S.a.xor:s=Zt.pop(),r=Zt.pop(),Zt.push(r^s);break;case S.a.neg:r=Zt.pop(),Zt.push(-r);break;case S.a.abs:r=Zt.pop(),Zt.push(Math.abs(r));break;case S.a.sign:r=Zt.pop(),Zt.push(Math.sign(r));break;case S.a.rand:r=Zt.pop(),Zt.push(Math.floor(Math.random()*Math.abs(r)));break;case S.a.plus:s=Zt.pop(),r=Zt.pop(),Zt.push(r+s);break;case S.a.subt:s=Zt.pop(),r=Zt.pop(),Zt.push(r-s);break;case S.a.mult:s=Zt.pop(),r=Zt.pop(),Zt.push(r*s);break;case S.a.divr:s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(r/s));break;case S.a.div:s=Zt.pop(),r=Zt.pop(),Zt.push(Math.floor(r/s));break;case S.a.mod:s=Zt.pop(),r=Zt.pop(),Zt.push(r%s);break;case S.a.divm:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(r/s*i));break;case S.a.sqrt:s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.sqrt(r)*s));break;case S.a.hyp:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.sqrt(r*r+s*s)*i));break;case S.a.root:c=Zt.pop(),i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.pow(r/s,1/i)*c));break;case S.a.powr:c=Zt.pop(),i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.pow(r/s,i)*c));break;case S.a.log:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.log(r/s)/Math.LN10*i));break;case S.a.alog:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.pow(10,r/s)*i));break;case S.a.ln:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.log(r/s)*i));break;case S.a.exp:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Zt.push(Math.round(Math.exp(r/s)*i));break;case S.a.sin:c=Zt.pop(),i=Zt.pop(),r=(s=Zt.pop())/i*(2*Math.PI)/na.degrees,Zt.push(Math.round(Math.sin(r)*c));break;case S.a.cos:c=Zt.pop(),i=Zt.pop(),r=(s=Zt.pop())/i*(2*Math.PI)/na.degrees,Zt.push(Math.round(Math.cos(r)*c));break;case S.a.tan:c=Zt.pop(),i=Zt.pop(),r=(s=Zt.pop())/i*(2*Math.PI)/na.degrees,Zt.push(Math.round(Math.tan(r)*c));break;case S.a.asin:c=Zt.pop(),i=Zt.pop(),s=Zt.pop(),r=na.degrees/(2*Math.PI),Zt.push(Math.round(Math.asin(s/i)*c*r));break;case S.a.acos:c=Zt.pop(),i=Zt.pop(),s=Zt.pop(),r=na.degrees/(2*Math.PI),Zt.push(Math.round(Math.acos(s/i)*c*r));break;case S.a.atan:c=Zt.pop(),i=Zt.pop(),s=Zt.pop(),r=na.degrees/(2*Math.PI),Zt.push(Math.round(Math.atan2(s,i)*c*r));break;case S.a.pi:r=Zt.pop(),Zt.push(Math.round(Math.PI*r));break;case S.a.ctos:r=Zt.pop(),ha(String.fromCharCode(r));break;case S.a.itos:r=Zt.pop(),ha(r.toString());break;case S.a.hexs:for(s=Zt.pop(),r=Zt.pop().toString(16).toUpperCase();r.length<s;)r="0"+r;ha(r);break;case S.a.sval:i=Zt.pop(),s=Zt.pop(),r=ba(s),c="#"===r[0]?isNaN(parseInt(r.slice(1),16))?i:parseInt(r.slice(1),16):isNaN(parseInt(r,10))?i:parseInt(r,10),Zt.push(c);break;case S.a.qtos:c=Zt.pop(),i=Zt.pop(),s=Zt.pop(),ha((r=s/i).toFixed(c));break;case S.a.qval:i=Zt.pop(),s=Zt.pop(),r=ba(Zt.pop()),c=isNaN(parseFloat(r))?i:parseFloat(r),Zt.push(Math.round(c*s));break;case S.a.scat:s=ba(Zt.pop()),r=ba(Zt.pop()),ha(r+s);break;case S.a.slen:r=ba(Zt.pop()),Zt.push(r.length);break;case S.a.case:s=Zt.pop(),r=ba(Zt.pop()),ha(s>0?r.toUpperCase():s<0?r.toLowerCase():r);break;case S.a.copy:i=Zt.pop(),s=Zt.pop(),r=ba(Zt.pop()),ha(r.substr(s-1,i));break;case S.a.dels:c=Zt.pop(),i=Zt.pop(),r=(s=ba(Zt.pop())).substr(0,i-1)+s.substr(i-1+c),ha(r);break;case S.a.inss:c=Zt.pop(),i=ba(Zt.pop()),s=ba(Zt.pop()),r=i.substr(0,c-1)+s+i.substr(c-1),ha(r);break;case S.a.poss:s=ba(Zt.pop()),r=ba(Zt.pop()),Zt.push(s.indexOf(r)+1);break;case S.a.repl:if(c=Zt.pop(),i=ba(Zt.pop()),s=ba(Zt.pop()),r=ba(Zt.pop()),c>0){for(;c>0;)r=r.replace(s,i),c-=1;ha(r)}else ha(r.replace(new RegExp(s,"g"),i));break;case S.a.eqal:s=Zt.pop(),r=Zt.pop(),Zt.push(r===s?-1:0);break;case S.a.noeq:s=Zt.pop(),r=Zt.pop(),Zt.push(r!==s?-1:0);break;case S.a.less:s=Zt.pop(),r=Zt.pop(),Zt.push(r<s?-1:0);break;case S.a.more:s=Zt.pop(),r=Zt.pop(),Zt.push(r>s?-1:0);break;case S.a.lseq:s=Zt.pop(),r=Zt.pop(),Zt.push(r<=s?-1:0);break;case S.a.mreq:s=Zt.pop(),r=Zt.pop(),Zt.push(r>=s?-1:0);break;case S.a.maxi:s=Zt.pop(),r=Zt.pop(),Zt.push(Math.max(r,s));break;case S.a.mini:s=Zt.pop(),r=Zt.pop(),Zt.push(Math.min(r,s));break;case S.a.seql:s=ba(Zt.pop()),r=ba(Zt.pop()),Zt.push(r===s?-1:0);break;case S.a.sneq:s=ba(Zt.pop()),r=ba(Zt.pop()),Zt.push(r!==s?-1:0);break;case S.a.sles:s=ba(Zt.pop()),r=ba(Zt.pop()),Zt.push(r<s?-1:0);break;case S.a.smor:s=ba(Zt.pop()),r=ba(Zt.pop()),Zt.push(r>s?-1:0);break;case S.a.sleq:s=ba(Zt.pop()),r=ba(Zt.pop()),Zt.push(r<=s?-1:0);break;case S.a.smeq:s=ba(Zt.pop()),r=ba(Zt.pop()),Zt.push(r>=s?-1:0);break;case S.a.smax:s=ba(Zt.pop()),r=ba(Zt.pop()),ha(Math.max(r,s));break;case S.a.smin:s=ba(Zt.pop()),r=ba(Zt.pop()),ha(Math.min(r,s));break;case S.a.ldin:r=e[t][a+1],Zt.push(r),a+=1;break;case S.a.ldvg:r=e[t][a+1],Zt.push(Vt[r]),a+=1;break;case S.a.ldvv:r=e[t][a+1],s=e[t][a+2],Zt.push(Vt[Vt[r]+s]),a+=2;break;case S.a.ldvr:r=e[t][a+1],s=e[t][a+2],Zt.push(Vt[Vt[Vt[r]+s]]),a+=2;break;case S.a.ldag:r=e[t][a+1],Zt.push(r),a+=1;break;case S.a.ldav:r=e[t][a+1],s=e[t][a+2],Zt.push(Vt[r]+s),a+=2;break;case S.a.lstr:for(s=(a+=1)+(r=e[t][a]),i="";a<s;)a+=1,i+=String.fromCharCode(e[t][a]);ha(i);break;case S.a.ldmt:Zt.push(Jt.length-1);break;case S.a.zero:r=e[t][a+1],s=e[t][a+2],Vt[Vt[r]+s]=0,a+=2;break;case S.a.stvg:r=Zt.pop(),Vt[e[t][a+1]]=r,a+=1;break;case S.a.stvv:r=e[t][a+1],s=e[t][a+2],i=Zt.pop(),Vt[Vt[r]+s]=i,a+=2;break;case S.a.stvr:r=e[t][a+1],s=e[t][a+2],i=Zt.pop(),Vt[Vt[Vt[r]+s]]=i,a+=2;break;case S.a.stmt:r=Zt.pop(),Jt.push(r),aa.stackTop=Math.max(r,aa.stackTop);break;case S.a.lptr:r=Zt.pop(),Zt.push(Vt[r]);break;case S.a.sptr:s=Zt.pop(),r=Zt.pop(),Vt[s]=r;break;case S.a.cptr:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),fa(r,s,i);break;case S.a.zptr:s=Zt.pop(),r=Zt.pop(),ga(r,s);break;case S.a.test:break;case S.a.cstr:s=Zt.pop(),r=Zt.pop(),c=Vt[s-1],i=Vt[r],fa(r,s,Math.min(i,c)+1);break;case S.a.jump:t=e[t][a+1]-1,a=-1;break;case S.a.ifno:0===Zt.pop()?(t=e[t][a+1]-1,a=-1):a+=1;break;case S.a.halt:return void Wt();case S.a.subr:-1===aa.heapGlobal&&(aa.heapGlobal=aa.heapPerm),ea.push(t+1),t=e[t][a+1]-1,a=-1;break;case S.a.retn:t=ea.pop(),a=-1;break;case S.a.pssr:ta.push(e[t][a+1]),a+=1;break;case S.a.plsr:ta.pop();break;case S.a.psrj:Zt.push(t+1);break;case S.a.plrj:ea.pop(),t=Zt.pop()-1,a=-1;break;case S.a.memc:if(r=e[t][a+1],s=e[t][a+2],(i=Jt.pop())+s>n.stackSize)throw Wt(),ma("Memory stack has overflowed into memory heap. Probable cause is unterminated recursion.");Jt.push(Vt[r]),aa.stackTop=Math.max(Vt[r],aa.stackTop),Vt[r]=i,Jt.push(i+s),aa.stackTop=Math.max(i+s,aa.stackTop),a+=2;break;case S.a.memr:Jt.pop(),r=e[t][a+1],s=Jt.pop(),Jt.push(Vt[r]),aa.stackTop=Math.max(Vt[r],aa.stackTop),Vt[r]=s,a+=2;break;case S.a.hfix:aa.heapPerm=aa.heapTemp;break;case S.a.hclr:aa.heapTemp=aa.heapPerm;break;case S.a.hrst:aa.heapGlobal>-1&&(aa.heapTemp=aa.heapGlobal,aa.heapPerm=aa.heapGlobal);break;case S.a.pnup:oa.pendown=!1;break;case S.a.pndn:oa.pendown=!0;break;case S.a.udat:oa.update=!0,l=n.drawCountMax;break;case S.a.ndat:oa.update=!1;break;case S.a.kech:r=-1===Zt.pop(),oa.keyecho=r;break;case S.a.outp:i=-1===Zt.pop(),s=Zt.pop(),r=-1===Zt.pop(),jt(r,s),i?Yt.show("output"):Yt.show("canvas");break;case S.a.cons:s=Zt.pop(),r=-1===Zt.pop(),Dt(r,s);break;case S.a.trac:case S.a.memw:Zt.pop();break;case S.a.dump:Yt.dump($t()),n.showMemory&&Yt.show("memory");break;case S.a.time:r=Date.now(),r-=oa.startTime,Zt.push(r);break;case S.a.tset:r=Date.now(),s=Zt.pop(),oa.startTime=r-s;break;case S.a.wait:return r=Zt.pop(),(a+=1)===e[t].length&&(t+=1,a=0),void setTimeout(pa,r,e,t,a,n);case S.a.tdet:return s=Zt.pop(),r=Zt.pop(),Zt.push(0),(a+=1)===e[t].length&&(t+=1,a=0),i=setTimeout(pa,r,e,t,a,n),oa.detect=ya.bind(null,s,i,e,t,a,n),void window.addEventListener("keyup",oa.detect);case S.a.inpt:(r=Zt.pop())<0?Zt.push(Qt[-r]):Zt.push(Kt[r]);break;case S.a.iclr:(r=Zt.pop())<0?Qt[-r]=-1:Kt[r]=-1;break;case S.a.bufr:(r=Zt.pop())>0&&(s=aa.heapTemp+4,Zt.push(aa.heapTemp+1),Vt[aa.heapTemp+1]=s+r,Vt[aa.heapTemp+2]=s,Vt[aa.heapTemp+3]=s,Vt.fill(0,s,s+r),aa.heapTemp=s+r,aa.heapMax=Math.max(aa.heapTemp,aa.heapMax));break;case S.a.read:r=Zt.pop(),s=Vt[1],i="",c="";let d=!1;for(;r>0&&!d;)Vt[s+1]===Vt[s+2]?d=!0:(c=Vt[Vt[s+1]],i+=String.fromCharChode(c),Vt[s+1]+=1),r-=1;ha(i);break;case S.a.rdln:return r=Math.pow(2,31)-1,(a+=1)===e[t].length&&(t+=1,a=0),s=setTimeout(pa,r,e,t,a,n),oa.readline=xa.bind(null,s,e,t,a,n),void window.addEventListener("keypress",oa.readline);case S.a.prnt:i=Zt.pop(),s=Zt.pop(),r=ba(Zt.pop()),Et(wa(),r,s,i);break;case S.a.text:r=ba(Zt.pop()),Nt(r),n.showOutput&&Yt.show("output");break;case S.a.newl:Nt("\n");break;case S.a.fdir:case S.a.open:case S.a.clos:case S.a.fptr:case S.a.fbeg:case S.a.eof:case S.a.frds:case S.a.frln:case S.a.fwrs:case S.a.fwnl:break;case S.a.canv:na.sizey=Zt.pop(),na.sizex=Zt.pop(),na.starty=Zt.pop(),na.startx=Zt.pop(),Vt[Vt[0]+1]=Math.round(na.startx+na.sizex/2),Vt[Vt[0]+2]=Math.round(na.starty+na.sizey/2),Vt[Vt[0]+3]=0,Yt.turtx(Vt[Vt[0]+1]),Yt.turty(Vt[Vt[0]+2]),Yt.turtd(Vt[Vt[0]+3]),_t.push([Vt[Vt[0]+1],Vt[Vt[0]+2]]),l=n.drawCountMax;break;case S.a.reso:s=Zt.pop(),r=Zt.pop(),Math.min(r,s)<n.smallSize&&(r*=2,s*=2,na.doubled=!0),na.width=r,na.height=s,Tt(r,s),It(16777215),l=n.drawCountMax;break;case S.a.pixc:s=Zt.pop(),r=Zt.pop(),Zt.push(Pt(va(r),ka(s)));break;case S.a.pixs:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),Mt(va(r),ka(s),i,na.doubled),oa.update&&(l+=1);break;case S.a.angl:r=Zt.pop(),s=Math.round(r+Vt[Vt[0]+3]*r/na.degrees),Vt[Vt[0]+3]=s%r,Yt.turtd(Vt[Vt[0]+3]),na.degrees=r;break;case S.a.curs:r=Zt.pop(),Ot(r);break;case S.a.home:r=na.startx+na.sizex/2,s=na.starty+na.sizey/2,Vt[Vt[0]+1]=Math.round(r),Vt[Vt[0]+2]=Math.round(s),Vt[Vt[0]+3]=0,Yt.turtx(Vt[Vt[0]+1]),Yt.turty(Vt[Vt[0]+2]),Yt.turtd(Vt[Vt[0]+3]),_t.push([Vt[Vt[0]+1],Vt[Vt[0]+2]]);break;case S.a.setx:r=Zt.pop(),Vt[Vt[0]+1]=r,Yt.turtx(r),_t.push([Vt[Vt[0]+1],Vt[Vt[0]+2]]);break;case S.a.sety:r=Zt.pop(),Vt[Vt[0]+2]=r,Yt.turty(r),_t.push([Vt[Vt[0]+1],Vt[Vt[0]+2]]);break;case S.a.setd:r=Zt.pop()%na.degrees,Vt[Vt[0]+3]=r,Yt.turtd(r);break;case S.a.thik:r=Zt.pop(),Vt[Vt[0]+4]=r,Yt.turtt(r);break;case S.a.colr:r=Zt.pop(),Vt[Vt[0]+5]=r,Yt.turtc(r);break;case S.a.rgb:r=Zt.pop(),(r%=50)<=0&&(r+=50),r=o.a[r-1].value,Zt.push(r);break;case S.a.mixc:c=Zt.pop(),i=Zt.pop(),s=Zt.pop();const u=(e,t)=>Math.round((e*i+t*c)/(i+c)),p=e=>Math.floor(e/65536),m=e=>Math.floor((65280&e)/256),h=e=>255&e,b=u(p(r=Zt.pop()),p(s)),g=u(m(r),m(s)),f=u(h(r),h(s));Zt.push(65536*b+256*g+f);break;case S.a.toxy:s=Zt.pop(),r=Zt.pop(),Vt[Vt[0]+1]=r,Vt[Vt[0]+2]=s,Yt.turtx(r),Yt.turty(s),_t.push([r,s]);break;case S.a.mvxy:s=Zt.pop()+Vt[Vt[0]+2],r=Zt.pop()+Vt[Vt[0]+1],Vt[Vt[0]+1]=r,Vt[Vt[0]+2]=s,Yt.turtx(r),Yt.turty(s),_t.push([r,s]);break;case S.a.drxy:s=Zt.pop()+Vt[Vt[0]+2],r=Zt.pop()+Vt[Vt[0]+1],oa.pendown&&(St(wa(),va(r),ka(s)),oa.update&&(l+=1)),Vt[Vt[0]+1]=r,Vt[Vt[0]+2]=s,Yt.turtx(r),Yt.turty(s),_t.push([r,s]);break;case S.a.fwrd:i=Zt.pop(),s=Vt[Vt[0]+3],s=Math.cos(s*Math.PI/(na.degrees/2)),s=-Math.round(s*i),s+=Vt[Vt[0]+2],r=Vt[Vt[0]+3],r=Math.sin(r*Math.PI/(na.degrees/2)),r=Math.round(r*i),r+=Vt[Vt[0]+1],oa.pendown&&(St(wa(),va(r),ka(s)),oa.update&&(l+=1)),Vt[Vt[0]+1]=r,Vt[Vt[0]+2]=s,Yt.turtx(r),Yt.turty(s),_t.push([r,s]);break;case S.a.back:i=Zt.pop(),s=Vt[Vt[0]+3],s=Math.cos(s*Math.PI/(na.degrees/2)),s=Math.round(s*i),s+=Vt[Vt[0]+2],r=Vt[Vt[0]+3],r=Math.sin(r*Math.PI/(na.degrees/2)),r=-Math.round(r*i),r+=Vt[Vt[0]+1],oa.pendown&&(St(wa(),va(r),ka(s)),oa.update&&(l+=1)),Vt[Vt[0]+1]=r,Vt[Vt[0]+2]=s,Yt.turtx(r),Yt.turty(s),_t.push([r,s]);break;case S.a.left:r=(Vt[Vt[0]+3]-Zt.pop())%na.degrees,Vt[Vt[0]+3]=r,Yt.turtd(r);break;case S.a.rght:r=(Vt[Vt[0]+3]+Zt.pop())%na.degrees,Vt[Vt[0]+3]=r,Yt.turtd(r);break;case S.a.turn:s=Zt.pop(),r=Zt.pop(),Math.abs(s)>=Math.abs(r)?(i=Math.atan(-r/s),s>0?i+=Math.PI:r<0&&(i+=2,i*=Math.PI)):(i=Math.atan(s/r),r>0?i+=Math.PI:(i+=3,i*=Math.PI),i/=2),i=Math.round(i*na.degrees/Math.PI/2)%na.degrees,Vt[Vt[0]+3]=i,Yt.turtd(i);break;case S.a.rmbr:_t.push([Vt[Vt[0]+1],Vt[Vt[0]+2]]);break;case S.a.frgt:_t.length-=Zt.pop();break;case S.a.poly:i=Zt.pop(),s=_t.length,r=i>s?0:s-i,Rt(wa(),_t.slice(r,s).map(Oa),!1),oa.update&&(l+=1);break;case S.a.pfil:i=Zt.pop(),s=_t.length,r=i>s?0:s-i,Rt(wa(),_t.slice(r,s).map(Oa),!0),oa.update&&(l+=1);break;case S.a.circ:r=Zt.pop(),Lt(wa(),va(r+na.startx),ka(r+na.starty),!1),oa.update&&(l+=1);break;case S.a.blot:r=Zt.pop(),Lt(wa(),va(r+na.startx),ka(r+na.starty),!0),oa.update&&(l+=1);break;case S.a.elps:s=Zt.pop(),r=Zt.pop(),Lt(wa(),va(r+na.startx),ka(s+na.starty),!1),oa.update&&(l+=1);break;case S.a.eblt:s=Zt.pop(),r=Zt.pop(),Lt(wa(),va(r+na.startx),ka(s+na.starty),!0),oa.update&&(l+=1);break;case S.a.box:c=-1===Zt.pop(),i=Zt.pop(),s=Vt[Vt[0]+2]+Zt.pop(),r=Vt[Vt[0]+1]+Zt.pop(),Ct(wa(),va(r),ka(s),i,c),oa.update&&(l+=1);break;case S.a.blnk:r=Zt.pop(),It(r),oa.update&&(l+=1);break;case S.a.rcol:i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),At(r,s,i,0,!1),oa.update&&(l+=1);break;case S.a.fill:c=Zt.pop(),i=Zt.pop(),s=Zt.pop(),r=Zt.pop(),At(r,s,i,c,!0),oa.update&&(l+=1);break;case S.a.mxin:Zt.push(Math.pow(2,31)-1)}if(d+=1,a+=1,!e[t])throw Wt(),ma("The program has tried to jump to a line that does not exist. This is either a bug in our compiler, or in your assembled code.");a===e[t].length&&(t+=1,a=0)}setTimeout(pa,0,e,t,a,n)},ma=e=>{const t=new Error(e);return t.type="Machine",t},ha=e=>{const t=Array.from(e).map(e=>e.charCodeAt(0));Zt.push(aa.heapTemp+1),aa.heapTemp+=1,Vt[aa.heapTemp]=e.length,t.forEach(e=>{aa.heapTemp+=1,Vt[aa.heapTemp]=e}),aa.heapMax=Math.max(aa.heapTemp,aa.heapMax)},ba=e=>{const t=Vt[e],a=e+1,n=Vt.slice(a,a+t).reduce((e,t)=>e+String.fromCharCode(t),"");return e+t+1>aa.heapPerm&&(aa.heapTemp=e+t),n},ga=(e,t)=>{t>0&&(Vt[e]=0,ga(e+1,t-1))},fa=(e,t,a)=>{a>0&&(Vt[t]=Vt[e],fa(e+1,t+1,a-1))},ya=(e,t,a,n,o,r,s)=>{(s.keyCode||s.charCode)===e&&(Zt.pop(),Zt.push(-1),window.clearTimeout(t),pa(a,n,o,r))},xa=(e,t,a,n,o,r)=>{const s=r.keyCode||r.charCode;13===s?(ha(oa.input),oa.input="",window.clearTimeout(e),pa(t,a,n,o)):8===s?oa.input=oa.input.slice(0,-1):oa.input+=String.fromCharCode(s)},wa=()=>({x:va(Vt[Vt[0]+1]),y:ka(Vt[Vt[0]+2]),d:Vt[Vt[0]+3],t:Ta(Vt[Vt[0]+4]),c:Vt[Vt[0]+5]}),va=e=>{const t=(e-na.startx)*na.width/na.sizex;return na.doubled?Math.round(t)+1:Math.round(t)},ka=e=>{const t=(e-na.starty)*na.height/na.sizey;return na.doubled?Math.round(t)+1:Math.round(t)},Ta=e=>na.doubled?2*e:e,Oa=([e,t])=>[va(e),ka(t)],Ea=e=>{const{left:t,width:a}=kt(),n=(e-t)*na.sizex/a+na.startx;return Math.round(n)},Sa=e=>{const{height:t,top:a}=kt(),n=(e-a)*na.sizey/t+na.starty;return Math.round(n)};a.d(t,"b",function(){return Ra}),a.d(t,"a",function(){return La});const Ra=(e,t)=>{try{switch(e){case"ready":Ca("language-changed",Ia("language")),Ca("show-canvas-changed",Ia("show-canvas")),Ca("show-output-changed",Ia("show-output")),Ca("show-memory-changed",Ia("show-memory")),Ca("draw-count-max-changed",Ia("draw-count-max")),Ca("code-count-max-changed",Ia("code-count-max")),Ca("small-size-changed",Ia("small-size")),Ca("stack-size-changed",Ia("stack-size")),Ca("group-changed",Ia("group")),Ca("simple-changed",Ia("simple")),Ca("intermediate-changed",Ia("intermediate")),Ca("advanced-changed",Ia("advanced"));break;case"new-program":Ma("name",""),Ma("compiled",!1),Ma("code",""),Ma("usage",[]),Ma("pcode",[]),Ca("file-changed");break;case"new-skeleton-program":switch(Ma("name","Skeleton program"),Ma("compiled",!1),Ma("usage",[]),Ma("pcode",[]),Ia("language")){case"BASIC":Ma("code","REM progname\n\nvar1%=100\nCOLOUR(GREEN)\nBLOT(var1%)\nEND");break;case"Pascal":Ma("code","PROGRAM progname;\nVAR var1: integer;\nBEGIN\n  var1:=100;\n  colour(green);\n  blot(var1)\nEND.");break;case"Python":Ma("code","# progname\n\ndef main():\n  var1=100\n  colour(green)\n  blot(var1)")}Ca("file-changed");break;case"save-program":const a=new window.Blob([Ia("code")],{type:"text/plain;charset=utf-8"}),s=document.createElement("a");s.setAttribute("href",URL.createObjectURL(a)),s.setAttribute("download",`${Ia("name")}.${o.c[Ia("language")]}`),s.click();break;case"save-tgx-program":Aa();const i=JSON.stringify(Ia("file")),c=new window.Blob([i],{type:"text/plain;charset=utf-8"}),l=document.createElement("a");l.setAttribute("href",URL.createObjectURL(c)),l.setAttribute("download",`${Ia("name")}.tgx`),l.click();break;case"set-language":Ma("language",t),Ca("language-changed",Ia("language"));break;case"set-example":o.f.forEach(e=>{Object(n.b)({url:`examples/${e}/${t}.${o.c[e]}`,success:a=>{Ma(`name-${e}`,r.names[t]),Ma(`compiled-${e}`,!1),Ma(`code-${e}`,a.trim()),Ma(`usage-${e}`,[]),Ma(`pcode-${e}`,[]),Ca("file-changed")},error:e=>{throw Na(`Failed to load example file (response code ${e}).`)}})});break;case"set-file":const d=t.filename.split("."),u=d.pop(),p=d.join(".");switch(u){case"tgb":Ma("language","BASIC"),Ma("name-BASIC",p),Ma("compiled-BASIC",!1),Ma("code-BASIC",t.content.trim()),Ma("usage-BASIC",[]),Ma("pcode-BASIC",[]);break;case"tgp":Ma("language","Pascal"),Ma("name-Pascal",p),Ma("compiled-Pascal",!1),Ma("code-Pascal",t.content.trim()),Ma("usage-Pascal",[]),Ma("pcode-Pascal",[]);break;case"tgy":Ma("language","Python"),Ma("name-Python",p),Ma("compiled-Python",!1),Ma("code-Python",t.content.trim()),Ma("usage-Python",[]),Ma("pcode-Python",[]);break;case"tgx":try{const e=JSON.parse(t.content);Ma("language",e.language),Ma(`name-${e.language}`,e.name),Ma(`compiled-${e.language}`,!0),Ma(`code-${e.language}`,e.code.trim()),Ma(`usage-${e.language}`,e.usage),Ma(`pcode-${e.language}`,e.pcode)}catch(e){throw Na("Invalid TGX file.")}break;default:throw Na("Invalid file type.")}Ca("language-changed",Ia("language"));break;case"set-name":Ma("name",t),Ca("name-changed",Ia("name"));break;case"set-code":Ma("code",t),Ma("compiled",!1),Ca("code-changed",{code:Ia("code"),language:Ia("language")});break;case"toggle-assembler":Ma("assembler",!Ia("assembler")),Ca("pcode-changed",{pcode:Ia("pcode"),assembler:Ia("assembler"),decimal:Ia("decimal")});break;case"toggle-decimal":Ma("decimal",!Ia("decimal")),Ca("pcode-changed",{pcode:Ia("pcode"),assembler:Ia("assembler"),decimal:Ia("decimal")});break;case"toggle-show-canvas":Ma("show-canvas",!Ia("show-canvas")),Ca("show-canvas-changed",Ia("show-canvas"));break;case"toggle-show-output":Ma("show-output",!Ia("show-output")),Ca("show-output-changed",Ia("show-output"));break;case"toggle-show-memory":Ma("show-memory",!Ia("show-memory")),Ca("show-memory-changed",Ia("show-memory"));break;case"show-settings":Ca("show-settings");break;case"set-draw-count-max":Ma("draw-count-max",t),Ca("draw-count-max-changed",Ia("draw-count-max"));break;case"set-code-count-max":Ma("code-count-max",t),Ca("code-count-max-changed",Ia("code-count-max"));break;case"set-small-size":Ma("small-size",t),Ca("small-size-changed",Ia("small-size"));break;case"set-stack-size":Ma("stack-size",t),Ca("stack-size-changed",Ia("stack-size"));break;case"reset-machine-options":Ma("show-canvas",!0),Ma("show-output",!1),Ma("show-memory",!0),Ma("draw-count-max",4),Ma("code-count-max",1e5),Ma("small-size",60),Ma("stack-size",2e4),Ca("show-canvas-changed",Ia("show-canvas")),Ca("show-output-changed",Ia("show-output")),Ca("show-memory-changed",Ia("show-memory")),Ca("draw-count-max-changed",Ia("draw-count-max")),Ca("code-count-max-changed",Ia("code-count-max")),Ca("small-size-changed",Ia("small-size")),Ca("stack-size-changed",Ia("stack-size"));break;case"set-group":Ma("group",t),Ca("help-options-changed",Ia("help-options"));break;case"toggle-simple":Ma("simple",!Ia("simple")),Ca("help-options-changed",Ia("help-options"));break;case"toggle-intermediate":Ma("intermediate",!Ia("intermediate")),Ca("help-options-changed",Ia("help-options"));break;case"toggle-advanced":Ma("advanced",!Ia("advanced")),Ca("help-options-changed",Ia("help-options"));break;case"machine-run-halt":qt()?Wt():(Aa(),zt(Ia("pcode"),Ia("machine-options")));break;case"machine-play-pause":qt()&&(Xt.paused?(Xt.paused=!1,Yt.play()):(Xt.paused=!0,Yt.pause()));break;case"dump-memory":Ca("dump-memory",$t());break;default:console.log(`unknown signal '${e}'`)}}catch(e){Ca("error",e)}},La=(e,t)=>{Pa[e]?Pa[e].push(t):Pa[e]=[t]},Ca=(e,t)=>{Pa[e]&&Pa[e].forEach(e=>e(t)),"language-changed"===e&&(Ca("file-changed"),Ca("help-options-changed",Ia("help-options"))),"file-changed"===e&&(Ca("name-changed",Ia("name")),Ca("code-changed",{code:Ia("code"),language:Ia("language")}),Ca("usage-changed",Ia("usage")),Ca("pcode-changed",{pcode:Ia("pcode"),assembler:Ia("assembler"),decimal:Ia("decimal")}))},Pa={},Ma=(e,t)=>{switch(e){case"name":case"compiled":case"code":case"usage":case"pcode":Ma(`${e}-${Ia("language")}`,t);break;default:window.localStorage.setItem(e,JSON.stringify(t))}},Ia=e=>{switch(e){case"name":case"compiled":case"code":case"usage":case"pcode":return Ia(`${e}-${Ia("language")}`);case"file":return{name:Ia("name"),compiled:Ia("compiled"),code:Ia("code"),usage:Ia("usage"),pcode:Ia("pcode")};case"machine-options":return{showCanvas:Ia("show-canvas"),showOutput:Ia("show-output"),showMemory:Ia("show-memory"),drawCountMax:Ia("draw-count-max"),codeCountMax:Ia("code-count-max"),smallSize:Ia("small-size"),stackSize:Ia("stack-size")};case"help-options":return{language:Ia("language"),group:Ia("group"),simple:Ia("simple"),intermediate:Ia("intermediate"),advanced:Ia("advanced")};default:return JSON.parse(window.localStorage.getItem(e))}},Aa=()=>{if(!Ia("compiled")){let e=xt(Ia("code"),Ia("language"));Ma("usage",e.usage),Ma("pcode",e.pcode),Ma("compiled",!0),Ca("usage-changed",e.usage),Ca("pcode-changed",{pcode:e.pcode,assembler:Ia("assembler"),decimal:Ia("decimal")})}},Na=e=>{const t=new Error(e);return t.type="System",t};null===Ia("language")&&Ma("language","Pascal"),o.f.forEach(e=>{null===Ia(`name-${e}`)&&Ma(`name-${e}`,""),null===Ia(`compiled-${e}`)&&Ma(`compiled-${e}`,!1),null===Ia(`code-${e}`)&&Ma(`code-${e}`,""),null===Ia(`usage-${e}`)&&Ma(`usage-${e}`,[]),null===Ia(`pcode-${e}`)&&Ma(`pcode-${e}`,[])}),null===Ia("assembler")&&Ma("assembler",!0),null===Ia("decimal")&&Ma("decimal",!0),null===Ia("show-canvas")&&Ma("show-canvas",!0),null===Ia("show-output")&&Ma("show-output",!1),null===Ia("show-memory")&&Ma("show-memory",!0),null===Ia("draw-count-max")&&Ma("draw-count-max",4),null===Ia("code-count-max")&&Ma("code-count-max",1e5),null===Ia("small-size")&&Ma("small-size",60),null===Ia("stack-size")&&Ma("stack-size",2e4),null===Ia("group")&&Ma("group",0),null===Ia("simple")&&Ma("simple",!0),null===Ia("intermediate")&&Ma("intermediate",!1),null===Ia("advanced")&&Ma("advanced",!1),Ht("run",()=>Ca("machine-started")),Ht("halt",()=>Ca("machine-stopped")),Ht("play",()=>Ca("machine-played")),Ht("pause",()=>Ca("machine-paused")),Ht("turtx",e=>Ca("turtx-changed",e)),Ht("turty",e=>Ca("turty-changed",e)),Ht("turtd",e=>Ca("turtd-changed",e)),Ht("turtt",e=>Ca("turtt-changed",e)),Ht("turtc",e=>Ca("turtc-changed",e)),Ht("show",e=>Ca(`show-${e}`)),Ht("dump",e=>Ca("dump-memory",e))},function(e,t,a){"use strict";a.d(t,"f",function(){return c}),a.d(t,"c",function(){return l}),a.d(t,"a",function(){return d}),a.d(t,"b",function(){return u}),a.d(t,"d",function(){return p}),a.d(t,"e",function(){return m});var n=a(1);const o=(e,t,a,o)=>({index:e,names:{BASIC:t.toUpperCase(),Pascal:t,Python:t},type:"integer",value:a,hex:{BASIC:`&${Object(n.d)(a.toString(16))}`,Pascal:`$${Object(n.d)(a.toString(16))}`,Python:`0x${Object(n.d)(a.toString(16))}`},css:`#${Object(n.d)(a.toString(16))}`,dark:o}),r=(e,t,a)=>({index:e,name:t,css:a}),s=(e,t,a)=>({index:e,name:t,css:a}),i=(e,t)=>({names:{BASIC:e.toUpperCase(),Pascal:e,Python:e},value:t}),c=["BASIC","Pascal","Python"],l={BASIC:"tgb",Pascal:"tgp",Python:"tgy"},d=[o(1,"green",2263842,!0),o(2,"red",16711680,!0),o(3,"blue",255,!0),o(4,"yellow",16776960,!1),o(5,"violet",9055202,!0),o(6,"lime",65280,!1),o(7,"orange",16755200,!1),o(8,"skyblue",45311,!1),o(9,"brown",9849600,!0),o(10,"pink",15602313,!0),o(11,"darkgreen",25600,!0),o(12,"darkred",11674146,!0),o(13,"darkblue",128,!0),o(14,"ochre",12628016,!0),o(15,"indigo",4915330,!0),o(16,"olive",8421376,!0),o(17,"orangered",16737792,!0),o(18,"teal",32896,!0),o(19,"darkbrown",6045747,!0),o(20,"magenta",16711935,!0),o(21,"lightgreen",10025880,!1),o(22,"lightred",13458524,!1),o(23,"lightblue",10075135,!1),o(24,"cream",16777147,!1),o(25,"lilac",11572223,!1),o(26,"yellowgreen",11193395,!1),o(27,"peach",16764080,!1),o(28,"cyan",65535,!1),o(29,"lightbrown",11567184,!1),o(30,"lightpink",16758465,!1),o(31,"seagreen",3978097,!1),o(32,"maroon",8388608,!0),o(33,"royal",4286945,!0),o(34,"gold",16762880,!1),o(35,"purple",8388736,!0),o(36,"emerald",51543,!1),o(37,"salmon",16416882,!1),o(38,"turquoise",48833,!1),o(39,"coffee",9596735,!1),o(40,"rose",16746666,!1),o(41,"greengrey",7377008,!0),o(42,"redgrey",11567232,!0),o(43,"bluegrey",8421536,!0),o(44,"yellowgrey",9474160,!0),o(45,"darkgrey",4210752,!0),o(46,"midgrey",8421504,!0),o(47,"lightgrey",10526880,!1),o(48,"silver",12632256,!1),o(49,"white",16777215,!1),o(50,"black",0,!0)],u=[r(0,"None","none"),r(1,"Default","default"),r(2,"Pointer","pointer"),r(3,"Crosshair","crosshair"),r(4,"Text","text"),r(5,"Move","move"),r(6,"Resize NESW","nesw-resize"),r(7,"Resize NS","ns-resize"),r(8,"Resize NWSE","nwse-resize"),r(9,"Resize EW","ew-resize"),r(10,"Resize N","n-resize"),r(11,"Wait","wait"),r(12,"Progress","progress"),r(13,"No Drop","no-drop"),r(14,"Forbidden","not-allowed"),r(15,"Help","help")],p=[s(0,"Arial","Arial, sans-serif"),s(1,"Arial Black",'"Arial Black", sans-serif'),s(2,"Comic Sans MS",'"Comic Sans MS", cursive, sans-serif'),s(3,"Courier New",'"Courier New", Courier, monospace'),s(4,"Georgia","Georgia, serif"),s(5,"Impact","Impact, Charcoal, sans-serif"),s(6,"Lucida Console",'"Lucida Console", monospace'),s(7,"Lucida Sans Unicode",'"Lucida Sans Unicode", sans-serif'),s(8,"Palatino Linotype",'"Palatino Linotype", "Book Antiqua", Palatino, serif'),s(9,"Symbol","Symbol"),s(10,"Tahoma","Tahoma, Geneva, sans-serif"),s(11,"Times New Roman",'"Times New Roman", Times, serif'),s(12,"Trebuchet MS",'"Trebuchet MS", helvetica, sans-serif'),s(13,"Verdana","Verdana, Geneva, sans-serif"),s(14,"Webdings","Webdings"),s(15,"Wingdings","Wingdings")],m=[i("?kshift",-10),i("?key",-9),i("?mousey",-8),i("?mousex",-7),i("?clicky",-6),i("?clickx",-5),i("?click",-4),i("?mmouse",-3),i("?rmouse",-2),i("?lmouse",-1),i("\\backspace",8),i("\\tab",9),i("\\enter",13),i("\\shift",16),i("\\ctrl",17),i("\\alt",18),i("\\pause",19),i("\\capslock",20),i("\\escape",27),i("\\space",32),i("\\pgup",33),i("\\pgdn",34),i("\\end",35),i("\\home",36),i("\\left",37),i("\\up",38),i("\\right",39),i("\\down",40),i("\\insert",45),i("\\delete",46),i("\\0",48),i("\\1",49),i("\\2",50),i("\\3",51),i("\\4",52),i("\\5",53),i("\\6",54),i("\\7",55),i("\\8",56),i("\\9",57),i("\\a",65),i("\\b",66),i("\\c",67),i("\\d",68),i("\\e",69),i("\\f",70),i("\\g",71),i("\\h",72),i("\\i",73),i("\\j",74),i("\\k",75),i("\\l",76),i("\\m",77),i("\\n",78),i("\\o",79),i("\\p",80),i("\\q",81),i("\\r",82),i("\\s",83),i("\\t",84),i("\\u",85),i("\\v",86),i("\\w",87),i("\\x",88),i("\\y",89),i("\\z",90),i("\\lwin",91),i("\\rwin",92),i("\\#0",96),i("\\#1",97),i("\\#2",98),i("\\#3",99),i("\\#4",100),i("\\#5",101),i("\\#6",102),i("\\#7",103),i("\\#8",104),i("\\#9",105),i("\\multiply",106),i("\\add",107),i("\\subtract",109),i("\\decimal",110),i("\\divide",111),i("\\f1",112),i("\\f2",113),i("\\f3",114),i("\\f4",115),i("\\f5",116),i("\\f6",117),i("\\f7",118),i("\\f8",119),i("\\f9",120),i("\\f10",121),i("\\f11",122),i("\\f12",123),i("\\numlock",144),i("\\scrolllock",145),i("\\semicolon",186),i("\\equals",187),i("\\comma",188),i("\\dash",189),i("\\fullstop",190),i("\\forwardslash",191),i("\\singlequote",192),i("\\openbracket",219),i("\\backslash",220),i("\\closebracket",221),i("\\hash",222),i("\\backtick",223)]},function(e,t,a){"use strict";a.d(t,"b",function(){return c}),a.d(t,"a",function(){return l}),a.d(t,"c",function(){return d});var n=a(0);const o=e=>({names:{BASIC:e.names[0],Pascal:e.names[1],Python:e.names[2]},code:e.code,parameters:e.parameters||[],returns:e.returns,type:e.returns?"function":"procedure",category:e.category,level:e.level,description:e.description}),r=(e,t,a=!1,n=1)=>({name:e,type:t,byref:a,length:n}),s=(e,t,a)=>({index:e,title:t,expressions:a}),i=(e,t)=>({names:{BASIC:e[0],Pascal:e[1],Python:e[2]},level:t}),c=[o({names:["FORWARD","forward","forward"],code:n.a.fwrd,parameters:[r("n","integer")],category:0,level:0,description:"Moves the Turtle forward <code>n</code> units, drawing as it goes (unless the pen is up)."}),o({names:["BACK","back","back"],code:n.a.back,parameters:[r("n","integer")],category:0,level:0,description:"Moves the Turtle back <code>n</code> units, drawing as it goes (unless the pen is up)."}),o({names:["LEFT","left","left"],code:n.a.left,parameters:[r("n","integer")],category:0,level:0,description:"Rotates the Turtle left by <code>n</code> degrees."}),o({names:["RIGHT","right","right"],code:n.a.rght,parameters:[r("n","integer")],category:0,level:0,description:"Rotates the Turtle right by <code>n</code> degrees."}),o({names:["DRAWXY","drawxy","drawxy"],code:n.a.drxy,parameters:[r("x","integer"),r("y","integer")],category:0,level:1,description:"Moves the Turtle in a straight line to a point <code>x</code> units away along the x-axis and <code>y</code> units away along the y-axis, drawing as it goes (unless the pen is up)."}),o({names:["MOVEXY","movexy","movexy"],code:n.a.mvxy,parameters:[r("x","integer"),r("y","integer")],category:0,level:1,description:"Moves the Turtle in a straight line to a point <code>x</code> units away along the x-axis and <code>y</code> units away along the y-axis, <em>without</em> drawing (regardless of the current pen status)."}),o({names:["HOME","home","home"],code:n.a.home,category:1,level:0,description:"Moves the Turtle back to its starting position in the centre of the canvas, facing north, drawing as it goes (unless the pen is up)."}),o({names:["SETX","setx","setx"],code:n.a.setx,parameters:[r("x","integer")],category:1,level:0,description:"Sets the Turtle&rsquo;s <code>x</code> coordinate directly (without movement or drawing on the canvas). This can also be achieved by direct assignment of the global variable <code>turtx</code>."}),o({names:["SETY","sety","sety"],code:n.a.sety,parameters:[r("y","integer")],category:1,level:0,description:"Sets the Turtle&rsquo;s <code>y</code> coordinate directly (without movement or drawing on the canvas). This can also be achieved by direct assignment of the global variable <code>turty</code>."}),o({names:["SETXY","setxy","setxy"],code:n.a.toxy,parameters:[r("x","integer"),r("y","integer")],category:1,level:0,description:"Sets the Turtle&rsquo;s <code>x</code> and <code>y</code> coordinates directly (without movement or drawing on the canvas). This can also be achieved by direct assingment of the global variables <code>turtx</code> and <code>turty</code>."}),o({names:["DIRECTION","direction","direction"],code:n.a.setd,parameters:[r("n","integer")],category:1,level:0,description:"Sets the Turtle&rsquo;s direction to <code>n</code> degrees (0 for north, 90 for east, 180 for south, 270 for west). This can also be achieved by direct assignment of the global variable <code>turtd</code>. Note that the number of degrees in a circle (360 by default) can be changed with the <code>angles</code> command."}),o({names:["TURNXY","turnxy","turnxy"],code:n.a.turn,parameters:[r("x","integer"),r("y","integer")],category:1,level:1,description:"Turns the Turtle to face the point <code>x</code> units away alongthe x-axis and <code>y</code> units away along the y-axis."}),o({names:["CIRCLE","circle","circle"],code:n.a.circ,parameters:[r("radius","integer")],category:2,level:0,description:"Draws a circle outline in the Turtle&rsquo;s current colour and thickness, of the given <code>radius</code>, centred on the Turtle&rsquo;s current location."}),o({names:["BLOT","blot","blot"],code:n.a.blot,parameters:[r("radius","integer")],category:2,level:0,description:"Draws a filled circle in the Turtle&rsquo;s current colour, of the given <code>radius</code>, centred on the Turtle&rsquo;s current location."}),o({names:["ELLIPSE","ellipse","ellipse"],code:n.a.elps,parameters:[r("Xradius","integer"),r("Yradius","integer")],category:2,level:0,description:"Draws an ellipse outline in the Turtle&rsquo;s current colour and thickness, of the given <code>Xradius</code> and <code>Yradius</code>, centred on the Turtle&rsquo;s current location."}),o({names:["ELLBLOT","ellblot","ellblot"],code:n.a.eblt,parameters:[r("Xradius","integer"),r("Yradius","integer")],category:2,level:0,description:"Draws a filled ellipse in the Turtle&rsquo;s current colour, of the given <code>Xradius</code> and <code>Yradius</code>, centred on the Turtle&rsquo;s current location."}),o({names:["POLYLINE","polyline","polyline"],code:n.a.poly,parameters:[r("n","integer")],category:2,level:1,description:"Draws a polygon outline in the Turtle&rsquo;s current colour and thickness, connecting the last <code>n</code> locations that the Turtle has visited."}),o({names:["POLYGON","polygon","polygon"],code:n.a.pfil,parameters:[r("n","integer")],category:2,level:1,description:"Draws a filled polygon in the Turtle&rsquo;s current colour and thickness, connecting the last <code>n</code> locations that the Turtle has visited."}),o({names:["FORGET","forget","forget"],code:n.a.frgt,parameters:[r("n","integer")],category:2,level:1,description:"Makes the Turtle &ldquo;forget&rdquo; the last <code>n</code> points it has visited. Used in conjunction with <code>polyline</code> and <code>polygon</code>."}),o({names:["REMEMBER","remember","remember"],code:n.a.rmbr,category:2,level:1,description:"Makes the Turtle &ldquo;remember&rdquo; its current location. This is only necessary if its current location was set by a direct assignment of the global variables <code>turtx</code> and <code>turty</code>; when using the standard moving commands, the Turtle automatically remembers where it has been."}),o({names:["BOX","box","box"],code:n.a.box,parameters:[r("x","integer"),r("y","integer"),r("colour","integer"),r("border","boolean")],category:2,level:1,description:"Draws a box of width <code>x</code> and height <code>y</code>, with the top left corner in the Turtle&rsquo;s current location, filled with the specified <code>colour</code>. If <code>border</code> is <code>true</code>, a border is drawn around the box in the Turtle&rsquo;s current colour and and thickness. This is intended to be used with the <code>print</code> command, to provide a box for framing text."}),o({names:["COLOUR","colour","colour"],code:n.a.colr,parameters:[r("colour","integer")],category:3,level:0,description:"Sets the <code>colour</code> of the Turtle&rsquo;s pen. Takes as an argument either an RGB value, or one of the Turtle System&rsquo;s fifty predefined colour constants (see the <b>Colours</b> tab). This can also be achieved by direct assignment of the global variable <code>turtc</code>."}),o({names:["RNDCOL","randcol","randcol"],code:n.a.rndc,parameters:[r("n","integer")],category:3,level:0,description:"Assigns a random colour to the Turte&rsquo;s pen, between 1 and <code>n</code> (maximum 50). The colours are taken from the Turtle System&rsquo;s fifty predefined colours, which are each assigned a number between 1 and 50 (see the <b>Colours</b> tab)."}),o({names:["THICKNESS","thickness","thickness"],code:n.a.thik,parameters:[r("thickness","integer")],category:3,level:0,description:"Sets the <code>thickness</code> of the Turtle&rsquo;s pen (for line drawing, and outlines of circles, ellipses, boxes, and polygons). This can also be achieved by direct assignment of the global variable <code>turtt</code>."}),o({names:["PENUP","penup","penup"],code:n.a.pnup,category:3,level:0,description:"Lifts the Turtle&rsquo;s pen, so that subsequent movement will not draw a line on the Canvas."}),o({names:["PENDOWN","pendown","pendown"],code:n.a.pndn,category:3,level:0,description:"Lowers the Turtle&rsquo;s pen, so that subsequent movement will draw a line on the Canvas."}),o({names:["OUTPUT","output","output"],code:n.a.outp,parameters:[r("clear","boolean"),r("colour","integer"),r("tofront","boolean")],category:3,level:1,description:"Modifies the textual output. If the first argument is <code>true</code>, it clears any existing text. The second argument specifies the background colour, and the third argument is for switching the display. If the third argument is <code>true</code>, it switches to the <b>Output</b> tab, while if it is <code>false</code>, it switches to the <b>Canvas and Console</b> tab."}),o({names:["CONSOLE","console","console"],code:n.a.cons,parameters:[r("clear","boolean"),r("colour","integer")],category:3,level:1,description:"Modifies the Console; if the first argument is <code>true</code>, it clears any existing text, while the second argument specifies the background colour."}),o({names:["RGB","rgb","rgb"],code:n.a.rgb,parameters:[r("colour","integer")],returns:"integer",category:3,level:2,description:"Returns the RGB value of the input <code>colour</code> (an integer between 1 and 50). For example, <code>rgb(red)=255</code>."}),o({names:["MIXCOLS","mixcols","mixcols"],code:n.a.mixc,parameters:[r("colour1","integer"),r("colour1","integer"),r("proportion1","integer"),r("proportion2","integer")],returns:"integer",category:3,level:2,description:"Mixes the given colours in the given proportions."}),o({names:["NEWTURTLE","newturtle","newturtle"],code:n.a.newt,parameters:[r("array","integer",!0,5)],category:3,level:2,description:"Points the Turtle to a custom array in memory (this must be an array of five integers, corresponding to the Turtle&rsquo;s five properties, <code>turtx</code>, <code>turty</code>, <code>turtd</code>, <code>turtt</code>, and <code>turtc</code>). Use repeatedly to simulate multiple Turtles."}),o({names:["OLDTURTLE","oldturtle","oldturtle"],code:n.a.oldt,category:3,level:2,description:"Points the Turtle back to the default (built-in) array in memory. Use in conjunction with <code>newturtle</code>."}),o({names:["UPDATE","update","update"],code:n.a.udat,category:4,level:0,description:"Makes the Machine update the Canvas, and continue updating with all subsequent drawing commands. Used in conjunction with <em>noupdate</em>."}),o({names:["NOUPDATE","noupdate","noupdate"],code:n.a.ndat,category:4,level:0,description:"Makes the Machine refrain from updating the Canvas when executing all subsequent drawing commands, until <em>update</em> is called. Use this to create smooth animations, by queueing up several drawing commands to execute simultaneously."}),o({names:["BLANK","blank","blank"],code:n.a.blnk,parameters:[r("colour","integer")],category:4,level:0,description:"Blanks the entire Canvas with the specified <code>colour</code>."}),o({names:["CANVAS","canvas","canvas"],code:n.a.canv,parameters:[r("x1","integer"),r("y1","integer"),r("x2","integer"),r("y2","integer")],category:4,level:1,description:"Sets the top left Canvas coordinate to <code>(x1,y1)</code>, and the Canvas width and height to <code>x2</code> and <code>y2</code> respectively. Note that the width and height fix the number of virtual points on the Canvas, not the number of actual pixels."}),o({names:["RESOLUTION","resolution","resolution"],code:n.a.reso,parameters:[r("x","integer"),r("y","integer")],category:4,level:1,description:"Sets the Canvas resolution, i.e. the number of actual pixels in the <code>x</code> and <code>y</code> dimensions. To be used in conjunction with the <code>canvas</code> command, typically to set the number of actual pixels equal to the number of virtual points on the Canvas."}),o({names:["ANGLES","angles","angles"],code:n.a.angl,parameters:[r("degrees","integer")],category:4,level:1,description:"Sets the number of <code>degrees</code> in a circle (360 by default)."}),o({names:["PIXSET","pixset","pixset"],code:n.a.pixs,parameters:[r("x","integer"),r("y","integer"),r("colour","integer")],category:4,level:2,description:"Sets the <code>colour</code> at point <code>(x,y)</code>."}),o({names:["PIXCOL","pixcol","pixcol"],code:n.a.pixc,parameters:[r("x","integer"),r("y","integer")],returns:"integer",category:4,level:2,description:"Returns the RGB value of the colour at point <code>(x,y)</code>."}),o({names:["RECOLOUR","recolour","recolour"],code:n.a.rcol,parameters:[r("x","integer"),r("y","integer"),r("colour","integer")],category:4,level:2,description:"Floods the Canvas with the specified <code>colour</code>, starting at point <code>(x,y)</code>, until reaching any different colour."}),o({names:["FILL","fill","fill"],code:n.a.fill,parameters:[r("x","integer"),r("y","integer"),r("colour","integer"),r("boundary","integer")],category:4,level:2,description:"Floods the Canvas with the specified <code>colour</code>, starting at point <code>(x,y)</code>, until reaching the <code>boundary</code> colour."}),o({names:["INC","inc","inc"],code:n.a.incr,parameters:[r("variable","integer",!0)],category:5,level:0,description:"Increments the specified <code>variable</code> by 1."}),o({names:["DEC","dec","dec"],code:n.a.decr,parameters:[r("variable","integer",!0)],category:5,level:0,description:"Decrements the specified <code>variable</code> by 1."}),o({names:["ABS","abs","abs"],code:n.a.abs,parameters:[r("n","integer")],returns:"integer",category:5,level:0,description:"Returns the absolute value of <code>n</code>, i.e. <code>n</code> if positive, <code>-n</code> if negative."}),o({names:["SIGN","sign","sign"],code:n.a.sign,parameters:[r("a","integer")],returns:"integer",category:5,level:1,description:"Returns <code>+1</code> if <code>a</code> is positive, <code>-1</code> if <code>a</code> is negative, and <code>0</code> otherwise."}),o({names:["MAX","max","max"],code:n.a.maxi,parameters:[r("a","integer"),r("b","integer")],returns:"integer",category:5,level:1,description:"Returns the maximum of <code>a</code> and <code>b</code>."}),o({names:["MIN","min","min"],code:n.a.mini,parameters:[r("a","integer"),r("b","integer")],returns:"integer",category:5,level:1,description:"Returns the minimum of <code>a</code> and <code>b</code>."}),o({names:["SQR","sqrt","sqrt"],code:n.a.sqrt,parameters:[r("a","integer"),r("mult","integer")],returns:"integer",category:5,level:1,description:"Returns <code>&radic;a</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["HYPOT","hypot","hypot"],code:n.a.hyp,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:5,level:1,description:"Returns <code>&radic;(a<sup>2</sup>+b<sup>2</sup>)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["RND",null,null],code:n.a.rand,parameters:[r("n","integer")],returns:"integer",category:5,level:1,description:"Returns a random integer between 1 and <code>n</code>."}),o({names:[null,"random",null],code:n.a.rand,parameters:[r("n","integer")],returns:"integer",category:5,level:1,description:"Returns a random non-negative integer less than <code>n</code>."}),o({names:[null,null,"randint"],code:n.a.rand,parameters:[r("a","integer"),r("b","integer")],returns:"integer",category:5,level:1,description:"Returns a random integer between <code>a</code> and <code>b</code>."}),o({names:["POWER","power","power"],code:n.a.powr,parameters:[r("a","integer"),r("b","integer"),r("c","integer"),r("mult","integer")],returns:"integer",category:5,level:2,description:"Returns <code>(a/b)<sup>c</sup></code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["ROOT","root","root"],code:n.a.root,parameters:[r("a","integer"),r("b","integer"),r("c","integer"),r("mult","integer")],returns:"integer",category:5,level:2,description:"Returns <code><sup>c</sup>&radic;(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["DIVMULT","divmult","divmult"],code:n.a.divm,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:5,level:2,description:"Returns <code>a/b</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["MAXINT","maxint","maxint"],code:n.a.mxin,returns:"integer",category:5,level:2,description:"Returns the maximum integer that the Machine can deal with (2<sup>31</sup>-1)."}),o({names:["SIN","sin","sin"],code:n.a.sin,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:1,description:"Returns <code>sin(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["COS","cos","cos"],code:n.a.cos,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:1,description:"Returns <code>cos(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["TAN","tan","tan"],code:n.a.tan,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:1,description:"Returns <code>tan(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["PI","pi","pi"],code:n.a.pi,parameters:[r("mult","integer")],returns:"integer",category:6,level:1,description:"Returns the value of Pi, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["EXP","exp","exp"],code:n.a.exp,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:1,description:"Returns <code>a<sup>b</sup></code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["LN","ln","ln"],code:n.a.ln,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:1,description:"Returns <code>ln(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["ANTILOG","antilog","antilog"],code:n.a.alog,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:2,description:"Returns <code>antilog<sub>10</sub>(a/b)</code> - i.e. <code>10<sup>a/b</sub></code> - multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["LOG10","log10","log10"],code:n.a.log,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:2,description:"Returns <code>log<sub>10</sub>(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["ASN","arcsin","asin"],code:n.a.asin,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:2,description:"Returns <code>arcsin(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["ACS","arccos","acos"],code:n.a.acos,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:2,description:"Returns <code>arccos(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["ATN","arctan","atan"],code:n.a.atan,parameters:[r("a","integer"),r("b","integer"),r("mult","integer")],returns:"integer",category:6,level:2,description:"Returns <code>arctan(a/b)</code>, multiplied by <code>mult</code> and rounded to the nearest integer. Use the multiplier to approximate real numbers."}),o({names:["WRITE","write","write"],code:n.a.text,parameters:[r("string","string")],category:7,level:0,description:"Writes the input <code>string</code> to the console and textual output area of the System."}),o({names:["WRITELN","writeln","writeline"],code:n.a.texl,parameters:[r("string","string")],category:7,level:0,description:"Writes the input <code>string</code> to the console and textual output area of the System, followed by a line break."}),o({names:["PRINT","print","print"],code:n.a.prnt,parameters:[r("string","string"),r("font","integer"),r("size","integer")],category:7,level:0,description:"Prints the input <code>string</code> in the Turtle&rsquo;s current colour and at the Turtle&rsquo;s current location, in the specified <code>font</code> and <code>size</code>. Can be used in conjunction with the <code>box</code> drawing command. For a list of available fonts, see the <b>Constants</b> tab."}),o({names:["UCASE$","uppercase","upper"],code:n.a.uppc,parameters:[r("string","string")],returns:"string",category:7,level:1,description:"Returns the input <code>string</code> as all uppercase."}),o({names:["LCASE$","lowercase","lower"],code:n.a.lowc,parameters:[r("string","string")],returns:"string",category:7,level:1,description:"Returns the input <code>string</code> as all lowercase."}),o({names:["LEN","length","len"],code:n.a.slen,parameters:[r("string","string")],returns:"integer",category:7,level:1,description:"Returns the length of the input <code>string</code> (i.e. the number of characters)."}),o({names:["DEL$","delete",null],code:n.a.dels,parameters:[r("string","string"),r("index","integer"),r("length","integer")],returns:"string",category:7,level:2,description:"Returns the input <code>string</code> with some characters removed, starting at the given <code>index</code> and of the specified <code>length</code>."}),o({names:["LEFT$",null,null],code:n.a.lefs,parameters:[r("string","string"),r("length","integer")],returns:"string",category:7,level:2,description:"Returns a copy of the characters in the input <code>string</code>, starting on the left and of the specified <code>length</code>."}),o({names:["MID$","copy","copy"],code:n.a.copy,parameters:[r("string","string"),r("index","integer"),r("length","integer")],returns:"string",category:7,level:2,description:"Returns a copy of the characters in the input <code>string</code>, starting at the given <code>index</code> and of the specified <code>length</code>."}),o({names:["RIGHT$",null,null],code:n.a.rgts,parameters:[r("string","string"),r("length","integer")],returns:"string",category:7,level:2,description:"Returns a copy of the characters in the input <code>string</code>, starting on the right and of the specified <code>length</code>."}),o({names:["INS$",null,"insert"],code:n.a.inss,parameters:[r("string","string"),r("index","integer"),r("substr","string")],returns:"string",category:7,level:2,description:"Returns the input <code>string</code> with the specified <code>substring</code> inserted at the given <code>index</code>."}),o({names:[null,"insert",null],code:n.a.inss,parameters:[r("substr","string"),r("string","string"),r("index","integer")],returns:"string",category:7,level:2,description:"Returns the input <code>string</code> with the specified <code>substring</code> inserted at the given <code>index</code>."}),o({names:["REPLACE","replace","replace"],code:n.a.repl,parameters:[r("string","string"),r("substr","string"),r("replace","string"),r("n","integer")],returns:"string",category:7,level:2,description:"Returns the input <code>string</code> with up to <code>n</code> occurences of <code>substring</code> replaced by <code>replace</code>. Set <code>n</code> equal to <code>0</code> to replace every occurence."}),o({names:["INSTR",null,"find"],code:n.a.poss,parameters:[r("string","string"),r("substr","string")],returns:"integer",category:7,level:2,description:"Searches for the input <code>substring</code> within the given <code>string</code>; returns the index of the first character if found, 0 otherwise."}),o({names:[null,"pos",null],code:n.a.poss,parameters:[r("substr","string"),r("string","string")],returns:"integer",category:7,level:2,description:"Searches for the input <code>substring</code> within the given <code>string</code>; returns the index of the first character if found, 0 otherwise."}),o({names:["STR$","str","str"],code:n.a.itos,parameters:[r("n","integer")],returns:"string",category:8,level:0,description:"Returns the integer <code>n</code> as a string, e.g. <code>str(12)='12'</code>."}),o({names:["VAL","val","integer"],code:n.a.svd0,parameters:[r("string","string")],returns:"integer",category:8,level:0,description:"Returns the input <code>string</code> as an integer, e.g. <code>val('12')=12</code>. Returns <code>0</code> if the string cannot be converted (i.e. if it is not an integer string)."}),o({names:["VALDEF","valdef","intdef"],code:n.a.sval,parameters:[r("string","string"),r("default","string")],returns:"integer",category:8,level:0,description:"Returns the input <code>string</code> as an integer, e.g. <code>val('12')=12</code>. Returns the specified <code>default</code> value if the string cannot be converted (i.e. if it is not an integer string)."}),o({names:["QSTR$","qstr","qstr"],code:n.a.qtos,parameters:[r("a","integer"),r("b","integer"),r("decplaces","integer")],returns:"string",category:8,level:1,description:"Returns the value of <code>a/b</code> to the specified number of decimal places, as a decimal string, e.g. <code>qstr(2,3,4)='0.6667'</code>."}),o({names:["QVAL","qval","qval"],code:n.a.qval,parameters:[r("string","string"),r("mult","integer"),r("default","integer")],returns:"integer",category:8,level:1,description:"Returns the input decimal <code>string</code> as an integer, multiplied by <code>mult</code> and rounded to the nearest integer, e.g. <code>qval('1.5',10)=15</code>. Returns the specified <code>default</code> value if the string cannot be converted (i.e. if it is not a decimal string)."}),o({names:["CHR$","chr","chr"],code:n.a.null,parameters:[r("n","integer")],returns:"char",category:8,level:2,description:"Returns the character with ASCII character code <code>n</code>, e.g. <code>chr(65)='A'</code>."}),o({names:["ASC","ord","ord"],code:n.a.null,parameters:[r("char","char")],returns:"integer",category:8,level:2,description:"Returns the ASCII code of the input character <code>char</code> (which must be a string of length 1), e.g. <code>ord('A')=65</code>."}),o({names:["BOOLINT","boolint",null],code:n.a.null,parameters:[r("boolean","boolean")],returns:"integer",category:8,level:2,description:"Returns the input <code>boolean</code> as an integer (-1 for <code>true</code>, 0 for <code>false</code>)."}),o({names:[null,null,"boolint"],code:n.a.bool,parameters:[r("boolean","boolean")],returns:"integer",category:8,level:2,description:"Returns the input <code>boolean</code> as an integer (1 for <code>true</code>, 0 for <code>false</code>)."}),o({names:["HEX$","hexstr","hex"],code:n.a.hexs,parameters:[r("n","integer"),r("minlength","integer")],category:8,level:2,description:"Returns a string representation of integer <code>n</code> in hexadecimal format, padded with leading zeros as up to <code>minlength</code>, e.g. <code>hexstr(255,6)='0000FF'</code>."}),o({names:["PAUSE","pause","pause"],code:n.a.wait,parameters:[r("m","integer")],category:9,level:0,description:"Makes the Turtle Machine wait <code>m</code> milliseconds before performing the next operation. This is useful for controlling the speed of animations."}),o({names:["GETLINE$","readln","readline"],code:n.a.rdln,returns:"string",category:9,level:0,description:"Waits for the RETURN key to be pressed, then returns everything in the keybuffer up to (and not including) the new line character."}),o({names:["INPUT$",null,"input"],code:n.a.ilin,parameters:[r("prompt","string")],returns:"string",category:9,level:0,description:"Gives an input prompt, then returns the input when the RETURN key is pressed (using the keybuffer)."}),o({names:["CURSOR","cursor","cursor"],code:n.a.curs,parameters:[r("cursorcode","integer")],category:9,level:1,description:"Sets which cursor to display (1-15) when the mouse pointer is over the canvas. 0 hides the cursor; any value outside the range 0-15 resets the default cursor. For a list of available cursors, see the <b>Cursors</b> tab."}),o({names:["KEYECHO","keyecho","keyecho"],code:n.a.kech,parameters:[r("on","boolean")],category:9,level:1,description:"Turns the keyboard echo to the console on (<code>true</code>) or off (<code>false</code>)."}),o({names:["DETECT","detect","detect"],code:n.a.tdet,parameters:[r("keycode","integer"),r("m","integer")],returns:"boolean",category:9,level:1,description:"Waits a maximum of <code>m</code> milliseconds for the key with the specified <code>keycode</code> to be pressed; returns <code>true</code> if pressed (and stops waiting), <code>false</code> otherwise."}),o({names:["GET$","read","read"],code:n.a.read,parameters:[r("n","integer")],returns:"string",category:9,level:1,description:"Returns the first <code>n</code> characters from the keybuffer as a string."}),o({names:["TIME","time","time"],code:n.a.time,returns:"integer",category:9,level:1,description:"Returns the time (in milliseconds) since the program began."}),o({names:["TIMESET","timeset","timeset"],code:n.a.tset,parameters:[r("m","integer")],category:9,level:1,description:"Artificially sets the time since the program began to <code>m</code> milliseconds."}),o({names:["RESET","reset","reset"],code:n.a.iclr,parameters:[r("?input","integer")],category:9,level:2,description:"Resets the specified <code>?input</code> (<code>?mousex</code>, <code>?mousey</code>, <code>?click</code>, etc.) to its initial value (i.e. -1)."}),o({names:["KEYSTATUS","keystatus","keystatus"],code:n.a.inpt,parameters:[r("keycode","integer")],returns:"integer",category:9,level:2,description:"Returns the <code>?kshift</code> value for the most recent press of the key with the specified <code>keycode</code>."}),o({names:["KEYBUFFER","keybuffer","keybuffer"],code:n.a.bufr,parameters:[r("n","integer")],category:9,level:2,description:"Creates a new custom keybuffer of length <code>n</code>. A keybuffer of length 32 is available by default; use this command if you need a larger buffer."}),o({names:["HALT","halt","halt"],code:n.a.halt,category:10,level:0,description:"Halts the program."}),o({names:["TRACE","trace","trace"],code:n.a.trac,parameters:[r("on","boolean")],category:10,level:2,description:"Turns the PCode trace facility on (<code>true</code>) or off (<code>false</code>)."}),o({names:["WATCH","watch","watch"],code:n.a.memw,parameters:[r("address","integer")],category:10,level:2,description:"Sets an <code>address</code> in memory for the trace facility to watch."}),o({names:["DUMP","dump","dump"],code:n.a.dump,category:10,level:2,description:"&ldquo;Dumps&rdquo; the current memory state into the display in the memory tab."}),o({names:["HEAPRESET","heapreset","heapreset"],code:n.a.hrst,category:10,level:2,description:"Resets the memory heap to the initial global value."})],l=[s(0,"Turtle: relative movement",c.filter(e=>0===e.category)),s(1,"Turtle: absolute movement",c.filter(e=>1===e.category)),s(2,"Turtle: drawing shapes",c.filter(e=>2===e.category)),s(3,"Other Turtle commands",c.filter(e=>3===e.category)),s(4,"Canvas operations",c.filter(e=>4===e.category)),s(5,"General arithmetic functions",c.filter(e=>5===e.category)),s(6,"Trig / exp / log functions",c.filter(e=>6===e.category)),s(7,"String operations",c.filter(e=>7===e.category)),s(8,"Type conversion routines",c.filter(e=>8===e.category)),s(9,"Input and timing routines",c.filter(e=>9===e.category)),s(10,"Turtle Machine monitoring",c.filter(e=>10===e.category))],d=l.concat({title:"Command structures",expressions:[i(["IF","if","if"],0),i(["ELSE","else","else"],0),i(["FOR","for","for"],0),i(["REPEAT","repeat","repeat"],1),i(["WHILE","while","while"],1),i(["DEF",null,"def"],1),i([null,"procedure",null],1),i([null,"function",null],2)]},{title:"Variable scope modifiers",expressions:[i(["LOCAL",null,null],1),i(["PRIVATE",null,null],2),i([null,null,"global"],1),i([null,null,"nonlocal"],2)]})},function(e,t,a){"use strict";var n=e=>{let t=[];for(;e.length>0;){let a=o(e)||r(e)||s(e)||l(e)||i(e)||c(e)||d(e)||u(e)||p(e)||m(e)||h(e)||b(e)||w(e)||g(e)||f(e)||v(e)||y(e)||x(e)||k(e);t.push(a),e=e.slice(a.content.length)}return t};const o=e=>{return!!("\n"===e[0])&&{type:"linebreak",content:"\n"}},r=e=>{const t=e.match(/^( +)/);return!!t&&{type:"spaces",content:t[0]}},s=e=>{return!!e.match(/^REM\b/)&&{type:"comment",content:e.split("\n")[0]}},i=e=>{const t=e.match(/^(\+|-|\*|\/|DIV\b|MOD\b|=|<>|<=|>=|<|>|NOT\b|AND\b|OR\b|EOR\b)/);return!!t&&{type:"operator",content:t[0]}},c=e=>{const t=e.match(/^(\(|\)|,|:)/);return!!t&&{type:"punctuation",content:t[0]}},l=e=>{const t="'"===e[0],a='"'===e[0],n=e.match(/[^\\](')/),o=e.match(/[^\\](")/);return t&&n?{type:"string",content:e.slice(0,n.index+2)}:t?{type:"unterminated-string",content:e.split("\n")[0]}:a&&o?{type:"string",content:e.slice(0,o.index+2)}:!!a&&{type:"unterminated-string",content:e.split("\n")[0]}},d=e=>{const t=e.match(/^(TRUE|FALSE)\b/);return!!t&&{type:"boolean",content:t[0]}},u=e=>{const t=e.match(/^(%[01]+)\b/),a=e.match(/^(0b[01]+)\b/);return t?{type:"binary",content:t[0]}:!!a&&{type:"bad-binary",content:a[0]}},p=e=>{const t=e.match(/^((\$|#|(0x))[A-Fa-f0-9]+)\b/),a=e.match(/^(&[A-Fa-f0-9]+)\b/);return t?{type:"bad-hexadecimal",content:t[0]}:!!a&&{type:"hexadecimal",content:a[0]}},m=e=>{const t=e.match(/^(\d+\.\d+)/),a=e.match(/^(\d+)\b/);return t?{type:"bad-decimal",content:t[0]}:!!a&&{type:"decimal",content:a[0]}},h=e=>{const t=e.match(/^(DEF|DIM|ELSE|END|ENDIF|ENDPROC|ENDWHILE|FOR|IF|LOCAL|NEXT|PRIVATE|REPEAT|RETURN|STEP|THEN|TO|UNTIL|WHILE)\b/);return!!t&&{type:"keyword",content:t[0]}},b=e=>{const t=e.match(/^(ABS\b|ACS\b|ANGLES\b|ANTILOG\b|ASC\b|ASN\b|ATN\b|BACK\b|BLANK\b|BLOT\b|BOOLINT\b|BOX\b|CANVAS\b|CHR\$|CIRCLE\b|COLOU?R\b|CONSOLE\b|COS\b|CURSOR\b|DEC\b|DEL\$|DETECT\b|DIRECTION\b|DIVMULT\b|DRAWXY\b|DUMP\b|ELLBLOT\b|ELLIPSE\b|EXP\b|FILL\b|FORGET\b|FORWARD\b|GET\$|GETLINE\$|HEAPRESET|HEX\$|HOME\b|HYPOT\b|INC\b|INPUT\$|INSTR|KEYBUFFER\b|KEYECHO\b|KEYSTATUS\b|LCASE\$|LEFT\$|LEFT\b|LEN\b|LN\b|LOG10\b|MAX\b|MAXINT\b|MID\$|MIN\b|MIXCOLS\b|MOVEXY\b|NEWTURTLE\b|NOUPDATE\b|OLDTURTLE\b|OUTPUT\b|PAUSE\b|PENDOWN\b|PENUP\b|PI\b|PIXCOL\b|PIXSET\b|POLYGON\b|POLYLINE\b|POWER\b|PRINT\b|QSTR\$|QVAL\b|RECOLOUR\b|REMEMBER\b|RESET\b|RESOLUTION\b|RGB\b|RIGHT\$|RIGHT\b|RND\b|RNDCOL\b|ROOT\b|SETX\b|SETXY\b|SETY\b|SIGN\b|SIN\b|SQR\b|STR\$|TAN\b|THICKNESS\b|TIME\b|TIMESET\b|TRACE\b|TURNXY\b|UPDATE\b|UCASE\$|VAL\b|VALDEF\b|WATCH\b|WRITE\b|WRITELN\b)/);return!!t&&{type:"command",content:t[0]}},g=e=>{const t=e.match(/^(TURT[XYDTC]%)\b/);return!!t&&{type:"turtle",content:t[0]}},f=e=>{const t=e.match(/^(TRUE|FALSE|GREEN|DARKGREEN|LIGHTGREEN|SEAGREEN|GREENGREY|GREENGRAY|RED|DARKRED|LIGHTRED|MAROON|REDGREY|REDGRAY|BLUE|DARKBLUE|LIGHTBLUE|ROYAL|BLUEGREY|YELLOW|OCHRE|CREAM|GOLD|YELLOWGREY|YELLOWGRAY|VIOLET|INDIGO|LILAC|PURPLE|DARKGREY|DARKGRAY|LIME|OLIVE|YELLOWGREEN|EMERALD|MIDGREY|MIDGRAY|ORANGE|ORANGERED|PEACH|SALMON|LIGHTGREY|LIGHTGRAY|SKYBLUE|TEAL|CYAN|TURQUOISE|SILVER|BROWN|DARKBROWN|LIGHTBROWN|COFFEE|WHITE|PINK|MAGENTA|LIGHTPINK|ROSE|BLACK)\b/);return!!t&&{type:"colour",content:t[0]}},y=e=>{const t=e.match(/^(\\[#A-Z0-9]+)/);return!!t&&{type:"keycode",content:t[0]}},x=e=>{const t=e.match(/^(\?[A-Z]+)\b/);return!!t&&{type:"query",content:t[0]}},w=e=>{const t=e.match(/^((PROC|FN)[_a-zA-Z]+)\b/);return!!t&&{type:"custom",content:t[0]}},v=e=>{const t=e.match(/^([_a-zA-Z0-9]+[$|%])/);return!!t&&{type:"variable",content:t[0]}},k=e=>{const t=e.match(/^\d+/),a="#"===e[0];return t?{type:"unterminated-integer",content:e}:a?{type:"bad-hexadecimal",content:e}:{type:"illegal",content:e.split(/\b/)[0]}};var T=e=>{const t=[];for(;e.length>0;){let a=O(e)||E(e)||S(e)||R(e)||L(e)||C(e)||P(e)||M(e)||I(e)||A(e)||N(e)||j(e)||D(e)||F(e)||B(e)||U(e)||G(e)||H(e)||q(e)||$(e);t.push(a),e=e.slice(a.content.length)}return t};const O=e=>{return!!("\n"===e[0])&&{type:"linebreak",content:"\n"}},E=e=>{const t=e.match(/^( +)/);return!!t&&{type:"spaces",content:t[0]}},S=e=>{const t="{"===e[0],a=e.match(/}/);return t&&a?{type:"comment",content:e.slice(0,a.index+1)}:!!t&&{type:"unterminated-comment",content:e.split("\n")[0]}},R=e=>{const t=e.match(/^(\+|-|\*|\/|div\b|mod\b|=|<>|<=|>=|<|>|:=|not\b|and\b|or\b|xor\b)/i);return!!t&&{type:"operator",content:t[0]}},L=e=>{const t=e.match(/^(\(|\)|\[|\]|,|:|;|\.\.|\.)/);return!!t&&{type:"punctuation",content:t[0]}},C=e=>{const t="'"===e[0],a='"'===e[0],n=e.match(/[^\\](')/),o=e.match(/[^\\](")/);return t&&n?{type:"string",content:e.slice(0,n.index+2)}:t?{type:"unterminated-string",content:e.split("\n")[0]}:a&&o?{type:"string",content:e.slice(0,o.index+2)}:!!a&&{type:"unterminated-string",content:e.split("\n")[0]}},P=e=>{const t=e.match(/^(true|false)\b/i);return!!t&&{type:"boolean",content:t[0]}},M=e=>{const t=e.match(/^(%[01]+)\b/),a=e.match(/^(0b[01]+)\b/);return t?{type:"binary",content:t[0]}:!!a&&{type:"bad-binary",content:a[0]}},I=e=>{const t=e.match(/^(&[0-7]+)\b/),a=e.match(/^(0o[0-7]+)\b/);return t?{type:"octal",content:t[0]}:!!a&&{type:"bad-octal",content:a[0]}},A=e=>{const t=e.match(/^((&|#|(0x))[A-Fa-f0-9]+)\b/),a=e.match(/^(\$[A-Fa-f0-9]+)\b/);return t?{type:"bad-hexadecimal",content:t[0]}:!!a&&{type:"hexadecimal",content:a[0]}},N=e=>{const t=e.match(/^(\d+\.\d+)/),a=e.match(/^(\d+)\b/);return t?{type:"bad-decimal",content:t[0]}:!!a&&{type:"decimal",content:a[0]}},j=e=>{const t=e.match(/^(begin|const|do|downto|else|end|for|function|if|of|procedure|program|repeat|result|then|to|until|var|while)\b/i);return!!t&&{type:"keyword",content:t[0]}},D=e=>{const t=e.match(/^(array|boolean|char|integer|string)\b/i);return!!t&&{type:"type",content:t[0]}},F=e=>{const t=e.match(/^(abs|angles|antilog|arccos|arcsin|arctan|back|blank|blot|boolint|box|canvas|chr|circle|colou?r|console|copy|cos|cursor|dec|delete|detect|direction|divmult|drawxy|dump|ellblot|ellipse|exp|fill|forget|forward|heapreset|hexstr|home|hypot|inc|insert|keybuffer|keyecho|keystatus|left|length|ln|log10|lowercase|max|maxint|min|mixcols|movexy|newturtle|noupdate|oldturtle|ord|output|pause|pendown|penup|pi|pixcol|pixset|polygon|polyline|pos|power|print|qstr|qval|randcol|random|read|readln|recolour|remember|reset|resolution|rgb|right|root|setx|setxy|sety|sign|sin|sqrt|str|tan|thickness|time|timeset|trace|turnxy|update|uppercase|val|valdef|watch|write|writeln)\b/i);return!!t&&{type:"command",content:t[0]}},B=e=>{const t=e.match(/^(turt[xydtc])\b/i);return!!t&&{type:"turtle",content:t[0]}},U=e=>{const t=e.match(/^(true|false|green|darkgreen|lightgreen|seagreen|greengrey|greengray|red|darkred|lightred|maroon|redgrey|redgray|blue|darkblue|lightblue|royal|bluegrey|yellow|ochre|cream|gold|yellowgrey|yellowgray|violet|indigo|lilac|purple|darkgrey|darkgray|lime|olive|yellowgreen|emerald|midgrey|midgray|orange|orangered|peach|salmon|lightgrey|lightgray|skyblue|teal|cyan|turquoise|silver|brown|darkbrown|lightbrown|coffee|white|pink|magenta|lightpink|rose|black)\b/i);return!!t&&{type:"colour",content:t[0]}},G=e=>{const t=e.match(/^(\\[#a-z0-9]+)/i);return!!t&&{type:"keycode",content:t[0]}},H=e=>{const t=e.match(/^(\?[a-z]+)\b/i);return!!t&&{type:"query",content:t[0]}},q=e=>{const t=e.match(/^([_a-zA-Z][_a-zA-Z0-9]*)\b/);return!!t&&{type:"identifier",content:t[0]}},$=e=>({type:"illegal",content:e.split(/\b/)[0]});var z=e=>{let t=[];for(;e.length>0;){let a=W(e)||Y(e)||X(e)||V(e)||K(e)||Q(e)||_(e)||Z(e)||J(e)||ee(e)||te(e)||ae(e)||ne(e)||oe(e)||re(e)||se(e)||ie(e)||ce(e)||le(e);t.push(a),e=e.slice(a.content.length)}return t};const W=e=>{return!!("\n"===e[0])&&{type:"linebreak",content:"\n"}},Y=e=>{const t=e.match(/^( +)/);return!!t&&{type:"spaces",content:t[0]}},X=e=>{return!!e.match(/^#/)&&{type:"comment",content:e.split("\n")[0]}},V=e=>{const t=e.match(/^(\+|-|\*|\/\/|\/|%|==|!=|<=|>=|=|<|>|not\b|and\b|or\b|xor\b)/);return!!t&&{type:"operator",content:t[0]}},K=e=>{const t=e.match(/^(\(|\)|,|:)/);return!!t&&{type:"punctuation",content:t[0]}},Q=e=>{const t="'"===e[0],a='"'===e[0],n=e.match(/[^\\](')/),o=e.match(/[^\\](")/);return t&&n?{type:"string",content:e.slice(0,n.index+2)}:t?{type:"unterminated-string",content:e.split("\n")[0]}:a&&o?{type:"string",content:e.slice(0,o.index+2)}:!!a&&{type:"unterminated-string",content:e.split("\n")[0]}},_=e=>{const t=e.match(/^(True|False)\b/);return!!t&&{type:"boolean",content:t[0]}},Z=e=>{const t=e.match(/^(0b[01]+)\b/),a=e.match(/^(%[01]+)\b/);return t?{type:"binary",content:t[0]}:!!a&&{type:"bad-binary",content:a[0]}},J=e=>{const t=e.match(/^(0o[0-7]+)\b/),a=e.match(/^(&[0-7]+)\b/);return t?{type:"octal",content:t[0]}:!!a&&{type:"bad-octal",content:a[0]}},ee=e=>{const t=e.match(/^(0x[A-Fa-f0-9]+)\b/),a=e.match(/^((&|#|\$)[A-Fa-f0-9]+)\b/);return t?{type:"hexadecimal",content:t[0]}:!!a&&{type:"bad-hexadecimal",content:a[0]}},te=e=>{const t=e.match(/^(\d+\.\d+)/),a=e.match(/^(\d+)\b/);return t?{type:"bad-decimal",content:t[0]}:!!a&&{type:"decimal",content:a[0]}},ae=e=>{const t=e.match(/^(def|else|for|global|if|in|nonlocal|pass|range|return|while)\b/);return!!t&&{type:"keyword",content:t[0]}},ne=e=>{const t=e.match(/^(abs|acos|angles|antilog|asin|atan|back|blank|blot|boolint|box|canvas|chr|circle|colou?r|console|copy|cos|cursor|dec|detect|direction|divmult|drawxy|dump|ellblot|ellipse|exp|fill|find|forget|forward|heapreset|hex|home|hypot|inc|input|insert|int|intdef|keybuffer|keyecho|keystatus|left|len|ln|log10|lower|max|maxint|min|mixcols|movexy|newturtle|noupdate|oldturtle|ord|output|pause|pendown|penup|pi|pixcol|pixset|polygon|polyline|power|print|qstr|qval|randcol|randint|read|readline|recolour|remember|reset|resolution|rgb|right|root|setx|setxy|sety|sign|sin|sqrt|str|tan|thickness|time|timeset|trace|turnxy|update|upper|watch|write|writeline)\b/);return!!t&&{type:"command",content:t[0]}},oe=e=>{const t=e.match(/^(turt[xydtc])\b/);return!!t&&{type:"turtle",content:t[0]}},re=e=>{const t=e.match(/^(green|darkgreen|lightgreen|seagreen|greengrey|greengray|red|darkred|lightred|maroon|redgrey|redgray|blue|darkblue|lightblue|royal|bluegrey|yellow|ochre|cream|gold|yellowgrey|yellowgray|violet|indigo|lilac|purple|darkgrey|darkgray|lime|olive|yellowgreen|emerald|midgrey|midgray|orange|orangered|peach|salmon|lightgrey|lightgray|skyblue|teal|cyan|turquoise|silver|brown|darkbrown|lightbrown|coffee|white|pink|magenta|lightpink|rose|black)\b/);return!!t&&{type:"colour",content:t[0]}},se=e=>{const t=e.match(/^(\\[#a-z0-9]+)/i);return!!t&&{type:"keycode",content:t[0]}},ie=e=>{const t=e.match(/^(\?[a-z]+)\b/);return!!t&&{type:"query",content:t[0]}},ce=e=>{const t=e.match(/^([_a-zA-Z][_a-zA-Z0-9]*)\b/);return!!t&&{type:"identifier",content:t[0]}},le=e=>({type:"illegal",content:e.split(/\b/)[0]});t.a=((e,t)=>{return{BASIC:n,Pascal:T,Python:z}[t](e)})},function(e,t){const a=(e,t,a)=>({index:e,title:t,examples:a});e.exports.help=[a(1,"Drawing, counting, and procedures/methods",["DrawPause","OlympicRings1","OlympicRings2","ThePlough","ForLoop","Circles","NestedLoops","SimpleProcedure","ColourSpiral","ParameterProcedure","Polygons","YouAreHere"]),a(2,"Further commands and structures",["Stars","PolygonRings","Clock","DigitalClock","CycleColours","Triangles","Flashlights","RefParams","Balls3D","AskInput","StringFunctions","MathFunctions","TrigonometricGraphs"]),a(3,"Smooth movement and interaction",["MovingBall","BouncingBall","TurtleMove","TurtleBounce","MultiBounce","GravitySteps","SolarSystem","SimpleDraw","FiveTurtles"]),a(4,"Complex applications",["PaintApp","SnakeGame","Shoot","Mandelbrot","Quine","NoughtsAndCrosses"]),a(5,"Artificial life and social models",["GameOfLife","Schelling","IteratedPD"])],e.exports.csac=[a(1,"Introduction, Computer Science for Fun, and Turtling",["DrawPause","ColourSpiral"]),a(2,"Animation and Movement",["MovingBall","BouncingBall","TurtleMove","TurtleBounce","AskInput"]),a(3,"Computing in Physics: Cannons and Rockets",["GravitySteps","AimCannon","AutoCannon","Launch"]),a(4,"Cellular Automata: Modelling Disease, 'Life', and Shell Patterns",["LifeStart","Disease","GameOfLife","Automata"]),a(5,"Computing in Chemistry: Diffusion and Brownian Motion",["Diffusion","BrownianMotion"]),a(6,"Computing in Biology: Evolution and Behaviour",["Cheetahs","SexRatio","Flocking"]),a(7,"Chaos and Self-Similarity",["Logistic","LogisticSpider","Mandelbrot","MandelbrotMini","MandelbrotSpectrum","MandelbrotMiniSpectrum","Triangles","Sierpinski","SierpinskiDots","IFSBackground","SierpinskiColour","SierpinskiIFS","BarnsleyIFS","BarnsleyColour","TreeIFS","DragonIFS","DragonColour"]),a(8,"Waves and Quantum Mechanics",["Interference","WaveSuperposer","TwoSlits"]),a(9,"Games and Computer Science",["KnightsTour","Nim","NoughtsAndCrosses"]),a(10,"Philosophy and Social Science",["Schelling","IteratedPD"])],e.exports.names={AimCannon:"Firing a cannon (manual)",AskInput:"Asking for typed input",AutoCannon:"Firing a cannon (automatic)",Automata:"One-dimensional cellular automata",Balls3D:"3D colour effects",BarnsleyColour:"Barnsley colour",BarnsleyIFS:"Barnsley IFS",BouncingBall:"Bouncing ball (using variables)",BrownianMotion:"Brownian motion",Cheetahs:"Cheetahs and gazelles",Circles:"Circling circles",Clock:"Analogue clock (using REPEAT)",ColourSpiral:"Spiral of colours",CycleColours:"Cycling colours (using MOD)",Diffusion:"A model of diffusion",DigitalClock:"Digital clock (using IF and WHILE)",Disease:"Spread of disease",DragonColour:"Dragon colour",DragonIFS:"Dragon IFS",DrawPause:"Simple drawing with pauses",FiveTurtles:"Five turtles moving to the mouse",Flashlights:"Using Booleans",Flocking:"Flocking behaviour",ForLoop:"FOR (counting) loop",GameOfLife:"Conway's Game of Life",GravitySteps:"Movement under gravity",IFSBackground:"Iterated function systems (IFS) background",Interference:"Interference",IteratedPD:"Iterated Prisoner's Dilemma",KnightsTour:"Knight's tour",Launch:"Launching a rocket into orbit",LifeStart:"Initialising Conway's Game of Life",Logistic:"Logistic equation",LogisticSpider:"Logistic spider",Mandelbrot:"Mandelbrot set",MandelbrotMini:"Mandelbrot mini",MandelbrotMiniSpectrum:"Mandelbrot mini spectrum",MandelbrotSpectrum:"Mandelbrot spectrum",MathFunctions:"Mathematical functions",MovingBall:"Moving ball (using variables)",MultiBounce:"Multiple bouncing balls",NestedLoops:"Nested FOR loops",Nim:"Nim",NoughtsAndCrosses:"Noughts and crosses",OlympicRings1:"Olympic rings 1 (using PENUP)",OlympicRings2:"Olympic rings 2 (with variable)",PaintApp:"Painting application",ParameterProcedure:"Procedure with parameter",PolygonRings:"Polygon rings",Polygons:"POLYGON and POLYLINE",Quine:"Quine (self-replicating) program",RefParams:"Reference parameters",Schelling:"Schelling's segregation model",SexRatio:"The sex ratio",Shoot:"Arcade shooting game",Sierpinski:"Sierpinski triangle",SierpinskiColour:"Sierpinski colour",SierpinskiDots:"Sierpinski dots",SierpinskiIFS:"Sierpinski IFS",SimpleDraw:"Drawing to the mouse",SimpleProcedure:"Simple procedure",SnakeGame:"Snake (classic game)",SolarSystem:"Solar system (using ARRAY)",Stars:"Stars (using ANGLES and FORGET)",StringFunctions:"String functions",ThePlough:"The plough constellation",TreeIFS:"Tree IFS",Triangles:"Recursive triangles",TrigonometricGraphs:"Trigonometric graphs",TurtleBounce:"Bouncing ball (using the Turtle)",TurtleMove:"Moving ball (using the Turtle)",TwoSlits:"Young's two-slit experiment",WaveSuperposer:"Wave superposer",YouAreHere:"Text and arrow (using PRINT)"}},function(e,t,a){"use strict";a.d(t,"b",function(){return g}),a.d(t,"a",function(){return f});var n=a(1),o=a(4),r=a(3);const s=Object(n.a)("input",{type:"text",placeholder:"filename",on:[{type:"input",callback:e=>{Object(r.b)("set-name",e.currentTarget.value)}}]}),i=Object(n.a)("select",{content:o.f.map(e=>Object(n.a)("option",{content:e,value:e})),on:[{type:"change",callback:e=>{Object(r.b)("set-language",e.currentTarget.value)}}]}),c=Object(n.a)("button",{content:"RUN",classes:["tsx-run-halt-button"],on:[{type:"click",callback:e=>{Object(r.b)("machine-run-halt"),e.currentTarget.blur()}}]}),l=Object(n.a)("button",{content:"&#10074;&#10074;",classes:["tsx-play-pause-button"],on:[{type:"click",callback:e=>{Object(r.b)("machine-play-pause"),e.currentTarget.blur()}}]}),d=Object(n.a)("dd",{classes:["tsx-turtxy"],content:"500"}),u=Object(n.a)("dd",{classes:["tsx-turtxy"],content:"500"}),p=Object(n.a)("dd",{classes:["tsx-turtd"],content:"0"}),m=Object(n.a)("dd",{classes:["tsx-turttc"],content:"2"}),h=Object(n.a)("dd",{classes:["tsx-turttc"],style:"background:#000;"}),b=Object(n.a)("dl",{classes:["tsx-turtle-properties"],content:[Object(n.a)("dt",{content:"X"}),d,Object(n.a)("dt",{content:"Y"}),u,Object(n.a)("dt",{content:"D"}),p,Object(n.a)("dt",{content:"T"}),m,Object(n.a)("dt",{content:"C"}),h]}),g=Object(n.a)("div",{classes:["tsx-controls"],content:[s,i]}),f=Object(n.a)("div",{classes:["tsx-controls"],content:[c,l,b]});Object(r.a)("name-changed",e=>{s.value=e}),Object(r.a)("language-changed",e=>{i.value=e}),Object(r.a)("machine-started",()=>{c.innerHTML="HALT",l.innerHTML="&#10074;&#10074;",d.innerHTML="500",u.innerHTML="500",p.innerHTML="0",m.innerHTML="2",h.style.background="#000"}),Object(r.a)("machine-stopped",()=>{c.innerHTML="RUN",l.innerHTML="&#10074;&#10074;"}),Object(r.a)("machine-played",()=>{l.innerHTML="&#10074;&#10074;"}),Object(r.a)("machine-paused",()=>{l.innerHTML="&#9658;"}),Object(r.a)("turtx-changed",e=>{d.innerHTML=e.toString(10)}),Object(r.a)("turty-changed",e=>{u.innerHTML=e.toString(10)}),Object(r.a)("turtd-changed",e=>{p.innerHTML=e.toString(10)}),Object(r.a)("turtt-changed",e=>{m.innerHTML=e.toString(10)}),Object(r.a)("turtc-changed",e=>{h.style.background=Object(n.c)(e)})},,,function(e,t,a){"use strict";a.r(t);var n=a(1),o=a(8),r=a(7),s=a(0),i=a(2),c=a(3);const l=Object(n.a)("div",{content:[Object(n.a)("div",{classes:["tsx-buttons"],content:[Object(n.a)("button",{content:"New Program",on:[{type:"click",callback:()=>Object(c.b)("new-program")}]}),Object(n.a)("button",{content:"New Skeleton Program",on:[{type:"click",callback:()=>Object(c.b)("new-skeleton-program")}]})]}),Object(n.a)("div",{classes:["tsx-buttons"],content:[Object(n.a)("button",{content:"Open Program",on:[{type:"click",callback:()=>{d.click()}}]}),Object(n.a)("button",{content:"Save Program",on:[{type:"click",callback:()=>{Object(c.b)("save-program")}}]})]})]}),d=Object(n.a)("input",{type:"file",on:[{type:"change",callback:e=>{const t=e.currentTarget.files[0],a=new window.FileReader;a.onload=(()=>{Object(c.b)("set-file",{filename:t.name,content:a.result})}),a.readAsText(t)}}]}),u=e=>Object(n.a)("optgroup",{label:`${e.index}. ${e.title}`,content:e.examples.map(e=>Object(n.a)("option",{value:e,content:r.names[e]}))}),p=e=>Object(n.a)("select",{content:e.map(u),on:[{type:"change",callback:e=>{Object(c.b)("set-example",e.currentTarget.value)}},{type:"focus",callback:e=>{e.currentTarget.selectedIndex=-1}}]}),m=(e,t)=>Object(n.a)("div",{classes:["tsx-file-box"],content:[Object(n.a)("label",{content:e}),t]}),h=m("File",l),b=m("Example Programs",p(r.help)),g=m("CSAC Book Programs",p(r.csac)),f=Object(n.a)("ol"),y=Object(n.a)("code"),x=Object(n.a)("pre",{content:[y]}),w=Object(n.a)("textarea",{wrap:"off",spellcheck:"false",autocapitalize:"off",autocomplete:"off",autocorrect:"off",on:[{type:"keydown",callback:e=>{if(9===e.keyCode){const t=e.currentTarget.selectionStart,a=e.currentTarget.value.slice(0,t),n=e.currentTarget.value.slice(t);e.preventDefault(),e.currentTarget.value=[a,n].join("  "),Object(c.b)("set-code",e.currentTarget.value),e.currentTarget.selectionStart=t+2,e.currentTarget.selectionEnd=t+2}}},{type:"input",callback:e=>{Object(c.b)("set-code",e.currentTarget.value)}}]}),v=Object(n.a)("div",{classes:["tsx-code"],content:[w,f,x]}),k=Object(n.a)("thead",{content:[Object(n.a)("tr",{content:[Object(n.a)("th",{content:"Expression"}),Object(n.a)("th",{content:"Level"}),Object(n.a)("th",{content:"Count"}),Object(n.a)("th",{content:"Program Lines"})]})]}),T=Object(n.a)("tbody"),O=Object(n.a)("table",{classes:["tsx-usage-table"],content:[k,T]}),E=Object(n.a)("input",{type:"radio",name:"pcodeOptions1",on:[{type:"change",callback:()=>Object(c.b)("toggle-assembler")}]}),S=Object(n.a)("input",{type:"radio",name:"pcodeOptions1",on:[{type:"change",callback:()=>Object(c.b)("toggle-assembler")}]}),R=Object(n.a)("input",{type:"radio",name:"pcodeOptions2",on:[{type:"change",callback:()=>Object(c.b)("toggle-decimal")}]}),L=Object(n.a)("input",{type:"radio",name:"pcodeOptions2",on:[{type:"change",callback:()=>Object(c.b)("toggle-decimal")}]}),C=Object(n.a)("div",{classes:["tsx-checkboxes"],content:[Object(n.a)("label",{content:[E,"Assembler Code"]}),Object(n.a)("label",{content:[S,"Machine Code"]}),Object(n.a)("label",{content:[R,"Decimal"]}),Object(n.a)("label",{content:[L,"Hexadecimal"]})]}),P=Object(n.a)("ol",{classes:["tsx-pcode-table"]});Object(c.a)("file-changed",()=>{Object(n.e)("Code")}),Object(c.a)("file-changed",()=>{v.scrollTop=0,v.scrollLeft=0}),Object(c.a)("code-changed",({code:e,language:t})=>{const a=e.split("\n");f.innerHTML=a.map((e,t)=>`<li>${(t+1).toString(10)}</li>`).join(""),y.innerHTML=Object(i.a)(e,t),window.requestAnimationFrame(()=>{w.value=e,w.style.height=`${f.scrollHeight.toString(10)}px`,w.style.width=`${x.scrollWidth.toString(10)}px`})}),Object(c.a)("usage-changed",e=>{T.innerHTML="",e.forEach(e=>{T.appendChild(Object(n.a)("tr",{classes:["category-heading"],content:[Object(n.a)("th",{colspan:"4",content:e.title})]})),e.expressions.forEach(e=>{T.appendChild(Object(n.a)("tr",{content:[Object(n.a)("td",{content:e.name}),Object(n.a)("td",{content:e.level.toString()}),Object(n.a)("td",{content:e.count.toString()}),Object(n.a)("td",{content:e.lines.replace(/ /g,", ")})]}))}),T.appendChild(Object(n.a)("tr",{content:[Object(n.a)("td"),Object(n.a)("th",{content:"TOTAL:"}),Object(n.a)("th",{content:e.total.toString()}),Object(n.a)("td")]}))})}),Object(c.a)("pcode-changed",({pcode:e,assembler:t,decimal:a})=>{t?E.setAttribute("checked","checked"):S.setAttribute("checked","checked"),a?R.setAttribute("checked","checked"):L.setAttribute("checked","checked"),P.innerHTML="",e.map(e=>{const o=t?M(e,0,a):e.reduce((e,t)=>e.concat(I(t,a)),[]);for(;o.length%8>0;)o.push(Object(n.a)("div"));return Object(n.a)("li",{content:o})}).forEach(e=>P.appendChild(e))});const M=(e,t,a)=>{const n=s.b[e[t]],o=n?[I(n.str)]:[I(e[t],a)];let r=0;if(n)if(n.args<0){let a=e[t+1];for(r+=1;r<=a;)r+=1,o.push(I(String.fromCharCode(e[t+r])))}else for(;r<n.args;)r+=1,o.push(I(e[t+r],a));return t+r<e.length-1?o.concat(M(e,t+r+1,a)):o},I=(e,t)=>null===e?Object(n.a)("div",{content:":("}):void 0===t?Object(n.a)("div",{content:e}):t?Object(n.a)("div",{content:e.toString(10)}):Object(n.a)("div",{content:e.toString(16).toUpperCase()}),A=Object(n.a)("button",{content:"Reset Defaults",on:[{type:"click",callback:e=>{Object(c.b)("reset-machine-options"),e.currentTarget.blur()}}]}),N=Object(n.a)("input",{type:"checkbox",on:[{type:"change",callback:e=>Object(c.b)("toggle-show-canvas")}]}),j=Object(n.a)("input",{type:"checkbox",on:[{type:"change",callback:e=>Object(c.b)("toggle-show-output")}]}),D=Object(n.a)("input",{type:"checkbox",on:[{type:"change",callback:e=>Object(c.b)("toggle-show-memory")}]}),F=Object(n.a)("input",{type:"number",min:"1",max:"100"}),B=Object(n.a)("input",{type:"number",min:"0",max:"10000000"}),U=Object(n.a)("input",{type:"number",min:"0",max:"100"}),G=Object(n.a)("input",{type:"number",min:"100",max:"1000000"}),H=[Object(n.a)("div",{classes:["tsx-buttons"],content:[A]}),Object(n.a)("div",{classes:["tsx-checkboxes"],content:[Object(n.a)("label",{content:[N,"Show canvas on run"]}),Object(n.a)("label",{content:[j,"Show output on write"]}),Object(n.a)("label",{content:[D,"Show memory on dump"]})]}),Object(n.a)("div",{classes:["tsx-option"],content:[Object(n.a)("label",{content:["Default number of simultaneous drawing commands:",F]}),Object(n.a)("p",{content:"Performing more than one drawing command at a time greatly increases drawing speed. Set to 1 to see every drawing change individually (slower). Pause and update/noupdate override this default."})]}),Object(n.a)("div",{classes:["tsx-option"],content:[Object(n.a)("label",{content:["Maximum number of commands before forced update:",B]}),Object(n.a)("p",{content:"This number sets how many commands to allow before forcing the canvas to update. A higher number generally results in faster program execution, but some programs can cause the browser (or browser tab) to hang if they execute a large number of commands without ever updating the canvas."})]}),Object(n.a)("div",{classes:["tsx-option"],content:[Object(n.a)("label",{content:["Resolution at which to scale up the canvas:",U]}),Object(n.a)("p",{content:"When the program sets the resolution to this value or less (in either dimension), the machine will artificially double the resolution, and make everything twice as big. This helps very low resolution programs to display more clearly and accurately. Set to 0 to disable."})]}),Object(n.a)("div",{classes:["tsx-option"],content:[Object(n.a)("label",{content:["Memory Stack size, after which Memory Heap starts:",G]}),Object(n.a)("p",{content:"The Memory Stack stores the variables of the program and subroutines, with string variables represented as pointers to the Memory Heap. The Memory Heap lies directly above the Memory Stack, and stores the actual strings. The Memory Stack should be sufficiently large to avoid the storage of program variables overflowing into the Memory Heap."})]})],q=Object(n.a)("canvas",{classes:["tsx-canvas"],width:500,height:500}),$=Object(n.a)("pre",{classes:["tsx-console"]}),z=Object(n.a)("pre",{classes:["tsx-output"]}),W=Object(n.a)("div",{classes:["tsx-buttons"],content:[Object(n.a)("button",{content:"Show Current State",on:[{type:"click",callback:e=>{Object(c.b)("dump-memory")}}]})]}),Y=Object(n.a)("tbody"),X=Object(n.a)("tbody"),V=Object(n.a)("div",{classes:["tsx-memory-container"],content:[Object(n.a)("table",{content:[Object(n.a)("thead",{content:[Object(n.a)("td",{content:"Stack"}),Object(n.a)("th",{content:"+0"}),Object(n.a)("th",{content:"+1"}),Object(n.a)("th",{content:"+2"}),Object(n.a)("th",{content:"+3"}),Object(n.a)("th",{content:"+4"}),Object(n.a)("th",{content:"+5"}),Object(n.a)("th",{content:"+6"}),Object(n.a)("th",{content:"+7"})]}),Y]})]}),K=Object(n.a)("div",{classes:["tsx-memory-container"],content:[Object(n.a)("table",{content:[Object(n.a)("thead",{content:[Object(n.a)("td",{content:"Heap"}),Object(n.a)("th",{content:"+0"}),Object(n.a)("th",{content:"+1"}),Object(n.a)("th",{content:"+2"}),Object(n.a)("th",{content:"+3"}),Object(n.a)("th",{content:"+4"}),Object(n.a)("th",{content:"+5"}),Object(n.a)("th",{content:"+6"}),Object(n.a)("th",{content:"+7"})]}),X]})]});Object(c.a)("show-settings",n.e.bind(null,"Settings")),Object(c.a)("show-canvas",n.e.bind(null,"Canvas")),Object(c.a)("show-output",n.e.bind(null,"Output")),Object(c.a)("show-memory",n.e.bind(null,"Memory")),Object(c.a)("dump-memory",e=>{const t=e=>Object(n.a)("td",{content:e.toString(10)}),a=(e,a)=>{const o=Object(n.a)("th",{content:(8*a).toString(10)});return Object(n.a)("tr",{content:[o].concat(e.map(t))})},o=[],r=[];for(;e.stack.length>0;)o[o.length]=e.stack.splice(0,8);for(;e.heap.length>0;)r[r.length]=e.heap.splice(0,8);window.console.log(o),Y.innerHTML="",X.innerHTML="",o.map(a).forEach(e=>{Y.appendChild(e)}),r.map(a).forEach(e=>{X.appendChild(e)})}),Object(c.a)("show-canvas-changed",e=>{N.checked=e}),Object(c.a)("show-output-changed",e=>{j.checked=e}),Object(c.a)("show-memory-changed",e=>{D.checked=e}),Object(c.a)("draw-count-max-changed",e=>{F.value=e}),Object(c.a)("code-count-max-changed",e=>{B.value=e}),Object(c.a)("small-size-changed",e=>{U.value=e}),Object(c.a)("stack-size-changed",e=>{G.value=e});const Q=document.getElementById("tsx"),_=Object(n.a)("h2"),Z=Object(n.a)("p"),J=Object(n.a)("button",{content:"OK",on:[{type:"click",callback:()=>{oe.classList.remove("tsx-open")}}]}),ee=Object(n.a)("div",{classes:["tsx-modal-buttons"],content:[J]}),te=Object(n.a)("div",{classes:["tsx-modal-head"],content:[_]}),ae=Object(n.a)("div",{classes:["tsx-modal-body"],content:[Z,ee]}),ne=Object(n.a)("div",{classes:["tsx-modal"],content:[te,ae]}),oe=Object(n.a)("div",{classes:["tsx-overlay"],content:[ne]});Q.classList.add("tsx"),document.body.parentElement.classList.add("tsx-browser"),Q.appendChild(Object(n.f)("tsx-top-tabs",[{label:"Program",active:!0,content:[o.b,(e=>e?Object(n.f)("tsx-system-tabs",[{label:"File",active:!1,content:[h,b,g]},{label:"Code",active:!0,content:[v]},{label:"Usage",active:!1,content:[O]},{label:"PCode",active:!1,content:[C,P]}]):Object(n.f)("tsx-system-tabs",[{label:"Code",active:!0,content:[v]},{label:"Usage",active:!1,content:[O]},{label:"PCode",active:!1,content:[C,P]}]))(!0)]},{label:"Machine",active:!1,content:[o.a,(e=>e?Object(n.f)("tsx-system-tabs",[{label:"Settings",active:!1,content:H},{label:"Canvas",active:!0,content:[q,$]},{label:"Output",active:!1,content:[z]},{label:"Memory",active:!1,content:[W,V,K]}]):Object(n.f)("tsx-system-tabs",[{label:"Canvas",active:!0,content:[q,$]},{label:"Output",active:!1,content:[z]},{label:"Memory",active:!1,content:[W,V,K]}]))(!0)]}])),document.body.appendChild(oe),Object(c.a)("error",e=>{console.log(e),e.lexeme&&console.log(e.lexeme),e.type?(_.innerHTML=`${e.type} Error`,Z.innerHTML=e.message,e.lexeme&&(_.innerHTML+=`: "${e.lexeme.content}", line ${e.lexeme.line}`)):(_.innerHTML="System Error",Z.innerHTML="An unexpected error has occured, suggesting there is a bug in the system. Please contact us with details of what you were doing when this message appeared, and we will do our best to locate and fix the bug."),oe.classList.add("tsx-open")}),Object(c.b)("ready")}]);